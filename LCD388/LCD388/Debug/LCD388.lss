
LCD388.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  000008f2  00000986  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  00800120  00800120  000009a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b9b  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  00001627  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044a  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  000021f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044d  00000000  00000000  000022b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004ec  00000000  00000000  00002701  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002bed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ef       	ldi	r30, 0xF2	; 242
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 34       	cpi	r26, 0x4A	; 74
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
  9e:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10lcdcommandc>:
	lcdcommand(0x06);	//entry mode: cursor moves right, DDRAM increments, no display shift
}

void lcdcommand(char cmnd)
{
	PORTD = (PORTD&0x0F)|(cmnd&0xF0);	//cmnd sent 4 bits at a time because in 4 bit mode
  a6:	9b b1       	in	r25, 0x0b	; 11
  a8:	9f 70       	andi	r25, 0x0F	; 15
  aa:	28 2f       	mov	r18, r24
  ac:	20 7f       	andi	r18, 0xF0	; 240
  ae:	92 2b       	or	r25, r18
  b0:	9b b9       	out	0x0b, r25	; 11
	PORTB = 0b00000100;	//enable 1
  b2:	34 e0       	ldi	r19, 0x04	; 4
  b4:	35 b9       	out	0x05, r19	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	45 e0       	ldi	r20, 0x05	; 5
  b8:	4a 95       	dec	r20
  ba:	f1 f7       	brne	.-4      	; 0xb8 <_Z10lcdcommandc+0x12>
  bc:	00 00       	nop
	
	_delay_us(1);
	PORTB = 0b00000000;	//enable 0
  be:	15 b8       	out	0x05, r1	; 5
  c0:	ef e8       	ldi	r30, 0x8F	; 143
  c2:	f1 e0       	ldi	r31, 0x01	; 1
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <_Z10lcdcommandc+0x1e>
  c8:	00 c0       	rjmp	.+0      	; 0xca <_Z10lcdcommandc+0x24>
  ca:	00 00       	nop
	_delay_us(100);
	PORTD = (PORTD&0x0F)|(cmnd<<4);
  cc:	2b b1       	in	r18, 0x0b	; 11
  ce:	2f 70       	andi	r18, 0x0F	; 15
  d0:	f0 e1       	ldi	r31, 0x10	; 16
  d2:	8f 9f       	mul	r24, r31
  d4:	c0 01       	movw	r24, r0
  d6:	11 24       	eor	r1, r1
  d8:	82 2b       	or	r24, r18
  da:	8b b9       	out	0x0b, r24	; 11
	PORTB = 0b00000100;	//enable 1
  dc:	35 b9       	out	0x05, r19	; 5
  de:	45 e0       	ldi	r20, 0x05	; 5
  e0:	4a 95       	dec	r20
  e2:	f1 f7       	brne	.-4      	; 0xe0 <_Z10lcdcommandc+0x3a>
  e4:	00 00       	nop
	_delay_us(1);
	PORTB = 0b00000000;	//enable 0
  e6:	15 b8       	out	0x05, r1	; 5
  e8:	8f e8       	ldi	r24, 0x8F	; 143
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <_Z10lcdcommandc+0x46>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <_Z10lcdcommandc+0x4c>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <_Z13lcdinitializev>:



void lcdinitialize()	//starts the LCD
{
	PORTB = PORTB&(0<<2);	
  f6:	85 b1       	in	r24, 0x05	; 5
  f8:	15 b8       	out	0x05, r1	; 5
  fa:	8f e3       	ldi	r24, 0x3F	; 63
  fc:	9f e1       	ldi	r25, 0x1F	; 31
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <_Z13lcdinitializev+0x8>
 102:	00 c0       	rjmp	.+0      	; 0x104 <_Z13lcdinitializev+0xe>
 104:	00 00       	nop
	_delay_us(2000);
	//lcdcommand(0x33);	//8 bit bus mode
	//lcdcommand(0x32);	//8 bit bus mode
	lcdcommand(0x28);	//4 bit bus mode, 2 line display, 5x11 display
 106:	88 e2       	ldi	r24, 0x28	; 40
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10lcdcommandc>
	lcdcommand(0x0E);	//display on, cursor on, blink off
 10c:	8e e0       	ldi	r24, 0x0E	; 14
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10lcdcommandc>
	lcdcommand(0x01);	//clear display
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10lcdcommandc>
 118:	8f e3       	ldi	r24, 0x3F	; 63
 11a:	9f e1       	ldi	r25, 0x1F	; 31
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <_Z13lcdinitializev+0x26>
 120:	00 c0       	rjmp	.+0      	; 0x122 <_Z13lcdinitializev+0x2c>
 122:	00 00       	nop
	_delay_us(2000);
	lcdcommand(0x06);	//entry mode: cursor moves right, DDRAM increments, no display shift
 124:	86 e0       	ldi	r24, 0x06	; 6
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10lcdcommandc>
 12a:	08 95       	ret

0000012c <_Z10lcd_gotoxycc>:
	_delay_us(100);
	
}

void lcd_gotoxy(char x, char y)
{
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	00 d0       	rcall	.+0      	; 0x132 <_Z10lcd_gotoxycc+0x6>
 132:	00 d0       	rcall	.+0      	; 0x134 <_Z10lcd_gotoxycc+0x8>
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[]={0x80,0xC0,0x94,0xD4};//table 12-5
 138:	90 e8       	ldi	r25, 0x80	; 128
 13a:	99 83       	std	Y+1, r25	; 0x01
 13c:	90 ec       	ldi	r25, 0xC0	; 192
 13e:	9a 83       	std	Y+2, r25	; 0x02
 140:	94 e9       	ldi	r25, 0x94	; 148
 142:	9b 83       	std	Y+3, r25	; 0x03
 144:	94 ed       	ldi	r25, 0xD4	; 212
 146:	9c 83       	std	Y+4, r25	; 0x04
	lcdcommand(firstCharAdr[y-1] + x - 1);
 148:	fe 01       	movw	r30, r28
 14a:	e6 0f       	add	r30, r22
 14c:	f1 1d       	adc	r31, r1
 14e:	81 50       	subi	r24, 0x01	; 1
 150:	90 81       	ld	r25, Z
 152:	89 0f       	add	r24, r25
 154:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10lcdcommandc>
 158:	8f e8       	ldi	r24, 0x8F	; 143
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <_Z10lcd_gotoxycc+0x30>
 160:	00 c0       	rjmp	.+0      	; 0x162 <_Z10lcd_gotoxycc+0x36>
 162:	00 00       	nop
	_delay_us(100);
}
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <_Z7lcddatac>:
	}
}

void lcddata(char data)
{
	PORTD = (PORTD&0x0F)|(data&0xF0);	//mask off high byte of character sent
 172:	9b b1       	in	r25, 0x0b	; 11
 174:	9f 70       	andi	r25, 0x0F	; 15
 176:	28 2f       	mov	r18, r24
 178:	20 7f       	andi	r18, 0xF0	; 240
 17a:	92 2b       	or	r25, r18
 17c:	9b b9       	out	0x0b, r25	; 11
	PORTB = 0b00000101;	//RS is 1
 17e:	45 e0       	ldi	r20, 0x05	; 5
 180:	45 b9       	out	0x05, r20	; 5
 182:	55 e0       	ldi	r21, 0x05	; 5
 184:	5a 95       	dec	r21
 186:	f1 f7       	brne	.-4      	; 0x184 <_Z7lcddatac+0x12>
 188:	00 00       	nop
		//RW is 0
	 //enable is 1
	_delay_us(1);
	PORTB = 0b00000001;	//enable is 0
 18a:	31 e0       	ldi	r19, 0x01	; 1
 18c:	35 b9       	out	0x05, r19	; 5
	PORTD = (PORTD&0x0F)|(data<<4);
 18e:	2b b1       	in	r18, 0x0b	; 11
 190:	2f 70       	andi	r18, 0x0F	; 15
 192:	50 e1       	ldi	r21, 0x10	; 16
 194:	85 9f       	mul	r24, r21
 196:	c0 01       	movw	r24, r0
 198:	11 24       	eor	r1, r1
 19a:	82 2b       	or	r24, r18
 19c:	8b b9       	out	0x0b, r24	; 11
	PORTB = 0b00000101;
 19e:	45 b9       	out	0x05, r20	; 5
 1a0:	85 e0       	ldi	r24, 0x05	; 5
 1a2:	8a 95       	dec	r24
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <_Z7lcddatac+0x30>
 1a6:	00 00       	nop
	_delay_us(1);
	PORTB = 0b00000001;
 1a8:	35 b9       	out	0x05, r19	; 5
 1aa:	8f e8       	ldi	r24, 0x8F	; 143
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <_Z7lcddatac+0x3c>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <_Z7lcddatac+0x42>
 1b4:	00 00       	nop
 1b6:	08 95       	ret

000001b8 <_Z8lcdprintPc>:
	lcdcommand(firstCharAdr[y-1] + x - 1);
	_delay_us(100);
}

void lcdprint( char * str )		//sets up array to print
{
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	fc 01       	movw	r30, r24
	char i = 0 ;
	while(str[i]!=0)
 1c0:	80 81       	ld	r24, Z
 1c2:	88 23       	and	r24, r24
 1c4:	59 f0       	breq	.+22     	; 0x1dc <_Z8lcdprintPc+0x24>
 1c6:	8f 01       	movw	r16, r30
 1c8:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcddata(str[i]);	//sends string characters to lcddata one at a time
 1ca:	0e 94 b9 00 	call	0x172	; 0x172 <_Z7lcddatac>
		i++ ;
 1ce:	cf 5f       	subi	r28, 0xFF	; 255
}

void lcdprint( char * str )		//sets up array to print
{
	char i = 0 ;
	while(str[i]!=0)
 1d0:	f8 01       	movw	r30, r16
 1d2:	ec 0f       	add	r30, r28
 1d4:	f1 1d       	adc	r31, r1
 1d6:	80 81       	ld	r24, Z
 1d8:	81 11       	cpse	r24, r1
 1da:	f7 cf       	rjmp	.-18     	; 0x1ca <_Z8lcdprintPc+0x12>
	{
		lcddata(str[i]);	//sends string characters to lcddata one at a time
		i++ ;
	}
}
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	08 95       	ret

000001e4 <main>:
char strtarget[20];
char stractual[20];

int main(void)
{
   	DDRD = DDRD | 0b11111111;								//ports are output
 1e4:	8a b1       	in	r24, 0x0a	; 10
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	8a b9       	out	0x0a, r24	; 10
   	DDRB = DDRB | 0b11111111;
 1ea:	94 b1       	in	r25, 0x04	; 4
 1ec:	84 b9       	out	0x04, r24	; 4
   	DDRC = DDRC | 0b00100000;
 1ee:	3d 9a       	sbi	0x07, 5	; 7
	
	//Timer 0 is to strobe the LED
	
	//Timer 1 is simply a counter
	//TCNT1 = 0;											//max value based on inches per cycle
	TCCR1A = (0b00<<COM1A0)|(0b00<<COM1B0)|(0b00<<WGM10);	//Normal Mode
 1f0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (0b0<<WGM12)|(0b011<<CS10);					//clock scalar by 64
 1f4:	83 e0       	ldi	r24, 0x03	; 3
 1f6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TIMSK1 = (0b0<<TOIE1);									//disable interrupts for timer1
 1fa:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
											//C function to enable global interrupts
	
    while (1) 
    {
	sprintf(strtarget,"%.4d inches SCL",val);			//val becomes a string
 1fe:	0f 2e       	mov	r0, r31
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	af 2e       	mov	r10, r31
 204:	f1 e0       	ldi	r31, 0x01	; 1
 206:	bf 2e       	mov	r11, r31
 208:	f0 2d       	mov	r31, r0
 20a:	0f 2e       	mov	r0, r31
 20c:	f4 e3       	ldi	r31, 0x34	; 52
 20e:	ef 2e       	mov	r14, r31
 210:	f1 e0       	ldi	r31, 0x01	; 1
 212:	ff 2e       	mov	r15, r31
 214:	f0 2d       	mov	r31, r0
	sprintf(stractual,"%.4d inches WUT",val);			//val becomes a string
 216:	0f 2e       	mov	r0, r31
 218:	f0 e1       	ldi	r31, 0x10	; 16
 21a:	cf 2e       	mov	r12, r31
 21c:	f1 e0       	ldi	r31, 0x01	; 1
 21e:	df 2e       	mov	r13, r31
 220:	f0 2d       	mov	r31, r0
 222:	00 e2       	ldi	r16, 0x20	; 32
 224:	11 e0       	ldi	r17, 0x01	; 1
	lcd_gotoxy(1,2);						//write on the second line
	lcdprint(stractual);

	
	
		PORTC = 0b00100000;
 226:	68 94       	set
 228:	77 24       	eor	r7, r7
 22a:	75 f8       	bld	r7, 5
		_delay_us(10);
		PORTC = 0b00000000;
		
		while ((PINC&(0b00010000))==0b00000000)
		{
			TCNT1 = 0;
 22c:	c4 e8       	ldi	r28, 0x84	; 132
 22e:	d0 e0       	ldi	r29, 0x00	; 0
			
		}
		
		if (TCNT1 >= 2664)
		{
			val = 9999;
 230:	0f 2e       	mov	r0, r31
 232:	ff e0       	ldi	r31, 0x0F	; 15
 234:	8f 2e       	mov	r8, r31
 236:	f7 e2       	ldi	r31, 0x27	; 39
 238:	9f 2e       	mov	r9, r31
 23a:	f0 2d       	mov	r31, r0
	
											//C function to enable global interrupts
	
    while (1) 
    {
	sprintf(strtarget,"%.4d inches SCL",val);			//val becomes a string
 23c:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <val+0x1>
 240:	8f 93       	push	r24
 242:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <val>
 246:	8f 93       	push	r24
 248:	bf 92       	push	r11
 24a:	af 92       	push	r10
 24c:	ff 92       	push	r15
 24e:	ef 92       	push	r14
 250:	0e 94 8d 01 	call	0x31a	; 0x31a <sprintf>
	sprintf(stractual,"%.4d inches WUT",val);			//val becomes a string
 254:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <val+0x1>
 258:	8f 93       	push	r24
 25a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <val>
 25e:	8f 93       	push	r24
 260:	df 92       	push	r13
 262:	cf 92       	push	r12
 264:	1f 93       	push	r17
 266:	0f 93       	push	r16
 268:	0e 94 8d 01 	call	0x31a	; 0x31a <sprintf>
	lcdinitialize();
 26c:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z13lcdinitializev>
	lcd_gotoxy(1,1);						//write on the first line
 270:	61 e0       	ldi	r22, 0x01	; 1
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	0e 94 96 00 	call	0x12c	; 0x12c <_Z10lcd_gotoxycc>
	lcdprint(strtarget);							//that string is sent to the LCD
 278:	c7 01       	movw	r24, r14
 27a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <_Z8lcdprintPc>
	lcd_gotoxy(1,2);						//write on the second line
 27e:	62 e0       	ldi	r22, 0x02	; 2
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	0e 94 96 00 	call	0x12c	; 0x12c <_Z10lcd_gotoxycc>
	lcdprint(stractual);
 286:	c8 01       	movw	r24, r16
 288:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <_Z8lcdprintPc>

	
	
		PORTC = 0b00100000;
 28c:	78 b8       	out	0x08, r7	; 8
 28e:	25 e3       	ldi	r18, 0x35	; 53
 290:	2a 95       	dec	r18
 292:	f1 f7       	brne	.-4      	; 0x290 <main+0xac>
 294:	00 00       	nop
		_delay_us(10);
		PORTC = 0b00000000;
 296:	18 b8       	out	0x08, r1	; 8
		
		while ((PINC&(0b00010000))==0b00000000)
 298:	8d b7       	in	r24, 0x3d	; 61
 29a:	9e b7       	in	r25, 0x3e	; 62
 29c:	0c 96       	adiw	r24, 0x0c	; 12
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	9e bf       	out	0x3e, r25	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	8d bf       	out	0x3d, r24	; 61
 2a8:	34 99       	sbic	0x06, 4	; 6
 2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <main+0xd0>
		{
			TCNT1 = 0;
 2ac:	19 82       	std	Y+1, r1	; 0x01
 2ae:	18 82       	st	Y, r1
	
		PORTC = 0b00100000;
		_delay_us(10);
		PORTC = 0b00000000;
		
		while ((PINC&(0b00010000))==0b00000000)
 2b0:	34 9b       	sbis	0x06, 4	; 6
 2b2:	fc cf       	rjmp	.-8      	; 0x2ac <main+0xc8>
		{
			TCNT1 = 0;
		}
		while ((PINC&(0b00010000))==0b00010000)
 2b4:	34 99       	sbic	0x06, 4	; 6
 2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <main+0xd0>
		{
			
		}
		
		if (TCNT1 >= 2664)
 2b8:	88 81       	ld	r24, Y
 2ba:	99 81       	ldd	r25, Y+1	; 0x01
 2bc:	88 36       	cpi	r24, 0x68	; 104
 2be:	9a 40       	sbci	r25, 0x0A	; 10
 2c0:	28 f0       	brcs	.+10     	; 0x2cc <main+0xe8>
		{
			val = 9999;
 2c2:	90 92 49 01 	sts	0x0149, r9	; 0x800149 <val+0x1>
 2c6:	80 92 48 01 	sts	0x0148, r8	; 0x800148 <val>
 2ca:	0e c0       	rjmp	.+28     	; 0x2e8 <main+0x104>
		}
		else
		{
			val = TCNT1/37;
 2cc:	28 81       	ld	r18, Y
 2ce:	39 81       	ldd	r19, Y+1	; 0x01
 2d0:	ad ea       	ldi	r26, 0xAD	; 173
 2d2:	bb e1       	ldi	r27, 0x1B	; 27
 2d4:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__umulhisi3>
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <val+0x1>
 2e4:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	94 e3       	ldi	r25, 0x34	; 52
 2ec:	2c e0       	ldi	r18, 0x0C	; 12
 2ee:	81 50       	subi	r24, 0x01	; 1
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	20 40       	sbci	r18, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x10a>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x114>
 2f8:	00 00       	nop
 2fa:	a0 cf       	rjmp	.-192    	; 0x23c <main+0x58>

000002fc <__umulhisi3>:
 2fc:	a2 9f       	mul	r26, r18
 2fe:	b0 01       	movw	r22, r0
 300:	b3 9f       	mul	r27, r19
 302:	c0 01       	movw	r24, r0
 304:	a3 9f       	mul	r26, r19
 306:	70 0d       	add	r23, r0
 308:	81 1d       	adc	r24, r1
 30a:	11 24       	eor	r1, r1
 30c:	91 1d       	adc	r25, r1
 30e:	b2 9f       	mul	r27, r18
 310:	70 0d       	add	r23, r0
 312:	81 1d       	adc	r24, r1
 314:	11 24       	eor	r1, r1
 316:	91 1d       	adc	r25, r1
 318:	08 95       	ret

0000031a <sprintf>:
 31a:	ae e0       	ldi	r26, 0x0E	; 14
 31c:	b0 e0       	ldi	r27, 0x00	; 0
 31e:	e3 e9       	ldi	r30, 0x93	; 147
 320:	f1 e0       	ldi	r31, 0x01	; 1
 322:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__prologue_saves__+0x1c>
 326:	0d 89       	ldd	r16, Y+21	; 0x15
 328:	1e 89       	ldd	r17, Y+22	; 0x16
 32a:	86 e0       	ldi	r24, 0x06	; 6
 32c:	8c 83       	std	Y+4, r24	; 0x04
 32e:	1a 83       	std	Y+2, r17	; 0x02
 330:	09 83       	std	Y+1, r16	; 0x01
 332:	8f ef       	ldi	r24, 0xFF	; 255
 334:	9f e7       	ldi	r25, 0x7F	; 127
 336:	9e 83       	std	Y+6, r25	; 0x06
 338:	8d 83       	std	Y+5, r24	; 0x05
 33a:	ae 01       	movw	r20, r28
 33c:	47 5e       	subi	r20, 0xE7	; 231
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	6f 89       	ldd	r22, Y+23	; 0x17
 342:	78 8d       	ldd	r23, Y+24	; 0x18
 344:	ce 01       	movw	r24, r28
 346:	01 96       	adiw	r24, 0x01	; 1
 348:	0e 94 af 01 	call	0x35e	; 0x35e <vfprintf>
 34c:	ef 81       	ldd	r30, Y+7	; 0x07
 34e:	f8 85       	ldd	r31, Y+8	; 0x08
 350:	e0 0f       	add	r30, r16
 352:	f1 1f       	adc	r31, r17
 354:	10 82       	st	Z, r1
 356:	2e 96       	adiw	r28, 0x0e	; 14
 358:	e4 e0       	ldi	r30, 0x04	; 4
 35a:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__epilogue_restores__+0x1c>

0000035e <vfprintf>:
 35e:	ab e0       	ldi	r26, 0x0B	; 11
 360:	b0 e0       	ldi	r27, 0x00	; 0
 362:	e5 eb       	ldi	r30, 0xB5	; 181
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	0c 94 40 04 	jmp	0x880	; 0x880 <__prologue_saves__>
 36a:	6c 01       	movw	r12, r24
 36c:	7b 01       	movw	r14, r22
 36e:	8a 01       	movw	r16, r20
 370:	fc 01       	movw	r30, r24
 372:	17 82       	std	Z+7, r1	; 0x07
 374:	16 82       	std	Z+6, r1	; 0x06
 376:	83 81       	ldd	r24, Z+3	; 0x03
 378:	81 ff       	sbrs	r24, 1
 37a:	cc c1       	rjmp	.+920    	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 37c:	ce 01       	movw	r24, r28
 37e:	01 96       	adiw	r24, 0x01	; 1
 380:	3c 01       	movw	r6, r24
 382:	f6 01       	movw	r30, r12
 384:	93 81       	ldd	r25, Z+3	; 0x03
 386:	f7 01       	movw	r30, r14
 388:	93 fd       	sbrc	r25, 3
 38a:	85 91       	lpm	r24, Z+
 38c:	93 ff       	sbrs	r25, 3
 38e:	81 91       	ld	r24, Z+
 390:	7f 01       	movw	r14, r30
 392:	88 23       	and	r24, r24
 394:	09 f4       	brne	.+2      	; 0x398 <vfprintf+0x3a>
 396:	ba c1       	rjmp	.+884    	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 398:	85 32       	cpi	r24, 0x25	; 37
 39a:	39 f4       	brne	.+14     	; 0x3aa <vfprintf+0x4c>
 39c:	93 fd       	sbrc	r25, 3
 39e:	85 91       	lpm	r24, Z+
 3a0:	93 ff       	sbrs	r25, 3
 3a2:	81 91       	ld	r24, Z+
 3a4:	7f 01       	movw	r14, r30
 3a6:	85 32       	cpi	r24, 0x25	; 37
 3a8:	29 f4       	brne	.+10     	; 0x3b4 <vfprintf+0x56>
 3aa:	b6 01       	movw	r22, r12
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 3b2:	e7 cf       	rjmp	.-50     	; 0x382 <vfprintf+0x24>
 3b4:	91 2c       	mov	r9, r1
 3b6:	21 2c       	mov	r2, r1
 3b8:	31 2c       	mov	r3, r1
 3ba:	ff e1       	ldi	r31, 0x1F	; 31
 3bc:	f3 15       	cp	r31, r3
 3be:	d8 f0       	brcs	.+54     	; 0x3f6 <vfprintf+0x98>
 3c0:	8b 32       	cpi	r24, 0x2B	; 43
 3c2:	79 f0       	breq	.+30     	; 0x3e2 <vfprintf+0x84>
 3c4:	38 f4       	brcc	.+14     	; 0x3d4 <vfprintf+0x76>
 3c6:	80 32       	cpi	r24, 0x20	; 32
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <vfprintf+0x8a>
 3ca:	83 32       	cpi	r24, 0x23	; 35
 3cc:	a1 f4       	brne	.+40     	; 0x3f6 <vfprintf+0x98>
 3ce:	23 2d       	mov	r18, r3
 3d0:	20 61       	ori	r18, 0x10	; 16
 3d2:	1d c0       	rjmp	.+58     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3d4:	8d 32       	cpi	r24, 0x2D	; 45
 3d6:	61 f0       	breq	.+24     	; 0x3f0 <vfprintf+0x92>
 3d8:	80 33       	cpi	r24, 0x30	; 48
 3da:	69 f4       	brne	.+26     	; 0x3f6 <vfprintf+0x98>
 3dc:	23 2d       	mov	r18, r3
 3de:	21 60       	ori	r18, 0x01	; 1
 3e0:	16 c0       	rjmp	.+44     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e2:	83 2d       	mov	r24, r3
 3e4:	82 60       	ori	r24, 0x02	; 2
 3e6:	38 2e       	mov	r3, r24
 3e8:	e3 2d       	mov	r30, r3
 3ea:	e4 60       	ori	r30, 0x04	; 4
 3ec:	3e 2e       	mov	r3, r30
 3ee:	2a c0       	rjmp	.+84     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3f0:	f3 2d       	mov	r31, r3
 3f2:	f8 60       	ori	r31, 0x08	; 8
 3f4:	1d c0       	rjmp	.+58     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3f6:	37 fc       	sbrc	r3, 7
 3f8:	2d c0       	rjmp	.+90     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 3fa:	20 ed       	ldi	r18, 0xD0	; 208
 3fc:	28 0f       	add	r18, r24
 3fe:	2a 30       	cpi	r18, 0x0A	; 10
 400:	40 f0       	brcs	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	8e 32       	cpi	r24, 0x2E	; 46
 404:	b9 f4       	brne	.+46     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 406:	36 fc       	sbrc	r3, 6
 408:	81 c1       	rjmp	.+770    	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 40a:	23 2d       	mov	r18, r3
 40c:	20 64       	ori	r18, 0x40	; 64
 40e:	32 2e       	mov	r3, r18
 410:	19 c0       	rjmp	.+50     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 412:	36 fe       	sbrs	r3, 6
 414:	06 c0       	rjmp	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	8a e0       	ldi	r24, 0x0A	; 10
 418:	98 9e       	mul	r9, r24
 41a:	20 0d       	add	r18, r0
 41c:	11 24       	eor	r1, r1
 41e:	92 2e       	mov	r9, r18
 420:	11 c0       	rjmp	.+34     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 422:	ea e0       	ldi	r30, 0x0A	; 10
 424:	2e 9e       	mul	r2, r30
 426:	20 0d       	add	r18, r0
 428:	11 24       	eor	r1, r1
 42a:	22 2e       	mov	r2, r18
 42c:	f3 2d       	mov	r31, r3
 42e:	f0 62       	ori	r31, 0x20	; 32
 430:	3f 2e       	mov	r3, r31
 432:	08 c0       	rjmp	.+16     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 434:	8c 36       	cpi	r24, 0x6C	; 108
 436:	21 f4       	brne	.+8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 438:	83 2d       	mov	r24, r3
 43a:	80 68       	ori	r24, 0x80	; 128
 43c:	38 2e       	mov	r3, r24
 43e:	02 c0       	rjmp	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 440:	88 36       	cpi	r24, 0x68	; 104
 442:	41 f4       	brne	.+16     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 444:	f7 01       	movw	r30, r14
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	7f 01       	movw	r14, r30
 450:	81 11       	cpse	r24, r1
 452:	b3 cf       	rjmp	.-154    	; 0x3ba <vfprintf+0x5c>
 454:	98 2f       	mov	r25, r24
 456:	9f 7d       	andi	r25, 0xDF	; 223
 458:	95 54       	subi	r25, 0x45	; 69
 45a:	93 30       	cpi	r25, 0x03	; 3
 45c:	28 f4       	brcc	.+10     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45e:	0c 5f       	subi	r16, 0xFC	; 252
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	9f e3       	ldi	r25, 0x3F	; 63
 464:	99 83       	std	Y+1, r25	; 0x01
 466:	0d c0       	rjmp	.+26     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 468:	83 36       	cpi	r24, 0x63	; 99
 46a:	31 f0       	breq	.+12     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 46c:	83 37       	cpi	r24, 0x73	; 115
 46e:	71 f0       	breq	.+28     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 470:	83 35       	cpi	r24, 0x53	; 83
 472:	09 f0       	breq	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 474:	59 c0       	rjmp	.+178    	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 476:	21 c0       	rjmp	.+66     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 478:	f8 01       	movw	r30, r16
 47a:	80 81       	ld	r24, Z
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	0e 5f       	subi	r16, 0xFE	; 254
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	88 24       	eor	r8, r8
 484:	83 94       	inc	r8
 486:	91 2c       	mov	r9, r1
 488:	53 01       	movw	r10, r6
 48a:	13 c0       	rjmp	.+38     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 48c:	28 01       	movw	r4, r16
 48e:	f2 e0       	ldi	r31, 0x02	; 2
 490:	4f 0e       	add	r4, r31
 492:	51 1c       	adc	r5, r1
 494:	f8 01       	movw	r30, r16
 496:	a0 80       	ld	r10, Z
 498:	b1 80       	ldd	r11, Z+1	; 0x01
 49a:	36 fe       	sbrs	r3, 6
 49c:	03 c0       	rjmp	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49e:	69 2d       	mov	r22, r9
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	6f ef       	ldi	r22, 0xFF	; 255
 4a6:	7f ef       	ldi	r23, 0xFF	; 255
 4a8:	c5 01       	movw	r24, r10
 4aa:	0e 94 9b 03 	call	0x736	; 0x736 <strnlen>
 4ae:	4c 01       	movw	r8, r24
 4b0:	82 01       	movw	r16, r4
 4b2:	f3 2d       	mov	r31, r3
 4b4:	ff 77       	andi	r31, 0x7F	; 127
 4b6:	3f 2e       	mov	r3, r31
 4b8:	16 c0       	rjmp	.+44     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4ba:	28 01       	movw	r4, r16
 4bc:	22 e0       	ldi	r18, 0x02	; 2
 4be:	42 0e       	add	r4, r18
 4c0:	51 1c       	adc	r5, r1
 4c2:	f8 01       	movw	r30, r16
 4c4:	a0 80       	ld	r10, Z
 4c6:	b1 80       	ldd	r11, Z+1	; 0x01
 4c8:	36 fe       	sbrs	r3, 6
 4ca:	03 c0       	rjmp	.+6      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4cc:	69 2d       	mov	r22, r9
 4ce:	70 e0       	ldi	r23, 0x00	; 0
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	6f ef       	ldi	r22, 0xFF	; 255
 4d4:	7f ef       	ldi	r23, 0xFF	; 255
 4d6:	c5 01       	movw	r24, r10
 4d8:	0e 94 90 03 	call	0x720	; 0x720 <strnlen_P>
 4dc:	4c 01       	movw	r8, r24
 4de:	f3 2d       	mov	r31, r3
 4e0:	f0 68       	ori	r31, 0x80	; 128
 4e2:	3f 2e       	mov	r3, r31
 4e4:	82 01       	movw	r16, r4
 4e6:	33 fc       	sbrc	r3, 3
 4e8:	1b c0       	rjmp	.+54     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4ea:	82 2d       	mov	r24, r2
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	88 16       	cp	r8, r24
 4f0:	99 06       	cpc	r9, r25
 4f2:	b0 f4       	brcc	.+44     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4f4:	b6 01       	movw	r22, r12
 4f6:	80 e2       	ldi	r24, 0x20	; 32
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 4fe:	2a 94       	dec	r2
 500:	f4 cf       	rjmp	.-24     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 502:	f5 01       	movw	r30, r10
 504:	37 fc       	sbrc	r3, 7
 506:	85 91       	lpm	r24, Z+
 508:	37 fe       	sbrs	r3, 7
 50a:	81 91       	ld	r24, Z+
 50c:	5f 01       	movw	r10, r30
 50e:	b6 01       	movw	r22, r12
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 516:	21 10       	cpse	r2, r1
 518:	2a 94       	dec	r2
 51a:	21 e0       	ldi	r18, 0x01	; 1
 51c:	82 1a       	sub	r8, r18
 51e:	91 08       	sbc	r9, r1
 520:	81 14       	cp	r8, r1
 522:	91 04       	cpc	r9, r1
 524:	71 f7       	brne	.-36     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 526:	e8 c0       	rjmp	.+464    	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 528:	84 36       	cpi	r24, 0x64	; 100
 52a:	11 f0       	breq	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	89 36       	cpi	r24, 0x69	; 105
 52e:	41 f5       	brne	.+80     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 530:	f8 01       	movw	r30, r16
 532:	37 fe       	sbrs	r3, 7
 534:	07 c0       	rjmp	.+14     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 536:	60 81       	ld	r22, Z
 538:	71 81       	ldd	r23, Z+1	; 0x01
 53a:	82 81       	ldd	r24, Z+2	; 0x02
 53c:	93 81       	ldd	r25, Z+3	; 0x03
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	08 c0       	rjmp	.+16     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 544:	60 81       	ld	r22, Z
 546:	71 81       	ldd	r23, Z+1	; 0x01
 548:	07 2e       	mov	r0, r23
 54a:	00 0c       	add	r0, r0
 54c:	88 0b       	sbc	r24, r24
 54e:	99 0b       	sbc	r25, r25
 550:	0e 5f       	subi	r16, 0xFE	; 254
 552:	1f 4f       	sbci	r17, 0xFF	; 255
 554:	f3 2d       	mov	r31, r3
 556:	ff 76       	andi	r31, 0x6F	; 111
 558:	3f 2e       	mov	r3, r31
 55a:	97 ff       	sbrs	r25, 7
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 55e:	90 95       	com	r25
 560:	80 95       	com	r24
 562:	70 95       	com	r23
 564:	61 95       	neg	r22
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	f0 68       	ori	r31, 0x80	; 128
 56e:	3f 2e       	mov	r3, r31
 570:	2a e0       	ldi	r18, 0x0A	; 10
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	a3 01       	movw	r20, r6
 576:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <__ultoa_invert>
 57a:	88 2e       	mov	r8, r24
 57c:	86 18       	sub	r8, r6
 57e:	45 c0       	rjmp	.+138    	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 580:	85 37       	cpi	r24, 0x75	; 117
 582:	31 f4       	brne	.+12     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 584:	23 2d       	mov	r18, r3
 586:	2f 7e       	andi	r18, 0xEF	; 239
 588:	b2 2e       	mov	r11, r18
 58a:	2a e0       	ldi	r18, 0x0A	; 10
 58c:	30 e0       	ldi	r19, 0x00	; 0
 58e:	25 c0       	rjmp	.+74     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 590:	93 2d       	mov	r25, r3
 592:	99 7f       	andi	r25, 0xF9	; 249
 594:	b9 2e       	mov	r11, r25
 596:	8f 36       	cpi	r24, 0x6F	; 111
 598:	c1 f0       	breq	.+48     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 59a:	18 f4       	brcc	.+6      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59c:	88 35       	cpi	r24, 0x58	; 88
 59e:	79 f0       	breq	.+30     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a0:	b5 c0       	rjmp	.+362    	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 5a2:	80 37       	cpi	r24, 0x70	; 112
 5a4:	19 f0       	breq	.+6      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a6:	88 37       	cpi	r24, 0x78	; 120
 5a8:	21 f0       	breq	.+8      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5aa:	b0 c0       	rjmp	.+352    	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 5ac:	e9 2f       	mov	r30, r25
 5ae:	e0 61       	ori	r30, 0x10	; 16
 5b0:	be 2e       	mov	r11, r30
 5b2:	b4 fe       	sbrs	r11, 4
 5b4:	0d c0       	rjmp	.+26     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5b6:	fb 2d       	mov	r31, r11
 5b8:	f4 60       	ori	r31, 0x04	; 4
 5ba:	bf 2e       	mov	r11, r31
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5be:	34 fe       	sbrs	r3, 4
 5c0:	0a c0       	rjmp	.+20     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5c2:	29 2f       	mov	r18, r25
 5c4:	26 60       	ori	r18, 0x06	; 6
 5c6:	b2 2e       	mov	r11, r18
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ca:	28 e0       	ldi	r18, 0x08	; 8
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	05 c0       	rjmp	.+10     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d0:	20 e1       	ldi	r18, 0x10	; 16
 5d2:	30 e0       	ldi	r19, 0x00	; 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d6:	20 e1       	ldi	r18, 0x10	; 16
 5d8:	32 e0       	ldi	r19, 0x02	; 2
 5da:	f8 01       	movw	r30, r16
 5dc:	b7 fe       	sbrs	r11, 7
 5de:	07 c0       	rjmp	.+14     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	82 81       	ldd	r24, Z+2	; 0x02
 5e6:	93 81       	ldd	r25, Z+3	; 0x03
 5e8:	0c 5f       	subi	r16, 0xFC	; 252
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
 5ec:	06 c0       	rjmp	.+12     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	80 e0       	ldi	r24, 0x00	; 0
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 5f       	subi	r16, 0xFE	; 254
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	a3 01       	movw	r20, r6
 5fc:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <__ultoa_invert>
 600:	88 2e       	mov	r8, r24
 602:	86 18       	sub	r8, r6
 604:	fb 2d       	mov	r31, r11
 606:	ff 77       	andi	r31, 0x7F	; 127
 608:	3f 2e       	mov	r3, r31
 60a:	36 fe       	sbrs	r3, 6
 60c:	0d c0       	rjmp	.+26     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 60e:	23 2d       	mov	r18, r3
 610:	2e 7f       	andi	r18, 0xFE	; 254
 612:	a2 2e       	mov	r10, r18
 614:	89 14       	cp	r8, r9
 616:	58 f4       	brcc	.+22     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 618:	34 fe       	sbrs	r3, 4
 61a:	0b c0       	rjmp	.+22     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 61c:	32 fc       	sbrc	r3, 2
 61e:	09 c0       	rjmp	.+18     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 620:	83 2d       	mov	r24, r3
 622:	8e 7e       	andi	r24, 0xEE	; 238
 624:	a8 2e       	mov	r10, r24
 626:	05 c0       	rjmp	.+10     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 628:	b8 2c       	mov	r11, r8
 62a:	a3 2c       	mov	r10, r3
 62c:	03 c0       	rjmp	.+6      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62e:	b8 2c       	mov	r11, r8
 630:	01 c0       	rjmp	.+2      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 632:	b9 2c       	mov	r11, r9
 634:	a4 fe       	sbrs	r10, 4
 636:	0f c0       	rjmp	.+30     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 638:	fe 01       	movw	r30, r28
 63a:	e8 0d       	add	r30, r8
 63c:	f1 1d       	adc	r31, r1
 63e:	80 81       	ld	r24, Z
 640:	80 33       	cpi	r24, 0x30	; 48
 642:	21 f4       	brne	.+8      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 644:	9a 2d       	mov	r25, r10
 646:	99 7e       	andi	r25, 0xE9	; 233
 648:	a9 2e       	mov	r10, r25
 64a:	09 c0       	rjmp	.+18     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 64c:	a2 fe       	sbrs	r10, 2
 64e:	06 c0       	rjmp	.+12     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 650:	b3 94       	inc	r11
 652:	b3 94       	inc	r11
 654:	04 c0       	rjmp	.+8      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 656:	8a 2d       	mov	r24, r10
 658:	86 78       	andi	r24, 0x86	; 134
 65a:	09 f0       	breq	.+2      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65c:	b3 94       	inc	r11
 65e:	a3 fc       	sbrc	r10, 3
 660:	11 c0       	rjmp	.+34     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 662:	a0 fe       	sbrs	r10, 0
 664:	06 c0       	rjmp	.+12     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 666:	b2 14       	cp	r11, r2
 668:	88 f4       	brcc	.+34     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 66a:	28 0c       	add	r2, r8
 66c:	92 2c       	mov	r9, r2
 66e:	9b 18       	sub	r9, r11
 670:	0e c0       	rjmp	.+28     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 672:	b2 14       	cp	r11, r2
 674:	60 f4       	brcc	.+24     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 676:	b6 01       	movw	r22, r12
 678:	80 e2       	ldi	r24, 0x20	; 32
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 680:	b3 94       	inc	r11
 682:	f7 cf       	rjmp	.-18     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 684:	b2 14       	cp	r11, r2
 686:	18 f4       	brcc	.+6      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 688:	2b 18       	sub	r2, r11
 68a:	02 c0       	rjmp	.+4      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68c:	98 2c       	mov	r9, r8
 68e:	21 2c       	mov	r2, r1
 690:	a4 fe       	sbrs	r10, 4
 692:	10 c0       	rjmp	.+32     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 694:	b6 01       	movw	r22, r12
 696:	80 e3       	ldi	r24, 0x30	; 48
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 69e:	a2 fe       	sbrs	r10, 2
 6a0:	17 c0       	rjmp	.+46     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6a2:	a1 fc       	sbrc	r10, 1
 6a4:	03 c0       	rjmp	.+6      	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6a6:	88 e7       	ldi	r24, 0x78	; 120
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6ac:	88 e5       	ldi	r24, 0x58	; 88
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	b6 01       	movw	r22, r12
 6b2:	0c c0       	rjmp	.+24     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6b4:	8a 2d       	mov	r24, r10
 6b6:	86 78       	andi	r24, 0x86	; 134
 6b8:	59 f0       	breq	.+22     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ba:	a1 fe       	sbrs	r10, 1
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6be:	8b e2       	ldi	r24, 0x2B	; 43
 6c0:	01 c0       	rjmp	.+2      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6c2:	80 e2       	ldi	r24, 0x20	; 32
 6c4:	a7 fc       	sbrc	r10, 7
 6c6:	8d e2       	ldi	r24, 0x2D	; 45
 6c8:	b6 01       	movw	r22, r12
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 6d0:	89 14       	cp	r8, r9
 6d2:	38 f4       	brcc	.+14     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d4:	b6 01       	movw	r22, r12
 6d6:	80 e3       	ldi	r24, 0x30	; 48
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 6de:	9a 94       	dec	r9
 6e0:	f7 cf       	rjmp	.-18     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6e2:	8a 94       	dec	r8
 6e4:	f3 01       	movw	r30, r6
 6e6:	e8 0d       	add	r30, r8
 6e8:	f1 1d       	adc	r31, r1
 6ea:	80 81       	ld	r24, Z
 6ec:	b6 01       	movw	r22, r12
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 6f4:	81 10       	cpse	r8, r1
 6f6:	f5 cf       	rjmp	.-22     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6f8:	22 20       	and	r2, r2
 6fa:	09 f4       	brne	.+2      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6fc:	42 ce       	rjmp	.-892    	; 0x382 <vfprintf+0x24>
 6fe:	b6 01       	movw	r22, r12
 700:	80 e2       	ldi	r24, 0x20	; 32
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	0e 94 a6 03 	call	0x74c	; 0x74c <fputc>
 708:	2a 94       	dec	r2
 70a:	f6 cf       	rjmp	.-20     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 70c:	f6 01       	movw	r30, r12
 70e:	86 81       	ldd	r24, Z+6	; 0x06
 710:	97 81       	ldd	r25, Z+7	; 0x07
 712:	02 c0       	rjmp	.+4      	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 714:	8f ef       	ldi	r24, 0xFF	; 255
 716:	9f ef       	ldi	r25, 0xFF	; 255
 718:	2b 96       	adiw	r28, 0x0b	; 11
 71a:	e2 e1       	ldi	r30, 0x12	; 18
 71c:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__epilogue_restores__>

00000720 <strnlen_P>:
 720:	fc 01       	movw	r30, r24
 722:	05 90       	lpm	r0, Z+
 724:	61 50       	subi	r22, 0x01	; 1
 726:	70 40       	sbci	r23, 0x00	; 0
 728:	01 10       	cpse	r0, r1
 72a:	d8 f7       	brcc	.-10     	; 0x722 <strnlen_P+0x2>
 72c:	80 95       	com	r24
 72e:	90 95       	com	r25
 730:	8e 0f       	add	r24, r30
 732:	9f 1f       	adc	r25, r31
 734:	08 95       	ret

00000736 <strnlen>:
 736:	fc 01       	movw	r30, r24
 738:	61 50       	subi	r22, 0x01	; 1
 73a:	70 40       	sbci	r23, 0x00	; 0
 73c:	01 90       	ld	r0, Z+
 73e:	01 10       	cpse	r0, r1
 740:	d8 f7       	brcc	.-10     	; 0x738 <strnlen+0x2>
 742:	80 95       	com	r24
 744:	90 95       	com	r25
 746:	8e 0f       	add	r24, r30
 748:	9f 1f       	adc	r25, r31
 74a:	08 95       	ret

0000074c <fputc>:
 74c:	0f 93       	push	r16
 74e:	1f 93       	push	r17
 750:	cf 93       	push	r28
 752:	df 93       	push	r29
 754:	fb 01       	movw	r30, r22
 756:	23 81       	ldd	r18, Z+3	; 0x03
 758:	21 fd       	sbrc	r18, 1
 75a:	03 c0       	rjmp	.+6      	; 0x762 <fputc+0x16>
 75c:	8f ef       	ldi	r24, 0xFF	; 255
 75e:	9f ef       	ldi	r25, 0xFF	; 255
 760:	2c c0       	rjmp	.+88     	; 0x7ba <fputc+0x6e>
 762:	22 ff       	sbrs	r18, 2
 764:	16 c0       	rjmp	.+44     	; 0x792 <fputc+0x46>
 766:	46 81       	ldd	r20, Z+6	; 0x06
 768:	57 81       	ldd	r21, Z+7	; 0x07
 76a:	24 81       	ldd	r18, Z+4	; 0x04
 76c:	35 81       	ldd	r19, Z+5	; 0x05
 76e:	42 17       	cp	r20, r18
 770:	53 07       	cpc	r21, r19
 772:	44 f4       	brge	.+16     	; 0x784 <fputc+0x38>
 774:	a0 81       	ld	r26, Z
 776:	b1 81       	ldd	r27, Z+1	; 0x01
 778:	9d 01       	movw	r18, r26
 77a:	2f 5f       	subi	r18, 0xFF	; 255
 77c:	3f 4f       	sbci	r19, 0xFF	; 255
 77e:	31 83       	std	Z+1, r19	; 0x01
 780:	20 83       	st	Z, r18
 782:	8c 93       	st	X, r24
 784:	26 81       	ldd	r18, Z+6	; 0x06
 786:	37 81       	ldd	r19, Z+7	; 0x07
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	37 83       	std	Z+7, r19	; 0x07
 78e:	26 83       	std	Z+6, r18	; 0x06
 790:	14 c0       	rjmp	.+40     	; 0x7ba <fputc+0x6e>
 792:	8b 01       	movw	r16, r22
 794:	ec 01       	movw	r28, r24
 796:	fb 01       	movw	r30, r22
 798:	00 84       	ldd	r0, Z+8	; 0x08
 79a:	f1 85       	ldd	r31, Z+9	; 0x09
 79c:	e0 2d       	mov	r30, r0
 79e:	09 95       	icall
 7a0:	89 2b       	or	r24, r25
 7a2:	e1 f6       	brne	.-72     	; 0x75c <fputc+0x10>
 7a4:	d8 01       	movw	r26, r16
 7a6:	16 96       	adiw	r26, 0x06	; 6
 7a8:	8d 91       	ld	r24, X+
 7aa:	9c 91       	ld	r25, X
 7ac:	17 97       	sbiw	r26, 0x07	; 7
 7ae:	01 96       	adiw	r24, 0x01	; 1
 7b0:	17 96       	adiw	r26, 0x07	; 7
 7b2:	9c 93       	st	X, r25
 7b4:	8e 93       	st	-X, r24
 7b6:	16 97       	sbiw	r26, 0x06	; 6
 7b8:	ce 01       	movw	r24, r28
 7ba:	df 91       	pop	r29
 7bc:	cf 91       	pop	r28
 7be:	1f 91       	pop	r17
 7c0:	0f 91       	pop	r16
 7c2:	08 95       	ret

000007c4 <__ultoa_invert>:
 7c4:	fa 01       	movw	r30, r20
 7c6:	aa 27       	eor	r26, r26
 7c8:	28 30       	cpi	r18, 0x08	; 8
 7ca:	51 f1       	breq	.+84     	; 0x820 <__ultoa_invert+0x5c>
 7cc:	20 31       	cpi	r18, 0x10	; 16
 7ce:	81 f1       	breq	.+96     	; 0x830 <__ultoa_invert+0x6c>
 7d0:	e8 94       	clt
 7d2:	6f 93       	push	r22
 7d4:	6e 7f       	andi	r22, 0xFE	; 254
 7d6:	6e 5f       	subi	r22, 0xFE	; 254
 7d8:	7f 4f       	sbci	r23, 0xFF	; 255
 7da:	8f 4f       	sbci	r24, 0xFF	; 255
 7dc:	9f 4f       	sbci	r25, 0xFF	; 255
 7de:	af 4f       	sbci	r26, 0xFF	; 255
 7e0:	b1 e0       	ldi	r27, 0x01	; 1
 7e2:	3e d0       	rcall	.+124    	; 0x860 <__ultoa_invert+0x9c>
 7e4:	b4 e0       	ldi	r27, 0x04	; 4
 7e6:	3c d0       	rcall	.+120    	; 0x860 <__ultoa_invert+0x9c>
 7e8:	67 0f       	add	r22, r23
 7ea:	78 1f       	adc	r23, r24
 7ec:	89 1f       	adc	r24, r25
 7ee:	9a 1f       	adc	r25, r26
 7f0:	a1 1d       	adc	r26, r1
 7f2:	68 0f       	add	r22, r24
 7f4:	79 1f       	adc	r23, r25
 7f6:	8a 1f       	adc	r24, r26
 7f8:	91 1d       	adc	r25, r1
 7fa:	a1 1d       	adc	r26, r1
 7fc:	6a 0f       	add	r22, r26
 7fe:	71 1d       	adc	r23, r1
 800:	81 1d       	adc	r24, r1
 802:	91 1d       	adc	r25, r1
 804:	a1 1d       	adc	r26, r1
 806:	20 d0       	rcall	.+64     	; 0x848 <__ultoa_invert+0x84>
 808:	09 f4       	brne	.+2      	; 0x80c <__ultoa_invert+0x48>
 80a:	68 94       	set
 80c:	3f 91       	pop	r19
 80e:	2a e0       	ldi	r18, 0x0A	; 10
 810:	26 9f       	mul	r18, r22
 812:	11 24       	eor	r1, r1
 814:	30 19       	sub	r19, r0
 816:	30 5d       	subi	r19, 0xD0	; 208
 818:	31 93       	st	Z+, r19
 81a:	de f6       	brtc	.-74     	; 0x7d2 <__ultoa_invert+0xe>
 81c:	cf 01       	movw	r24, r30
 81e:	08 95       	ret
 820:	46 2f       	mov	r20, r22
 822:	47 70       	andi	r20, 0x07	; 7
 824:	40 5d       	subi	r20, 0xD0	; 208
 826:	41 93       	st	Z+, r20
 828:	b3 e0       	ldi	r27, 0x03	; 3
 82a:	0f d0       	rcall	.+30     	; 0x84a <__ultoa_invert+0x86>
 82c:	c9 f7       	brne	.-14     	; 0x820 <__ultoa_invert+0x5c>
 82e:	f6 cf       	rjmp	.-20     	; 0x81c <__ultoa_invert+0x58>
 830:	46 2f       	mov	r20, r22
 832:	4f 70       	andi	r20, 0x0F	; 15
 834:	40 5d       	subi	r20, 0xD0	; 208
 836:	4a 33       	cpi	r20, 0x3A	; 58
 838:	18 f0       	brcs	.+6      	; 0x840 <__ultoa_invert+0x7c>
 83a:	49 5d       	subi	r20, 0xD9	; 217
 83c:	31 fd       	sbrc	r19, 1
 83e:	40 52       	subi	r20, 0x20	; 32
 840:	41 93       	st	Z+, r20
 842:	02 d0       	rcall	.+4      	; 0x848 <__ultoa_invert+0x84>
 844:	a9 f7       	brne	.-22     	; 0x830 <__ultoa_invert+0x6c>
 846:	ea cf       	rjmp	.-44     	; 0x81c <__ultoa_invert+0x58>
 848:	b4 e0       	ldi	r27, 0x04	; 4
 84a:	a6 95       	lsr	r26
 84c:	97 95       	ror	r25
 84e:	87 95       	ror	r24
 850:	77 95       	ror	r23
 852:	67 95       	ror	r22
 854:	ba 95       	dec	r27
 856:	c9 f7       	brne	.-14     	; 0x84a <__ultoa_invert+0x86>
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	61 05       	cpc	r22, r1
 85c:	71 05       	cpc	r23, r1
 85e:	08 95       	ret
 860:	9b 01       	movw	r18, r22
 862:	ac 01       	movw	r20, r24
 864:	0a 2e       	mov	r0, r26
 866:	06 94       	lsr	r0
 868:	57 95       	ror	r21
 86a:	47 95       	ror	r20
 86c:	37 95       	ror	r19
 86e:	27 95       	ror	r18
 870:	ba 95       	dec	r27
 872:	c9 f7       	brne	.-14     	; 0x866 <__ultoa_invert+0xa2>
 874:	62 0f       	add	r22, r18
 876:	73 1f       	adc	r23, r19
 878:	84 1f       	adc	r24, r20
 87a:	95 1f       	adc	r25, r21
 87c:	a0 1d       	adc	r26, r0
 87e:	08 95       	ret

00000880 <__prologue_saves__>:
 880:	2f 92       	push	r2
 882:	3f 92       	push	r3
 884:	4f 92       	push	r4
 886:	5f 92       	push	r5
 888:	6f 92       	push	r6
 88a:	7f 92       	push	r7
 88c:	8f 92       	push	r8
 88e:	9f 92       	push	r9
 890:	af 92       	push	r10
 892:	bf 92       	push	r11
 894:	cf 92       	push	r12
 896:	df 92       	push	r13
 898:	ef 92       	push	r14
 89a:	ff 92       	push	r15
 89c:	0f 93       	push	r16
 89e:	1f 93       	push	r17
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	cd b7       	in	r28, 0x3d	; 61
 8a6:	de b7       	in	r29, 0x3e	; 62
 8a8:	ca 1b       	sub	r28, r26
 8aa:	db 0b       	sbc	r29, r27
 8ac:	0f b6       	in	r0, 0x3f	; 63
 8ae:	f8 94       	cli
 8b0:	de bf       	out	0x3e, r29	; 62
 8b2:	0f be       	out	0x3f, r0	; 63
 8b4:	cd bf       	out	0x3d, r28	; 61
 8b6:	09 94       	ijmp

000008b8 <__epilogue_restores__>:
 8b8:	2a 88       	ldd	r2, Y+18	; 0x12
 8ba:	39 88       	ldd	r3, Y+17	; 0x11
 8bc:	48 88       	ldd	r4, Y+16	; 0x10
 8be:	5f 84       	ldd	r5, Y+15	; 0x0f
 8c0:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c2:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c4:	8c 84       	ldd	r8, Y+12	; 0x0c
 8c6:	9b 84       	ldd	r9, Y+11	; 0x0b
 8c8:	aa 84       	ldd	r10, Y+10	; 0x0a
 8ca:	b9 84       	ldd	r11, Y+9	; 0x09
 8cc:	c8 84       	ldd	r12, Y+8	; 0x08
 8ce:	df 80       	ldd	r13, Y+7	; 0x07
 8d0:	ee 80       	ldd	r14, Y+6	; 0x06
 8d2:	fd 80       	ldd	r15, Y+5	; 0x05
 8d4:	0c 81       	ldd	r16, Y+4	; 0x04
 8d6:	1b 81       	ldd	r17, Y+3	; 0x03
 8d8:	aa 81       	ldd	r26, Y+2	; 0x02
 8da:	b9 81       	ldd	r27, Y+1	; 0x01
 8dc:	ce 0f       	add	r28, r30
 8de:	d1 1d       	adc	r29, r1
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	de bf       	out	0x3e, r29	; 62
 8e6:	0f be       	out	0x3f, r0	; 63
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	ed 01       	movw	r28, r26
 8ec:	08 95       	ret

000008ee <_exit>:
 8ee:	f8 94       	cli

000008f0 <__stop_program>:
 8f0:	ff cf       	rjmp	.-2      	; 0x8f0 <__stop_program>

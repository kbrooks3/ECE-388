
IterativePingPongrev2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000efc  00000f90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000efc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  0080012c  0080012c  00000fbc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001018  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00001058  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010a9  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad2  00000000  00000000  00002169  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000061f  00000000  00000000  00002c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  0000325c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000601  00000000  00000000  000033a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000067b  00000000  00000000  000039a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00004020  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__vector_3>
  10:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__vector_4>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ec ef       	ldi	r30, 0xFC	; 252
  c8:	fe e0       	ldi	r31, 0x0E	; 14
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ac 32       	cpi	r26, 0x2C	; 44
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	ac e2       	ldi	r26, 0x2C	; 44
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a2 36       	cpi	r26, 0x62	; 98
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 08 02 	call	0x410	; 0x410 <main>
  ea:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <_Z10lcdCommandh>:
	}
}

void lcdCommand( unsigned char cmnd )
{
	LCD_DPRT = (LCD_DPRT&0x0F)|(cmnd & 0xF0);
  f2:	9b b1       	in	r25, 0x0b	; 11
  f4:	9f 70       	andi	r25, 0x0F	; 15
  f6:	28 2f       	mov	r18, r24
  f8:	20 7f       	andi	r18, 0xF0	; 240
  fa:	92 2b       	or	r25, r18
  fc:	9b b9       	out	0x0b, r25	; 11
	LCD_CPRT &= ~ (1<<LCD_RS);
  fe:	40 98       	cbi	0x08, 0	; 8
	LCD_CPRT &= ~ (1<<LCD_RW);
 100:	41 98       	cbi	0x08, 1	; 8
	LCD_CPRT |= (1<<LCD_EN);
 102:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	35 e0       	ldi	r19, 0x05	; 5
 106:	3a 95       	dec	r19
 108:	f1 f7       	brne	.-4      	; 0x106 <_Z10lcdCommandh+0x14>
 10a:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 10c:	42 98       	cbi	0x08, 2	; 8
 10e:	ef e8       	ldi	r30, 0x8F	; 143
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <_Z10lcdCommandh+0x20>
 116:	00 c0       	rjmp	.+0      	; 0x118 <_Z10lcdCommandh+0x26>
 118:	00 00       	nop
	_delay_us(100);
	LCD_DPRT = (LCD_DPRT&0x0F)|(cmnd<<4);
 11a:	2b b1       	in	r18, 0x0b	; 11
 11c:	2f 70       	andi	r18, 0x0F	; 15
 11e:	f0 e1       	ldi	r31, 0x10	; 16
 120:	8f 9f       	mul	r24, r31
 122:	c0 01       	movw	r24, r0
 124:	11 24       	eor	r1, r1
 126:	82 2b       	or	r24, r18
 128:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT |= (1<<LCD_EN);
 12a:	42 9a       	sbi	0x08, 2	; 8
 12c:	35 e0       	ldi	r19, 0x05	; 5
 12e:	3a 95       	dec	r19
 130:	f1 f7       	brne	.-4      	; 0x12e <_Z10lcdCommandh+0x3c>
 132:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 134:	42 98       	cbi	0x08, 2	; 8
 136:	8f e8       	ldi	r24, 0x8F	; 143
 138:	91 e0       	ldi	r25, 0x01	; 1
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <_Z10lcdCommandh+0x48>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_Z10lcdCommandh+0x4e>
 140:	00 00       	nop
 142:	08 95       	ret

00000144 <_Z7lcdDatah>:
	_delay_us(100);
}

void lcdData( unsigned char data )
{
	LCD_DPRT = (LCD_DPRT&0x0F)|(data & 0xF0);
 144:	9b b1       	in	r25, 0x0b	; 11
 146:	9f 70       	andi	r25, 0x0F	; 15
 148:	28 2f       	mov	r18, r24
 14a:	20 7f       	andi	r18, 0xF0	; 240
 14c:	92 2b       	or	r25, r18
 14e:	9b b9       	out	0x0b, r25	; 11
	LCD_CPRT |= (1<<LCD_RS);
 150:	40 9a       	sbi	0x08, 0	; 8
	LCD_CPRT &= ~ (1<<LCD_RW);
 152:	41 98       	cbi	0x08, 1	; 8
	LCD_CPRT |= (1<<LCD_EN);
 154:	42 9a       	sbi	0x08, 2	; 8
 156:	35 e0       	ldi	r19, 0x05	; 5
 158:	3a 95       	dec	r19
 15a:	f1 f7       	brne	.-4      	; 0x158 <_Z7lcdDatah+0x14>
 15c:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 15e:	42 98       	cbi	0x08, 2	; 8
	LCD_DPRT = (LCD_DPRT&0x0F)|(data<<4);
 160:	2b b1       	in	r18, 0x0b	; 11
 162:	2f 70       	andi	r18, 0x0F	; 15
 164:	30 e1       	ldi	r19, 0x10	; 16
 166:	83 9f       	mul	r24, r19
 168:	c0 01       	movw	r24, r0
 16a:	11 24       	eor	r1, r1
 16c:	82 2b       	or	r24, r18
 16e:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT |= (1<<LCD_EN);
 170:	42 9a       	sbi	0x08, 2	; 8
 172:	85 e0       	ldi	r24, 0x05	; 5
 174:	8a 95       	dec	r24
 176:	f1 f7       	brne	.-4      	; 0x174 <_Z7lcdDatah+0x30>
 178:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 17a:	42 98       	cbi	0x08, 2	; 8
 17c:	8f e8       	ldi	r24, 0x8F	; 143
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <_Z7lcdDatah+0x3c>
 184:	00 c0       	rjmp	.+0      	; 0x186 <_Z7lcdDatah+0x42>
 186:	00 00       	nop
 188:	08 95       	ret

0000018a <_Z8lcd_initv>:
	_delay_us(100);
}

void lcd_init()
{
	LCD_DDDR = 0xFF;
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	8a b9       	out	0x0a, r24	; 10
	LCD_CDDR = (LCD_CDDR | 0b00000111);
 18e:	87 b1       	in	r24, 0x07	; 7
 190:	87 60       	ori	r24, 0x07	; 7
 192:	87 b9       	out	0x07, r24	; 7
	LCD_CPRT &=~(1<<LCD_EN);
 194:	42 98       	cbi	0x08, 2	; 8
	lcdCommand(0x33);
 196:	83 e3       	ldi	r24, 0x33	; 51
 198:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x32);
 19c:	82 e3       	ldi	r24, 0x32	; 50
 19e:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x28);
 1a2:	88 e2       	ldi	r24, 0x28	; 40
 1a4:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x0e);
 1a8:	8e e0       	ldi	r24, 0x0E	; 14
 1aa:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x01);
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1b4:	8f e3       	ldi	r24, 0x3F	; 63
 1b6:	9f e1       	ldi	r25, 0x1F	; 31
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <_Z8lcd_initv+0x2e>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <_Z8lcd_initv+0x34>
 1be:	00 00       	nop
	_delay_us(2000);
	lcdCommand(0x06);
 1c0:	86 e0       	ldi	r24, 0x06	; 6
 1c2:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1c6:	08 95       	ret

000001c8 <_Z10lcd_gotoxyhh>:
}

void lcd_gotoxy(unsigned char x, unsigned char y)
{
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	00 d0       	rcall	.+0      	; 0x1ce <_Z10lcd_gotoxyhh+0x6>
 1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_Z10lcd_gotoxyhh+0x8>
 1d0:	cd b7       	in	r28, 0x3d	; 61
 1d2:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[]={0x80,0xC0,0x94,0xD4} ;
 1d4:	90 e8       	ldi	r25, 0x80	; 128
 1d6:	99 83       	std	Y+1, r25	; 0x01
 1d8:	90 ec       	ldi	r25, 0xC0	; 192
 1da:	9a 83       	std	Y+2, r25	; 0x02
 1dc:	94 e9       	ldi	r25, 0x94	; 148
 1de:	9b 83       	std	Y+3, r25	; 0x03
 1e0:	94 ed       	ldi	r25, 0xD4	; 212
 1e2:	9c 83       	std	Y+4, r25	; 0x04

	lcdCommand(firstCharAdr[y-1] + x - 1);
 1e4:	fe 01       	movw	r30, r28
 1e6:	e6 0f       	add	r30, r22
 1e8:	f1 1d       	adc	r31, r1
 1ea:	81 50       	subi	r24, 0x01	; 1
 1ec:	90 81       	ld	r25, Z
 1ee:	89 0f       	add	r24, r25
 1f0:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1f4:	8f e8       	ldi	r24, 0x8F	; 143
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_Z10lcd_gotoxyhh+0x30>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <_Z10lcd_gotoxyhh+0x36>
 1fe:	00 00       	nop
	_delay_us(100);
}
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <_Z9lcd_printPc>:

void lcd_print(char * str )
{
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	fc 01       	movw	r30, r24
	unsigned char i = 0 ;

	while(str[i]!=0)
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	59 f0       	breq	.+22     	; 0x232 <_Z9lcd_printPc+0x24>
 21c:	8f 01       	movw	r16, r30
 21e:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcdData(str[i]);
 220:	0e 94 a2 00 	call	0x144	; 0x144 <_Z7lcdDatah>
		i++ ;
 224:	cf 5f       	subi	r28, 0xFF	; 255

void lcd_print(char * str )
{
	unsigned char i = 0 ;

	while(str[i]!=0)
 226:	f8 01       	movw	r30, r16
 228:	ec 0f       	add	r30, r28
 22a:	f1 1d       	adc	r31, r1
 22c:	80 81       	ld	r24, Z
 22e:	81 11       	cpse	r24, r1
 230:	f7 cf       	rjmp	.-18     	; 0x220 <_Z9lcd_printPc+0x12>
	{
		lcdData(str[i]);
		i++ ;
	}
}
 232:	cf 91       	pop	r28
 234:	1f 91       	pop	r17
 236:	0f 91       	pop	r16
 238:	08 95       	ret

0000023a <__vector_3>:

ISR(PCINT0_vect) //Pin B0 (rotation) interrupt
{
 23a:	1f 92       	push	r1
 23c:	0f 92       	push	r0
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	2f 93       	push	r18
 246:	3f 93       	push	r19
 248:	4f 93       	push	r20
 24a:	5f 93       	push	r21
 24c:	6f 93       	push	r22
 24e:	7f 93       	push	r23
 250:	8f 93       	push	r24
 252:	9f 93       	push	r25
 254:	af 93       	push	r26
 256:	bf 93       	push	r27
	if ((PINB & 0b00000100) == 0b00000000) //check falling edge
 258:	1a 99       	sbic	0x03, 2	; 3
 25a:	27 c0       	rjmp	.+78     	; 0x2aa <__vector_3+0x70>
	{
		if ((PINB & 0b00000001) == 0b00000000) //counterclockwise
 25c:	18 99       	sbic	0x03, 0	; 3
 25e:	13 c0       	rjmp	.+38     	; 0x286 <__vector_3+0x4c>
		{
			targetx = targetx - scale; //decrement by scale
 260:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 264:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 268:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 26c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 270:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <targetx>
 274:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <targetx+0x1>
 278:	84 1b       	sub	r24, r20
 27a:	95 0b       	sbc	r25, r21
 27c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <targetx+0x1>
 280:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <targetx>
 284:	12 c0       	rjmp	.+36     	; 0x2aa <__vector_3+0x70>
		}
		else //clockwise
		{
			targetx = targetx + scale; //increment by scale
 286:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 28a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 28e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 292:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 296:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <targetx>
 29a:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <targetx+0x1>
 29e:	82 0f       	add	r24, r18
 2a0:	93 1f       	adc	r25, r19
 2a2:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <targetx+0x1>
 2a6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <targetx>
		}
	}
}
 2aa:	bf 91       	pop	r27
 2ac:	af 91       	pop	r26
 2ae:	9f 91       	pop	r25
 2b0:	8f 91       	pop	r24
 2b2:	7f 91       	pop	r23
 2b4:	6f 91       	pop	r22
 2b6:	5f 91       	pop	r21
 2b8:	4f 91       	pop	r20
 2ba:	3f 91       	pop	r19
 2bc:	2f 91       	pop	r18
 2be:	0f 90       	pop	r0
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	0f 90       	pop	r0
 2c4:	1f 90       	pop	r1
 2c6:	18 95       	reti

000002c8 <__vector_4>:

ISR(PCINT1_vect) //Pin C3 (button) interrupt
{
 2c8:	1f 92       	push	r1
 2ca:	0f 92       	push	r0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	0f 92       	push	r0
 2d0:	11 24       	eor	r1, r1
 2d2:	8f 93       	push	r24
 2d4:	9f 93       	push	r25
 2d6:	af 93       	push	r26
 2d8:	bf 93       	push	r27
 2da:	ef 93       	push	r30
 2dc:	ff 93       	push	r31
	if ((PINC & 0b00001000) == 0b00000000)
 2de:	33 99       	sbic	0x06, 3	; 6
 2e0:	72 c0       	rjmp	.+228    	; 0x3c6 <__vector_4+0xfe>
	{
		button = 1; // button is pressed
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	a0 e0       	ldi	r26, 0x00	; 0
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <button>
 2ee:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <button+0x1>
 2f2:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <button+0x2>
 2f6:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <button+0x3>
		// Change scale based on previous scale
		if (scale == 1){
 2fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2fe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 302:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 306:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	a1 05       	cpc	r26, r1
 30e:	b1 05       	cpc	r27, r1
 310:	c9 f4       	brne	.+50     	; 0x344 <__vector_4+0x7c>
			scale = 2; 	// 1 / 4 inch scale
 312:	82 e0       	ldi	r24, 0x02	; 2
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	a0 e0       	ldi	r26, 0x00	; 0
 318:	b0 e0       	ldi	r27, 0x00	; 0
 31a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 31e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 322:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 326:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1/4");
 32a:	81 e3       	ldi	r24, 0x31	; 49
 32c:	9f e2       	ldi	r25, 0x2F	; 47
 32e:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 332:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
 336:	84 e3       	ldi	r24, 0x34	; 52
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x3>
 33e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end+0x2>
 342:	49 c0       	rjmp	.+146    	; 0x3d6 <__vector_4+0x10e>
		}
		else if (scale == 2){
 344:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 348:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 34c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 350:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 354:	02 97       	sbiw	r24, 0x02	; 2
 356:	a1 05       	cpc	r26, r1
 358:	b1 05       	cpc	r27, r1
 35a:	b1 f4       	brne	.+44     	; 0x388 <__vector_4+0xc0>
			scale = 3; 	// 1 / 40 inch scale
 35c:	83 e0       	ldi	r24, 0x03	; 3
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	a0 e0       	ldi	r26, 0x00	; 0
 362:	b0 e0       	ldi	r27, 0x00	; 0
 364:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 368:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 36c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 370:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1/40");
 374:	85 e0       	ldi	r24, 0x05	; 5
 376:	ea e0       	ldi	r30, 0x0A	; 10
 378:	f1 e0       	ldi	r31, 0x01	; 1
 37a:	ac e2       	ldi	r26, 0x2C	; 44
 37c:	b1 e0       	ldi	r27, 0x01	; 1
 37e:	01 90       	ld	r0, Z+
 380:	0d 92       	st	X+, r0
 382:	8a 95       	dec	r24
 384:	e1 f7       	brne	.-8      	; 0x37e <__vector_4+0xb6>
 386:	27 c0       	rjmp	.+78     	; 0x3d6 <__vector_4+0x10e>
		}
		else if (scale == 3){
 388:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 38c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 390:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 394:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 398:	03 97       	sbiw	r24, 0x03	; 3
 39a:	a1 05       	cpc	r26, r1
 39c:	b1 05       	cpc	r27, r1
 39e:	d9 f4       	brne	.+54     	; 0x3d6 <__vector_4+0x10e>
			scale = 1; 	// 1 inch scale
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	a0 e0       	ldi	r26, 0x00	; 0
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 3b0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 3b4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1");
 3b8:	81 e3       	ldi	r24, 0x31	; 49
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 3c0:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <__vector_4+0x10e>
		}
	}
	else
	{
		button = 0;
 3c6:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <button>
 3ca:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <button+0x1>
 3ce:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <button+0x2>
 3d2:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <button+0x3>
	}
}
 3d6:	ff 91       	pop	r31
 3d8:	ef 91       	pop	r30
 3da:	bf 91       	pop	r27
 3dc:	af 91       	pop	r26
 3de:	9f 91       	pop	r25
 3e0:	8f 91       	pop	r24
 3e2:	0f 90       	pop	r0
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	0f 90       	pop	r0
 3e8:	1f 90       	pop	r1
 3ea:	18 95       	reti

000003ec <_Z4tilti>:

void tilt(int targetx)
{
	if (targetx > 0)
 3ec:	18 16       	cp	r1, r24
 3ee:	19 06       	cpc	r1, r25
 3f0:	34 f4       	brge	.+12     	; 0x3fe <_Z4tilti+0x12>
	{
		OCR1A = LEFT;	//change top value of timer to 3200 for 1.6 ms
	}
	else if (direction == RIGHT)
	{
		OCR1A = RIGHT;	//change top value of timer to 2400 for 1.2 ms
 3f2:	20 e6       	ldi	r18, 0x60	; 96
 3f4:	39 e0       	ldi	r19, 0x09	; 9
 3f6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3fa:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		angle(RIGHT);
		//_delay_ms(abs(deltax)*DSCALER);
		//angle(CENTER);
	}
	
	if (targetx < 0)
 3fe:	99 23       	and	r25, r25
 400:	34 f4       	brge	.+12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>

void angle(int direction)
{
	if (direction == LEFT)
	{
		OCR1A = LEFT;	//change top value of timer to 3200 for 1.6 ms
 402:	80 e8       	ldi	r24, 0x80	; 128
 404:	9c e0       	ldi	r25, 0x0C	; 12
 406:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 40a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 40e:	08 95       	ret

00000410 <main>:

void tilt(int targetx);
void angle(int direction);

int main(void)
{
 410:	cf 93       	push	r28
 412:	df 93       	push	r29
 414:	00 d0       	rcall	.+0      	; 0x416 <main+0x6>
 416:	00 d0       	rcall	.+0      	; 0x418 <main+0x8>
 418:	00 d0       	rcall	.+0      	; 0x41a <main+0xa>
 41a:	cd b7       	in	r28, 0x3d	; 61
 41c:	de b7       	in	r29, 0x3e	; 62
	uint16_t ticks;
	DDRC= 1<<5;
 41e:	80 e2       	ldi	r24, 0x20	; 32
 420:	87 b9       	out	0x07, r24	; 7
	DDRB |= 1<<1;//(DDRB | 0b00000010);	//b1 = PWM
 422:	21 9a       	sbi	0x04, 1	; 4
	DDRB = 0<<0;
 424:	14 b8       	out	0x04, r1	; 4
	DDRB = 0<<2;//(DDRB & 0b11111010); 	//set b2 and b0 to input, connected to CLK and DT
 426:	14 b8       	out	0x04, r1	; 4
	char str[20]; 
	
	PCICR |= (1<<PCIE0);
 428:	e8 e6       	ldi	r30, 0x68	; 104
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	81 60       	ori	r24, 0x01	; 1
 430:	80 83       	st	Z, r24
		PCMSK0 |= (1<<0); //Pin B1 interrupt
 432:	ab e6       	ldi	r26, 0x6B	; 107
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	8c 91       	ld	r24, X
 438:	81 60       	ori	r24, 0x01	; 1
 43a:	8c 93       	st	X, r24
		PCICR |= (1<<PCIE1);
 43c:	80 81       	ld	r24, Z
 43e:	82 60       	ori	r24, 0x02	; 2
 440:	80 83       	st	Z, r24
		PCMSK1 |= (1<<3); //Pin C3 interrupt
 442:	ec e6       	ldi	r30, 0x6C	; 108
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	88 60       	ori	r24, 0x08	; 8
 44a:	80 83       	st	Z, r24

	
	TCCR3A=(0b00<<COM3A0)|(0b00<<COM3B0)|(0b00<<WGM30);
 44c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	TCCR3B=(0b00<<WGM32)|(0b100<<CS30);
 450:	84 e0       	ldi	r24, 0x04	; 4
 452:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
	TIMSK3 = (0b0<<TOIE3);
 456:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
	
	TCCR1A = (0b10 << COM1A0) | (0 << COM1B0) | (0b10 <<  WGM10); //
 45a:	82 e8       	ldi	r24, 0x82	; 130
 45c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (0b11 << WGM12) | (0b010 << CS10);
 460:	8a e1       	ldi	r24, 0x1A	; 26
 462:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	ICR1 = 40000; 						// 20ms with /8 prescalar
 466:	80 e4       	ldi	r24, 0x40	; 64
 468:	9c e9       	ldi	r25, 0x9C	; 156
 46a:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 46e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1A = 1000; 						// 1000 -> 4000 (0.5 ms - 2 ms) // sets the duty cycle
 472:	88 ee       	ldi	r24, 0xE8	; 232
 474:	93 e0       	ldi	r25, 0x03	; 3
 476:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 47a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	
	sei();
 47e:	78 94       	sei
	
	while (1)
	{
		
		sprintf(strtarget,"%.4d inches SCL",targetx);			//val becomes a string
 480:	0f 2e       	mov	r0, r31
 482:	ff e0       	ldi	r31, 0x0F	; 15
 484:	af 2e       	mov	r10, r31
 486:	f1 e0       	ldi	r31, 0x01	; 1
 488:	bf 2e       	mov	r11, r31
 48a:	f0 2d       	mov	r31, r0
 48c:	0f 2e       	mov	r0, r31
 48e:	fa e4       	ldi	r31, 0x4A	; 74
 490:	ef 2e       	mov	r14, r31
 492:	f1 e0       	ldi	r31, 0x01	; 1
 494:	ff 2e       	mov	r15, r31
 496:	f0 2d       	mov	r31, r0
		sprintf(stractual,"%.4d inches ",Distance);			//val becomes a string
 498:	0f 2e       	mov	r0, r31
 49a:	ff e1       	ldi	r31, 0x1F	; 31
 49c:	8f 2e       	mov	r8, r31
 49e:	f1 e0       	ldi	r31, 0x01	; 1
 4a0:	9f 2e       	mov	r9, r31
 4a2:	f0 2d       	mov	r31, r0
 4a4:	06 e3       	ldi	r16, 0x36	; 54
 4a6:	11 e0       	ldi	r17, 0x01	; 1
		
		tilt(targetx);
		//angle(CENTER);
		
		
		PORTC=1<<PINC5;
 4a8:	68 94       	set
 4aa:	33 24       	eor	r3, r3
 4ac:	35 f8       	bld	r3, 5
		_delay_us(10);
		PORTC=0<<PINC5;

		while ((PINC&(0b00010000))<=0b00001111)   //   while (((PINC)&(1<<PINC4))==0)
		;
		TCNT3=0;
 4ae:	0f 2e       	mov	r0, r31
 4b0:	f4 e9       	ldi	r31, 0x94	; 148
 4b2:	cf 2e       	mov	r12, r31
 4b4:	d1 2c       	mov	r13, r1
 4b6:	f0 2d       	mov	r31, r0
		while ((PINC&(0b00010000))>=0b00010000) //   while (((PINC)&(1<<PINC4))==1)
		;
		ticks=TCNT3;
		if(ticks >= 2375)
		{
			Distance = 9999;
 4b8:	0f 2e       	mov	r0, r31
 4ba:	ff e0       	ldi	r31, 0x0F	; 15
 4bc:	6f 2e       	mov	r6, r31
 4be:	f7 e2       	ldi	r31, 0x27	; 39
 4c0:	7f 2e       	mov	r7, r31
 4c2:	f0 2d       	mov	r31, r0
	sei();
	
	while (1)
	{
		
		sprintf(strtarget,"%.4d inches SCL",targetx);			//val becomes a string
 4c4:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <targetx+0x1>
 4c8:	8f 93       	push	r24
 4ca:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <targetx>
 4ce:	8f 93       	push	r24
 4d0:	bf 92       	push	r11
 4d2:	af 92       	push	r10
 4d4:	ff 92       	push	r15
 4d6:	ef 92       	push	r14
 4d8:	0e 94 92 04 	call	0x924	; 0x924 <sprintf>
		sprintf(stractual,"%.4d inches ",Distance);			//val becomes a string
 4dc:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <Distance+0x1>
 4e0:	8f 93       	push	r24
 4e2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Distance>
 4e6:	8f 93       	push	r24
 4e8:	9f 92       	push	r9
 4ea:	8f 92       	push	r8
 4ec:	1f 93       	push	r17
 4ee:	0f 93       	push	r16
 4f0:	0e 94 92 04 	call	0x924	; 0x924 <sprintf>
		//sprintf(strscale,"%.4d", SCL);
		//sprintf(SCL,"1");
		lcd_init();
 4f4:	0e 94 c5 00 	call	0x18a	; 0x18a <_Z8lcd_initv>
		lcd_gotoxy(1,1);
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z10lcd_gotoxyhh>
		lcd_print(strtarget);							//that string is sent to the LCD
 500:	c7 01       	movw	r24, r14
 502:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		lcd_gotoxy(1,2);						//write on the second line
 506:	62 e0       	ldi	r22, 0x02	; 2
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z10lcd_gotoxyhh>
		lcd_print(stractual);
 50e:	c8 01       	movw	r24, r16
 510:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		lcd_print(SCL);
 514:	8c e2       	ldi	r24, 0x2C	; 44
 516:	91 e0       	ldi	r25, 0x01	; 1
 518:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		
		tilt(targetx);
 51c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <targetx>
 520:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <targetx+0x1>
 524:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z4tilti>
		//angle(CENTER);
		
		
		PORTC=1<<PINC5;
 528:	38 b8       	out	0x08, r3	; 8
 52a:	25 e3       	ldi	r18, 0x35	; 53
 52c:	2a 95       	dec	r18
 52e:	f1 f7       	brne	.-4      	; 0x52c <main+0x11c>
 530:	00 00       	nop
		_delay_us(10);
		PORTC=0<<PINC5;
 532:	18 b8       	out	0x08, r1	; 8
 534:	0f b6       	in	r0, 0x3f	; 63
 536:	f8 94       	cli
 538:	de bf       	out	0x3e, r29	; 62
 53a:	0f be       	out	0x3f, r0	; 63
 53c:	cd bf       	out	0x3d, r28	; 61

		while ((PINC&(0b00010000))<=0b00001111)   //   while (((PINC)&(1<<PINC4))==0)
 53e:	86 b1       	in	r24, 0x06	; 6
 540:	80 71       	andi	r24, 0x10	; 16
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	40 97       	sbiw	r24, 0x10	; 16
 546:	dc f3       	brlt	.-10     	; 0x53e <main+0x12e>
		;
		TCNT3=0;
 548:	f6 01       	movw	r30, r12
 54a:	11 82       	std	Z+1, r1	; 0x01
 54c:	10 82       	st	Z, r1
		
		while ((PINC&(0b00010000))>=0b00010000) //   while (((PINC)&(1<<PINC4))==1)
 54e:	86 b1       	in	r24, 0x06	; 6
 550:	80 71       	andi	r24, 0x10	; 16
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	40 97       	sbiw	r24, 0x10	; 16
 556:	dc f7       	brge	.-10     	; 0x54e <main+0x13e>
		;
		ticks=TCNT3;
 558:	f6 01       	movw	r30, r12
 55a:	01 90       	ld	r0, Z+
 55c:	f0 81       	ld	r31, Z
 55e:	e0 2d       	mov	r30, r0
 560:	fe 83       	std	Y+6, r31	; 0x06
 562:	ed 83       	std	Y+5, r30	; 0x05
		if(ticks >= 2375)
 564:	e7 34       	cpi	r30, 0x47	; 71
 566:	f9 40       	sbci	r31, 0x09	; 9
 568:	28 f0       	brcs	.+10     	; 0x574 <main+0x164>
		{
			Distance = 9999;
 56a:	70 92 09 01 	sts	0x0109, r7	; 0x800109 <Distance+0x1>
 56e:	60 92 08 01 	sts	0x0108, r6	; 0x800108 <Distance>
 572:	35 c0       	rjmp	.+106    	; 0x5de <main+0x1ce>
		}
		else
		{
			Reading = ticks * (sound / 62500) / 2;
 574:	20 e0       	ldi	r18, 0x00	; 0
 576:	34 e2       	ldi	r19, 0x24	; 36
 578:	44 e7       	ldi	r20, 0x74	; 116
 57a:	57 e4       	ldi	r21, 0x47	; 71
 57c:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <sound>
 580:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <sound+0x1>
 584:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sound+0x2>
 588:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sound+0x3>
 58c:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__divsf3>
 590:	69 83       	std	Y+1, r22	; 0x01
 592:	7a 83       	std	Y+2, r23	; 0x02
 594:	8b 83       	std	Y+3, r24	; 0x03
 596:	9c 83       	std	Y+4, r25	; 0x04
 598:	ed 81       	ldd	r30, Y+5	; 0x05
 59a:	fe 81       	ldd	r31, Y+6	; 0x06
 59c:	bf 01       	movw	r22, r30
 59e:	80 e0       	ldi	r24, 0x00	; 0
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 97 03 	call	0x72e	; 0x72e <__floatunsisf>
 5a6:	9b 01       	movw	r18, r22
 5a8:	ac 01       	movw	r20, r24
 5aa:	69 81       	ldd	r22, Y+1	; 0x01
 5ac:	7a 81       	ldd	r23, Y+2	; 0x02
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	9c 81       	ldd	r25, Y+4	; 0x04
 5b2:	0e 94 25 04 	call	0x84a	; 0x84a <__mulsf3>
 5b6:	20 e0       	ldi	r18, 0x00	; 0
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	40 e0       	ldi	r20, 0x00	; 0
 5bc:	5f e3       	ldi	r21, 0x3F	; 63
 5be:	0e 94 25 04 	call	0x84a	; 0x84a <__mulsf3>
 5c2:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <Reading>
 5c6:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <Reading+0x1>
 5ca:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <Reading+0x2>
 5ce:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <Reading+0x3>
			Distance = Reading;
 5d2:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__fixunssfsi>
 5d6:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <Distance+0x1>
 5da:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <Distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5de:	8f e3       	ldi	r24, 0x3F	; 63
 5e0:	9c e9       	ldi	r25, 0x9C	; 156
 5e2:	01 97       	sbiw	r24, 0x01	; 1
 5e4:	f1 f7       	brne	.-4      	; 0x5e2 <main+0x1d2>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <main+0x1d8>
 5e8:	00 00       	nop
 5ea:	6c cf       	rjmp	.-296    	; 0x4c4 <main+0xb4>

000005ec <__divsf3>:
 5ec:	0e 94 0a 03 	call	0x614	; 0x614 <__divsf3x>
 5f0:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
 5f4:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
 5f8:	58 f0       	brcs	.+22     	; 0x610 <__divsf3+0x24>
 5fa:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
 5fe:	40 f0       	brcs	.+16     	; 0x610 <__divsf3+0x24>
 600:	29 f4       	brne	.+10     	; 0x60c <__divsf3+0x20>
 602:	5f 3f       	cpi	r21, 0xFF	; 255
 604:	29 f0       	breq	.+10     	; 0x610 <__divsf3+0x24>
 606:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__fp_inf>
 60a:	51 11       	cpse	r21, r1
 60c:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 610:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_nan>

00000614 <__divsf3x>:
 614:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
 618:	68 f3       	brcs	.-38     	; 0x5f4 <__divsf3+0x8>

0000061a <__divsf3_pse>:
 61a:	99 23       	and	r25, r25
 61c:	b1 f3       	breq	.-20     	; 0x60a <__divsf3+0x1e>
 61e:	55 23       	and	r21, r21
 620:	91 f3       	breq	.-28     	; 0x606 <__divsf3+0x1a>
 622:	95 1b       	sub	r25, r21
 624:	55 0b       	sbc	r21, r21
 626:	bb 27       	eor	r27, r27
 628:	aa 27       	eor	r26, r26
 62a:	62 17       	cp	r22, r18
 62c:	73 07       	cpc	r23, r19
 62e:	84 07       	cpc	r24, r20
 630:	38 f0       	brcs	.+14     	; 0x640 <__divsf3_pse+0x26>
 632:	9f 5f       	subi	r25, 0xFF	; 255
 634:	5f 4f       	sbci	r21, 0xFF	; 255
 636:	22 0f       	add	r18, r18
 638:	33 1f       	adc	r19, r19
 63a:	44 1f       	adc	r20, r20
 63c:	aa 1f       	adc	r26, r26
 63e:	a9 f3       	breq	.-22     	; 0x62a <__divsf3_pse+0x10>
 640:	35 d0       	rcall	.+106    	; 0x6ac <__divsf3_pse+0x92>
 642:	0e 2e       	mov	r0, r30
 644:	3a f0       	brmi	.+14     	; 0x654 <__divsf3_pse+0x3a>
 646:	e0 e8       	ldi	r30, 0x80	; 128
 648:	32 d0       	rcall	.+100    	; 0x6ae <__divsf3_pse+0x94>
 64a:	91 50       	subi	r25, 0x01	; 1
 64c:	50 40       	sbci	r21, 0x00	; 0
 64e:	e6 95       	lsr	r30
 650:	00 1c       	adc	r0, r0
 652:	ca f7       	brpl	.-14     	; 0x646 <__divsf3_pse+0x2c>
 654:	2b d0       	rcall	.+86     	; 0x6ac <__divsf3_pse+0x92>
 656:	fe 2f       	mov	r31, r30
 658:	29 d0       	rcall	.+82     	; 0x6ac <__divsf3_pse+0x92>
 65a:	66 0f       	add	r22, r22
 65c:	77 1f       	adc	r23, r23
 65e:	88 1f       	adc	r24, r24
 660:	bb 1f       	adc	r27, r27
 662:	26 17       	cp	r18, r22
 664:	37 07       	cpc	r19, r23
 666:	48 07       	cpc	r20, r24
 668:	ab 07       	cpc	r26, r27
 66a:	b0 e8       	ldi	r27, 0x80	; 128
 66c:	09 f0       	breq	.+2      	; 0x670 <__divsf3_pse+0x56>
 66e:	bb 0b       	sbc	r27, r27
 670:	80 2d       	mov	r24, r0
 672:	bf 01       	movw	r22, r30
 674:	ff 27       	eor	r31, r31
 676:	93 58       	subi	r25, 0x83	; 131
 678:	5f 4f       	sbci	r21, 0xFF	; 255
 67a:	3a f0       	brmi	.+14     	; 0x68a <__divsf3_pse+0x70>
 67c:	9e 3f       	cpi	r25, 0xFE	; 254
 67e:	51 05       	cpc	r21, r1
 680:	78 f0       	brcs	.+30     	; 0x6a0 <__divsf3_pse+0x86>
 682:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__fp_inf>
 686:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 68a:	5f 3f       	cpi	r21, 0xFF	; 255
 68c:	e4 f3       	brlt	.-8      	; 0x686 <__divsf3_pse+0x6c>
 68e:	98 3e       	cpi	r25, 0xE8	; 232
 690:	d4 f3       	brlt	.-12     	; 0x686 <__divsf3_pse+0x6c>
 692:	86 95       	lsr	r24
 694:	77 95       	ror	r23
 696:	67 95       	ror	r22
 698:	b7 95       	ror	r27
 69a:	f7 95       	ror	r31
 69c:	9f 5f       	subi	r25, 0xFF	; 255
 69e:	c9 f7       	brne	.-14     	; 0x692 <__divsf3_pse+0x78>
 6a0:	88 0f       	add	r24, r24
 6a2:	91 1d       	adc	r25, r1
 6a4:	96 95       	lsr	r25
 6a6:	87 95       	ror	r24
 6a8:	97 f9       	bld	r25, 7
 6aa:	08 95       	ret
 6ac:	e1 e0       	ldi	r30, 0x01	; 1
 6ae:	66 0f       	add	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	88 1f       	adc	r24, r24
 6b4:	bb 1f       	adc	r27, r27
 6b6:	62 17       	cp	r22, r18
 6b8:	73 07       	cpc	r23, r19
 6ba:	84 07       	cpc	r24, r20
 6bc:	ba 07       	cpc	r27, r26
 6be:	20 f0       	brcs	.+8      	; 0x6c8 <__divsf3_pse+0xae>
 6c0:	62 1b       	sub	r22, r18
 6c2:	73 0b       	sbc	r23, r19
 6c4:	84 0b       	sbc	r24, r20
 6c6:	ba 0b       	sbc	r27, r26
 6c8:	ee 1f       	adc	r30, r30
 6ca:	88 f7       	brcc	.-30     	; 0x6ae <__divsf3_pse+0x94>
 6cc:	e0 95       	com	r30
 6ce:	08 95       	ret

000006d0 <__fixunssfsi>:
 6d0:	0e 94 04 04 	call	0x808	; 0x808 <__fp_splitA>
 6d4:	88 f0       	brcs	.+34     	; 0x6f8 <__fixunssfsi+0x28>
 6d6:	9f 57       	subi	r25, 0x7F	; 127
 6d8:	98 f0       	brcs	.+38     	; 0x700 <__fixunssfsi+0x30>
 6da:	b9 2f       	mov	r27, r25
 6dc:	99 27       	eor	r25, r25
 6de:	b7 51       	subi	r27, 0x17	; 23
 6e0:	b0 f0       	brcs	.+44     	; 0x70e <__fixunssfsi+0x3e>
 6e2:	e1 f0       	breq	.+56     	; 0x71c <__fixunssfsi+0x4c>
 6e4:	66 0f       	add	r22, r22
 6e6:	77 1f       	adc	r23, r23
 6e8:	88 1f       	adc	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	1a f0       	brmi	.+6      	; 0x6f4 <__fixunssfsi+0x24>
 6ee:	ba 95       	dec	r27
 6f0:	c9 f7       	brne	.-14     	; 0x6e4 <__fixunssfsi+0x14>
 6f2:	14 c0       	rjmp	.+40     	; 0x71c <__fixunssfsi+0x4c>
 6f4:	b1 30       	cpi	r27, 0x01	; 1
 6f6:	91 f0       	breq	.+36     	; 0x71c <__fixunssfsi+0x4c>
 6f8:	0e 94 1e 04 	call	0x83c	; 0x83c <__fp_zero>
 6fc:	b1 e0       	ldi	r27, 0x01	; 1
 6fe:	08 95       	ret
 700:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>
 704:	67 2f       	mov	r22, r23
 706:	78 2f       	mov	r23, r24
 708:	88 27       	eor	r24, r24
 70a:	b8 5f       	subi	r27, 0xF8	; 248
 70c:	39 f0       	breq	.+14     	; 0x71c <__fixunssfsi+0x4c>
 70e:	b9 3f       	cpi	r27, 0xF9	; 249
 710:	cc f3       	brlt	.-14     	; 0x704 <__fixunssfsi+0x34>
 712:	86 95       	lsr	r24
 714:	77 95       	ror	r23
 716:	67 95       	ror	r22
 718:	b3 95       	inc	r27
 71a:	d9 f7       	brne	.-10     	; 0x712 <__fixunssfsi+0x42>
 71c:	3e f4       	brtc	.+14     	; 0x72c <__fixunssfsi+0x5c>
 71e:	90 95       	com	r25
 720:	80 95       	com	r24
 722:	70 95       	com	r23
 724:	61 95       	neg	r22
 726:	7f 4f       	sbci	r23, 0xFF	; 255
 728:	8f 4f       	sbci	r24, 0xFF	; 255
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	08 95       	ret

0000072e <__floatunsisf>:
 72e:	e8 94       	clt
 730:	09 c0       	rjmp	.+18     	; 0x744 <__floatsisf+0x12>

00000732 <__floatsisf>:
 732:	97 fb       	bst	r25, 7
 734:	3e f4       	brtc	.+14     	; 0x744 <__floatsisf+0x12>
 736:	90 95       	com	r25
 738:	80 95       	com	r24
 73a:	70 95       	com	r23
 73c:	61 95       	neg	r22
 73e:	7f 4f       	sbci	r23, 0xFF	; 255
 740:	8f 4f       	sbci	r24, 0xFF	; 255
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	99 23       	and	r25, r25
 746:	a9 f0       	breq	.+42     	; 0x772 <__floatsisf+0x40>
 748:	f9 2f       	mov	r31, r25
 74a:	96 e9       	ldi	r25, 0x96	; 150
 74c:	bb 27       	eor	r27, r27
 74e:	93 95       	inc	r25
 750:	f6 95       	lsr	r31
 752:	87 95       	ror	r24
 754:	77 95       	ror	r23
 756:	67 95       	ror	r22
 758:	b7 95       	ror	r27
 75a:	f1 11       	cpse	r31, r1
 75c:	f8 cf       	rjmp	.-16     	; 0x74e <__floatsisf+0x1c>
 75e:	fa f4       	brpl	.+62     	; 0x79e <__floatsisf+0x6c>
 760:	bb 0f       	add	r27, r27
 762:	11 f4       	brne	.+4      	; 0x768 <__floatsisf+0x36>
 764:	60 ff       	sbrs	r22, 0
 766:	1b c0       	rjmp	.+54     	; 0x79e <__floatsisf+0x6c>
 768:	6f 5f       	subi	r22, 0xFF	; 255
 76a:	7f 4f       	sbci	r23, 0xFF	; 255
 76c:	8f 4f       	sbci	r24, 0xFF	; 255
 76e:	9f 4f       	sbci	r25, 0xFF	; 255
 770:	16 c0       	rjmp	.+44     	; 0x79e <__floatsisf+0x6c>
 772:	88 23       	and	r24, r24
 774:	11 f0       	breq	.+4      	; 0x77a <__floatsisf+0x48>
 776:	96 e9       	ldi	r25, 0x96	; 150
 778:	11 c0       	rjmp	.+34     	; 0x79c <__floatsisf+0x6a>
 77a:	77 23       	and	r23, r23
 77c:	21 f0       	breq	.+8      	; 0x786 <__floatsisf+0x54>
 77e:	9e e8       	ldi	r25, 0x8E	; 142
 780:	87 2f       	mov	r24, r23
 782:	76 2f       	mov	r23, r22
 784:	05 c0       	rjmp	.+10     	; 0x790 <__floatsisf+0x5e>
 786:	66 23       	and	r22, r22
 788:	71 f0       	breq	.+28     	; 0x7a6 <__floatsisf+0x74>
 78a:	96 e8       	ldi	r25, 0x86	; 134
 78c:	86 2f       	mov	r24, r22
 78e:	70 e0       	ldi	r23, 0x00	; 0
 790:	60 e0       	ldi	r22, 0x00	; 0
 792:	2a f0       	brmi	.+10     	; 0x79e <__floatsisf+0x6c>
 794:	9a 95       	dec	r25
 796:	66 0f       	add	r22, r22
 798:	77 1f       	adc	r23, r23
 79a:	88 1f       	adc	r24, r24
 79c:	da f7       	brpl	.-10     	; 0x794 <__floatsisf+0x62>
 79e:	88 0f       	add	r24, r24
 7a0:	96 95       	lsr	r25
 7a2:	87 95       	ror	r24
 7a4:	97 f9       	bld	r25, 7
 7a6:	08 95       	ret

000007a8 <__fp_inf>:
 7a8:	97 f9       	bld	r25, 7
 7aa:	9f 67       	ori	r25, 0x7F	; 127
 7ac:	80 e8       	ldi	r24, 0x80	; 128
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	08 95       	ret

000007b4 <__fp_nan>:
 7b4:	9f ef       	ldi	r25, 0xFF	; 255
 7b6:	80 ec       	ldi	r24, 0xC0	; 192
 7b8:	08 95       	ret

000007ba <__fp_pscA>:
 7ba:	00 24       	eor	r0, r0
 7bc:	0a 94       	dec	r0
 7be:	16 16       	cp	r1, r22
 7c0:	17 06       	cpc	r1, r23
 7c2:	18 06       	cpc	r1, r24
 7c4:	09 06       	cpc	r0, r25
 7c6:	08 95       	ret

000007c8 <__fp_pscB>:
 7c8:	00 24       	eor	r0, r0
 7ca:	0a 94       	dec	r0
 7cc:	12 16       	cp	r1, r18
 7ce:	13 06       	cpc	r1, r19
 7d0:	14 06       	cpc	r1, r20
 7d2:	05 06       	cpc	r0, r21
 7d4:	08 95       	ret

000007d6 <__fp_round>:
 7d6:	09 2e       	mov	r0, r25
 7d8:	03 94       	inc	r0
 7da:	00 0c       	add	r0, r0
 7dc:	11 f4       	brne	.+4      	; 0x7e2 <__fp_round+0xc>
 7de:	88 23       	and	r24, r24
 7e0:	52 f0       	brmi	.+20     	; 0x7f6 <__fp_round+0x20>
 7e2:	bb 0f       	add	r27, r27
 7e4:	40 f4       	brcc	.+16     	; 0x7f6 <__fp_round+0x20>
 7e6:	bf 2b       	or	r27, r31
 7e8:	11 f4       	brne	.+4      	; 0x7ee <__fp_round+0x18>
 7ea:	60 ff       	sbrs	r22, 0
 7ec:	04 c0       	rjmp	.+8      	; 0x7f6 <__fp_round+0x20>
 7ee:	6f 5f       	subi	r22, 0xFF	; 255
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	08 95       	ret

000007f8 <__fp_split3>:
 7f8:	57 fd       	sbrc	r21, 7
 7fa:	90 58       	subi	r25, 0x80	; 128
 7fc:	44 0f       	add	r20, r20
 7fe:	55 1f       	adc	r21, r21
 800:	59 f0       	breq	.+22     	; 0x818 <__fp_splitA+0x10>
 802:	5f 3f       	cpi	r21, 0xFF	; 255
 804:	71 f0       	breq	.+28     	; 0x822 <__fp_splitA+0x1a>
 806:	47 95       	ror	r20

00000808 <__fp_splitA>:
 808:	88 0f       	add	r24, r24
 80a:	97 fb       	bst	r25, 7
 80c:	99 1f       	adc	r25, r25
 80e:	61 f0       	breq	.+24     	; 0x828 <__fp_splitA+0x20>
 810:	9f 3f       	cpi	r25, 0xFF	; 255
 812:	79 f0       	breq	.+30     	; 0x832 <__fp_splitA+0x2a>
 814:	87 95       	ror	r24
 816:	08 95       	ret
 818:	12 16       	cp	r1, r18
 81a:	13 06       	cpc	r1, r19
 81c:	14 06       	cpc	r1, r20
 81e:	55 1f       	adc	r21, r21
 820:	f2 cf       	rjmp	.-28     	; 0x806 <__fp_split3+0xe>
 822:	46 95       	lsr	r20
 824:	f1 df       	rcall	.-30     	; 0x808 <__fp_splitA>
 826:	08 c0       	rjmp	.+16     	; 0x838 <__fp_splitA+0x30>
 828:	16 16       	cp	r1, r22
 82a:	17 06       	cpc	r1, r23
 82c:	18 06       	cpc	r1, r24
 82e:	99 1f       	adc	r25, r25
 830:	f1 cf       	rjmp	.-30     	; 0x814 <__fp_splitA+0xc>
 832:	86 95       	lsr	r24
 834:	71 05       	cpc	r23, r1
 836:	61 05       	cpc	r22, r1
 838:	08 94       	sec
 83a:	08 95       	ret

0000083c <__fp_zero>:
 83c:	e8 94       	clt

0000083e <__fp_szero>:
 83e:	bb 27       	eor	r27, r27
 840:	66 27       	eor	r22, r22
 842:	77 27       	eor	r23, r23
 844:	cb 01       	movw	r24, r22
 846:	97 f9       	bld	r25, 7
 848:	08 95       	ret

0000084a <__mulsf3>:
 84a:	0e 94 38 04 	call	0x870	; 0x870 <__mulsf3x>
 84e:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
 852:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
 856:	38 f0       	brcs	.+14     	; 0x866 <__mulsf3+0x1c>
 858:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
 85c:	20 f0       	brcs	.+8      	; 0x866 <__mulsf3+0x1c>
 85e:	95 23       	and	r25, r21
 860:	11 f0       	breq	.+4      	; 0x866 <__mulsf3+0x1c>
 862:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__fp_inf>
 866:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_nan>
 86a:	11 24       	eor	r1, r1
 86c:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>

00000870 <__mulsf3x>:
 870:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
 874:	70 f3       	brcs	.-36     	; 0x852 <__mulsf3+0x8>

00000876 <__mulsf3_pse>:
 876:	95 9f       	mul	r25, r21
 878:	c1 f3       	breq	.-16     	; 0x86a <__mulsf3+0x20>
 87a:	95 0f       	add	r25, r21
 87c:	50 e0       	ldi	r21, 0x00	; 0
 87e:	55 1f       	adc	r21, r21
 880:	62 9f       	mul	r22, r18
 882:	f0 01       	movw	r30, r0
 884:	72 9f       	mul	r23, r18
 886:	bb 27       	eor	r27, r27
 888:	f0 0d       	add	r31, r0
 88a:	b1 1d       	adc	r27, r1
 88c:	63 9f       	mul	r22, r19
 88e:	aa 27       	eor	r26, r26
 890:	f0 0d       	add	r31, r0
 892:	b1 1d       	adc	r27, r1
 894:	aa 1f       	adc	r26, r26
 896:	64 9f       	mul	r22, r20
 898:	66 27       	eor	r22, r22
 89a:	b0 0d       	add	r27, r0
 89c:	a1 1d       	adc	r26, r1
 89e:	66 1f       	adc	r22, r22
 8a0:	82 9f       	mul	r24, r18
 8a2:	22 27       	eor	r18, r18
 8a4:	b0 0d       	add	r27, r0
 8a6:	a1 1d       	adc	r26, r1
 8a8:	62 1f       	adc	r22, r18
 8aa:	73 9f       	mul	r23, r19
 8ac:	b0 0d       	add	r27, r0
 8ae:	a1 1d       	adc	r26, r1
 8b0:	62 1f       	adc	r22, r18
 8b2:	83 9f       	mul	r24, r19
 8b4:	a0 0d       	add	r26, r0
 8b6:	61 1d       	adc	r22, r1
 8b8:	22 1f       	adc	r18, r18
 8ba:	74 9f       	mul	r23, r20
 8bc:	33 27       	eor	r19, r19
 8be:	a0 0d       	add	r26, r0
 8c0:	61 1d       	adc	r22, r1
 8c2:	23 1f       	adc	r18, r19
 8c4:	84 9f       	mul	r24, r20
 8c6:	60 0d       	add	r22, r0
 8c8:	21 1d       	adc	r18, r1
 8ca:	82 2f       	mov	r24, r18
 8cc:	76 2f       	mov	r23, r22
 8ce:	6a 2f       	mov	r22, r26
 8d0:	11 24       	eor	r1, r1
 8d2:	9f 57       	subi	r25, 0x7F	; 127
 8d4:	50 40       	sbci	r21, 0x00	; 0
 8d6:	9a f0       	brmi	.+38     	; 0x8fe <__mulsf3_pse+0x88>
 8d8:	f1 f0       	breq	.+60     	; 0x916 <__stack+0x17>
 8da:	88 23       	and	r24, r24
 8dc:	4a f0       	brmi	.+18     	; 0x8f0 <__mulsf3_pse+0x7a>
 8de:	ee 0f       	add	r30, r30
 8e0:	ff 1f       	adc	r31, r31
 8e2:	bb 1f       	adc	r27, r27
 8e4:	66 1f       	adc	r22, r22
 8e6:	77 1f       	adc	r23, r23
 8e8:	88 1f       	adc	r24, r24
 8ea:	91 50       	subi	r25, 0x01	; 1
 8ec:	50 40       	sbci	r21, 0x00	; 0
 8ee:	a9 f7       	brne	.-22     	; 0x8da <__mulsf3_pse+0x64>
 8f0:	9e 3f       	cpi	r25, 0xFE	; 254
 8f2:	51 05       	cpc	r21, r1
 8f4:	80 f0       	brcs	.+32     	; 0x916 <__stack+0x17>
 8f6:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__fp_inf>
 8fa:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 8fe:	5f 3f       	cpi	r21, 0xFF	; 255
 900:	e4 f3       	brlt	.-8      	; 0x8fa <__mulsf3_pse+0x84>
 902:	98 3e       	cpi	r25, 0xE8	; 232
 904:	d4 f3       	brlt	.-12     	; 0x8fa <__mulsf3_pse+0x84>
 906:	86 95       	lsr	r24
 908:	77 95       	ror	r23
 90a:	67 95       	ror	r22
 90c:	b7 95       	ror	r27
 90e:	f7 95       	ror	r31
 910:	e7 95       	ror	r30
 912:	9f 5f       	subi	r25, 0xFF	; 255
 914:	c1 f7       	brne	.-16     	; 0x906 <__stack+0x7>
 916:	fe 2b       	or	r31, r30
 918:	88 0f       	add	r24, r24
 91a:	91 1d       	adc	r25, r1
 91c:	96 95       	lsr	r25
 91e:	87 95       	ror	r24
 920:	97 f9       	bld	r25, 7
 922:	08 95       	ret

00000924 <sprintf>:
 924:	ae e0       	ldi	r26, 0x0E	; 14
 926:	b0 e0       	ldi	r27, 0x00	; 0
 928:	e8 e9       	ldi	r30, 0x98	; 152
 92a:	f4 e0       	ldi	r31, 0x04	; 4
 92c:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__prologue_saves__+0x1c>
 930:	0d 89       	ldd	r16, Y+21	; 0x15
 932:	1e 89       	ldd	r17, Y+22	; 0x16
 934:	86 e0       	ldi	r24, 0x06	; 6
 936:	8c 83       	std	Y+4, r24	; 0x04
 938:	1a 83       	std	Y+2, r17	; 0x02
 93a:	09 83       	std	Y+1, r16	; 0x01
 93c:	8f ef       	ldi	r24, 0xFF	; 255
 93e:	9f e7       	ldi	r25, 0x7F	; 127
 940:	9e 83       	std	Y+6, r25	; 0x06
 942:	8d 83       	std	Y+5, r24	; 0x05
 944:	ae 01       	movw	r20, r28
 946:	47 5e       	subi	r20, 0xE7	; 231
 948:	5f 4f       	sbci	r21, 0xFF	; 255
 94a:	6f 89       	ldd	r22, Y+23	; 0x17
 94c:	78 8d       	ldd	r23, Y+24	; 0x18
 94e:	ce 01       	movw	r24, r28
 950:	01 96       	adiw	r24, 0x01	; 1
 952:	0e 94 b4 04 	call	0x968	; 0x968 <vfprintf>
 956:	ef 81       	ldd	r30, Y+7	; 0x07
 958:	f8 85       	ldd	r31, Y+8	; 0x08
 95a:	e0 0f       	add	r30, r16
 95c:	f1 1f       	adc	r31, r17
 95e:	10 82       	st	Z, r1
 960:	2e 96       	adiw	r28, 0x0e	; 14
 962:	e4 e0       	ldi	r30, 0x04	; 4
 964:	0c 94 6f 07 	jmp	0xede	; 0xede <__epilogue_restores__+0x1c>

00000968 <vfprintf>:
 968:	ab e0       	ldi	r26, 0x0B	; 11
 96a:	b0 e0       	ldi	r27, 0x00	; 0
 96c:	ea eb       	ldi	r30, 0xBA	; 186
 96e:	f4 e0       	ldi	r31, 0x04	; 4
 970:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__prologue_saves__>
 974:	6c 01       	movw	r12, r24
 976:	7b 01       	movw	r14, r22
 978:	8a 01       	movw	r16, r20
 97a:	fc 01       	movw	r30, r24
 97c:	17 82       	std	Z+7, r1	; 0x07
 97e:	16 82       	std	Z+6, r1	; 0x06
 980:	83 81       	ldd	r24, Z+3	; 0x03
 982:	81 ff       	sbrs	r24, 1
 984:	cc c1       	rjmp	.+920    	; 0xd1e <vfprintf+0x3b6>
 986:	ce 01       	movw	r24, r28
 988:	01 96       	adiw	r24, 0x01	; 1
 98a:	3c 01       	movw	r6, r24
 98c:	f6 01       	movw	r30, r12
 98e:	93 81       	ldd	r25, Z+3	; 0x03
 990:	f7 01       	movw	r30, r14
 992:	93 fd       	sbrc	r25, 3
 994:	85 91       	lpm	r24, Z+
 996:	93 ff       	sbrs	r25, 3
 998:	81 91       	ld	r24, Z+
 99a:	7f 01       	movw	r14, r30
 99c:	88 23       	and	r24, r24
 99e:	09 f4       	brne	.+2      	; 0x9a2 <vfprintf+0x3a>
 9a0:	ba c1       	rjmp	.+884    	; 0xd16 <vfprintf+0x3ae>
 9a2:	85 32       	cpi	r24, 0x25	; 37
 9a4:	39 f4       	brne	.+14     	; 0x9b4 <vfprintf+0x4c>
 9a6:	93 fd       	sbrc	r25, 3
 9a8:	85 91       	lpm	r24, Z+
 9aa:	93 ff       	sbrs	r25, 3
 9ac:	81 91       	ld	r24, Z+
 9ae:	7f 01       	movw	r14, r30
 9b0:	85 32       	cpi	r24, 0x25	; 37
 9b2:	29 f4       	brne	.+10     	; 0x9be <vfprintf+0x56>
 9b4:	b6 01       	movw	r22, r12
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 9bc:	e7 cf       	rjmp	.-50     	; 0x98c <vfprintf+0x24>
 9be:	91 2c       	mov	r9, r1
 9c0:	21 2c       	mov	r2, r1
 9c2:	31 2c       	mov	r3, r1
 9c4:	ff e1       	ldi	r31, 0x1F	; 31
 9c6:	f3 15       	cp	r31, r3
 9c8:	d8 f0       	brcs	.+54     	; 0xa00 <vfprintf+0x98>
 9ca:	8b 32       	cpi	r24, 0x2B	; 43
 9cc:	79 f0       	breq	.+30     	; 0x9ec <vfprintf+0x84>
 9ce:	38 f4       	brcc	.+14     	; 0x9de <vfprintf+0x76>
 9d0:	80 32       	cpi	r24, 0x20	; 32
 9d2:	79 f0       	breq	.+30     	; 0x9f2 <vfprintf+0x8a>
 9d4:	83 32       	cpi	r24, 0x23	; 35
 9d6:	a1 f4       	brne	.+40     	; 0xa00 <vfprintf+0x98>
 9d8:	23 2d       	mov	r18, r3
 9da:	20 61       	ori	r18, 0x10	; 16
 9dc:	1d c0       	rjmp	.+58     	; 0xa18 <vfprintf+0xb0>
 9de:	8d 32       	cpi	r24, 0x2D	; 45
 9e0:	61 f0       	breq	.+24     	; 0x9fa <vfprintf+0x92>
 9e2:	80 33       	cpi	r24, 0x30	; 48
 9e4:	69 f4       	brne	.+26     	; 0xa00 <vfprintf+0x98>
 9e6:	23 2d       	mov	r18, r3
 9e8:	21 60       	ori	r18, 0x01	; 1
 9ea:	16 c0       	rjmp	.+44     	; 0xa18 <vfprintf+0xb0>
 9ec:	83 2d       	mov	r24, r3
 9ee:	82 60       	ori	r24, 0x02	; 2
 9f0:	38 2e       	mov	r3, r24
 9f2:	e3 2d       	mov	r30, r3
 9f4:	e4 60       	ori	r30, 0x04	; 4
 9f6:	3e 2e       	mov	r3, r30
 9f8:	2a c0       	rjmp	.+84     	; 0xa4e <vfprintf+0xe6>
 9fa:	f3 2d       	mov	r31, r3
 9fc:	f8 60       	ori	r31, 0x08	; 8
 9fe:	1d c0       	rjmp	.+58     	; 0xa3a <vfprintf+0xd2>
 a00:	37 fc       	sbrc	r3, 7
 a02:	2d c0       	rjmp	.+90     	; 0xa5e <vfprintf+0xf6>
 a04:	20 ed       	ldi	r18, 0xD0	; 208
 a06:	28 0f       	add	r18, r24
 a08:	2a 30       	cpi	r18, 0x0A	; 10
 a0a:	40 f0       	brcs	.+16     	; 0xa1c <vfprintf+0xb4>
 a0c:	8e 32       	cpi	r24, 0x2E	; 46
 a0e:	b9 f4       	brne	.+46     	; 0xa3e <vfprintf+0xd6>
 a10:	36 fc       	sbrc	r3, 6
 a12:	81 c1       	rjmp	.+770    	; 0xd16 <vfprintf+0x3ae>
 a14:	23 2d       	mov	r18, r3
 a16:	20 64       	ori	r18, 0x40	; 64
 a18:	32 2e       	mov	r3, r18
 a1a:	19 c0       	rjmp	.+50     	; 0xa4e <vfprintf+0xe6>
 a1c:	36 fe       	sbrs	r3, 6
 a1e:	06 c0       	rjmp	.+12     	; 0xa2c <vfprintf+0xc4>
 a20:	8a e0       	ldi	r24, 0x0A	; 10
 a22:	98 9e       	mul	r9, r24
 a24:	20 0d       	add	r18, r0
 a26:	11 24       	eor	r1, r1
 a28:	92 2e       	mov	r9, r18
 a2a:	11 c0       	rjmp	.+34     	; 0xa4e <vfprintf+0xe6>
 a2c:	ea e0       	ldi	r30, 0x0A	; 10
 a2e:	2e 9e       	mul	r2, r30
 a30:	20 0d       	add	r18, r0
 a32:	11 24       	eor	r1, r1
 a34:	22 2e       	mov	r2, r18
 a36:	f3 2d       	mov	r31, r3
 a38:	f0 62       	ori	r31, 0x20	; 32
 a3a:	3f 2e       	mov	r3, r31
 a3c:	08 c0       	rjmp	.+16     	; 0xa4e <vfprintf+0xe6>
 a3e:	8c 36       	cpi	r24, 0x6C	; 108
 a40:	21 f4       	brne	.+8      	; 0xa4a <vfprintf+0xe2>
 a42:	83 2d       	mov	r24, r3
 a44:	80 68       	ori	r24, 0x80	; 128
 a46:	38 2e       	mov	r3, r24
 a48:	02 c0       	rjmp	.+4      	; 0xa4e <vfprintf+0xe6>
 a4a:	88 36       	cpi	r24, 0x68	; 104
 a4c:	41 f4       	brne	.+16     	; 0xa5e <vfprintf+0xf6>
 a4e:	f7 01       	movw	r30, r14
 a50:	93 fd       	sbrc	r25, 3
 a52:	85 91       	lpm	r24, Z+
 a54:	93 ff       	sbrs	r25, 3
 a56:	81 91       	ld	r24, Z+
 a58:	7f 01       	movw	r14, r30
 a5a:	81 11       	cpse	r24, r1
 a5c:	b3 cf       	rjmp	.-154    	; 0x9c4 <vfprintf+0x5c>
 a5e:	98 2f       	mov	r25, r24
 a60:	9f 7d       	andi	r25, 0xDF	; 223
 a62:	95 54       	subi	r25, 0x45	; 69
 a64:	93 30       	cpi	r25, 0x03	; 3
 a66:	28 f4       	brcc	.+10     	; 0xa72 <vfprintf+0x10a>
 a68:	0c 5f       	subi	r16, 0xFC	; 252
 a6a:	1f 4f       	sbci	r17, 0xFF	; 255
 a6c:	9f e3       	ldi	r25, 0x3F	; 63
 a6e:	99 83       	std	Y+1, r25	; 0x01
 a70:	0d c0       	rjmp	.+26     	; 0xa8c <vfprintf+0x124>
 a72:	83 36       	cpi	r24, 0x63	; 99
 a74:	31 f0       	breq	.+12     	; 0xa82 <vfprintf+0x11a>
 a76:	83 37       	cpi	r24, 0x73	; 115
 a78:	71 f0       	breq	.+28     	; 0xa96 <vfprintf+0x12e>
 a7a:	83 35       	cpi	r24, 0x53	; 83
 a7c:	09 f0       	breq	.+2      	; 0xa80 <vfprintf+0x118>
 a7e:	59 c0       	rjmp	.+178    	; 0xb32 <vfprintf+0x1ca>
 a80:	21 c0       	rjmp	.+66     	; 0xac4 <vfprintf+0x15c>
 a82:	f8 01       	movw	r30, r16
 a84:	80 81       	ld	r24, Z
 a86:	89 83       	std	Y+1, r24	; 0x01
 a88:	0e 5f       	subi	r16, 0xFE	; 254
 a8a:	1f 4f       	sbci	r17, 0xFF	; 255
 a8c:	88 24       	eor	r8, r8
 a8e:	83 94       	inc	r8
 a90:	91 2c       	mov	r9, r1
 a92:	53 01       	movw	r10, r6
 a94:	13 c0       	rjmp	.+38     	; 0xabc <vfprintf+0x154>
 a96:	28 01       	movw	r4, r16
 a98:	f2 e0       	ldi	r31, 0x02	; 2
 a9a:	4f 0e       	add	r4, r31
 a9c:	51 1c       	adc	r5, r1
 a9e:	f8 01       	movw	r30, r16
 aa0:	a0 80       	ld	r10, Z
 aa2:	b1 80       	ldd	r11, Z+1	; 0x01
 aa4:	36 fe       	sbrs	r3, 6
 aa6:	03 c0       	rjmp	.+6      	; 0xaae <vfprintf+0x146>
 aa8:	69 2d       	mov	r22, r9
 aaa:	70 e0       	ldi	r23, 0x00	; 0
 aac:	02 c0       	rjmp	.+4      	; 0xab2 <vfprintf+0x14a>
 aae:	6f ef       	ldi	r22, 0xFF	; 255
 ab0:	7f ef       	ldi	r23, 0xFF	; 255
 ab2:	c5 01       	movw	r24, r10
 ab4:	0e 94 a0 06 	call	0xd40	; 0xd40 <strnlen>
 ab8:	4c 01       	movw	r8, r24
 aba:	82 01       	movw	r16, r4
 abc:	f3 2d       	mov	r31, r3
 abe:	ff 77       	andi	r31, 0x7F	; 127
 ac0:	3f 2e       	mov	r3, r31
 ac2:	16 c0       	rjmp	.+44     	; 0xaf0 <vfprintf+0x188>
 ac4:	28 01       	movw	r4, r16
 ac6:	22 e0       	ldi	r18, 0x02	; 2
 ac8:	42 0e       	add	r4, r18
 aca:	51 1c       	adc	r5, r1
 acc:	f8 01       	movw	r30, r16
 ace:	a0 80       	ld	r10, Z
 ad0:	b1 80       	ldd	r11, Z+1	; 0x01
 ad2:	36 fe       	sbrs	r3, 6
 ad4:	03 c0       	rjmp	.+6      	; 0xadc <vfprintf+0x174>
 ad6:	69 2d       	mov	r22, r9
 ad8:	70 e0       	ldi	r23, 0x00	; 0
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <vfprintf+0x178>
 adc:	6f ef       	ldi	r22, 0xFF	; 255
 ade:	7f ef       	ldi	r23, 0xFF	; 255
 ae0:	c5 01       	movw	r24, r10
 ae2:	0e 94 95 06 	call	0xd2a	; 0xd2a <strnlen_P>
 ae6:	4c 01       	movw	r8, r24
 ae8:	f3 2d       	mov	r31, r3
 aea:	f0 68       	ori	r31, 0x80	; 128
 aec:	3f 2e       	mov	r3, r31
 aee:	82 01       	movw	r16, r4
 af0:	33 fc       	sbrc	r3, 3
 af2:	1b c0       	rjmp	.+54     	; 0xb2a <vfprintf+0x1c2>
 af4:	82 2d       	mov	r24, r2
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	88 16       	cp	r8, r24
 afa:	99 06       	cpc	r9, r25
 afc:	b0 f4       	brcc	.+44     	; 0xb2a <vfprintf+0x1c2>
 afe:	b6 01       	movw	r22, r12
 b00:	80 e2       	ldi	r24, 0x20	; 32
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 b08:	2a 94       	dec	r2
 b0a:	f4 cf       	rjmp	.-24     	; 0xaf4 <vfprintf+0x18c>
 b0c:	f5 01       	movw	r30, r10
 b0e:	37 fc       	sbrc	r3, 7
 b10:	85 91       	lpm	r24, Z+
 b12:	37 fe       	sbrs	r3, 7
 b14:	81 91       	ld	r24, Z+
 b16:	5f 01       	movw	r10, r30
 b18:	b6 01       	movw	r22, r12
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 b20:	21 10       	cpse	r2, r1
 b22:	2a 94       	dec	r2
 b24:	21 e0       	ldi	r18, 0x01	; 1
 b26:	82 1a       	sub	r8, r18
 b28:	91 08       	sbc	r9, r1
 b2a:	81 14       	cp	r8, r1
 b2c:	91 04       	cpc	r9, r1
 b2e:	71 f7       	brne	.-36     	; 0xb0c <vfprintf+0x1a4>
 b30:	e8 c0       	rjmp	.+464    	; 0xd02 <vfprintf+0x39a>
 b32:	84 36       	cpi	r24, 0x64	; 100
 b34:	11 f0       	breq	.+4      	; 0xb3a <vfprintf+0x1d2>
 b36:	89 36       	cpi	r24, 0x69	; 105
 b38:	41 f5       	brne	.+80     	; 0xb8a <vfprintf+0x222>
 b3a:	f8 01       	movw	r30, r16
 b3c:	37 fe       	sbrs	r3, 7
 b3e:	07 c0       	rjmp	.+14     	; 0xb4e <vfprintf+0x1e6>
 b40:	60 81       	ld	r22, Z
 b42:	71 81       	ldd	r23, Z+1	; 0x01
 b44:	82 81       	ldd	r24, Z+2	; 0x02
 b46:	93 81       	ldd	r25, Z+3	; 0x03
 b48:	0c 5f       	subi	r16, 0xFC	; 252
 b4a:	1f 4f       	sbci	r17, 0xFF	; 255
 b4c:	08 c0       	rjmp	.+16     	; 0xb5e <vfprintf+0x1f6>
 b4e:	60 81       	ld	r22, Z
 b50:	71 81       	ldd	r23, Z+1	; 0x01
 b52:	07 2e       	mov	r0, r23
 b54:	00 0c       	add	r0, r0
 b56:	88 0b       	sbc	r24, r24
 b58:	99 0b       	sbc	r25, r25
 b5a:	0e 5f       	subi	r16, 0xFE	; 254
 b5c:	1f 4f       	sbci	r17, 0xFF	; 255
 b5e:	f3 2d       	mov	r31, r3
 b60:	ff 76       	andi	r31, 0x6F	; 111
 b62:	3f 2e       	mov	r3, r31
 b64:	97 ff       	sbrs	r25, 7
 b66:	09 c0       	rjmp	.+18     	; 0xb7a <vfprintf+0x212>
 b68:	90 95       	com	r25
 b6a:	80 95       	com	r24
 b6c:	70 95       	com	r23
 b6e:	61 95       	neg	r22
 b70:	7f 4f       	sbci	r23, 0xFF	; 255
 b72:	8f 4f       	sbci	r24, 0xFF	; 255
 b74:	9f 4f       	sbci	r25, 0xFF	; 255
 b76:	f0 68       	ori	r31, 0x80	; 128
 b78:	3f 2e       	mov	r3, r31
 b7a:	2a e0       	ldi	r18, 0x0A	; 10
 b7c:	30 e0       	ldi	r19, 0x00	; 0
 b7e:	a3 01       	movw	r20, r6
 b80:	0e 94 e7 06 	call	0xdce	; 0xdce <__ultoa_invert>
 b84:	88 2e       	mov	r8, r24
 b86:	86 18       	sub	r8, r6
 b88:	45 c0       	rjmp	.+138    	; 0xc14 <vfprintf+0x2ac>
 b8a:	85 37       	cpi	r24, 0x75	; 117
 b8c:	31 f4       	brne	.+12     	; 0xb9a <vfprintf+0x232>
 b8e:	23 2d       	mov	r18, r3
 b90:	2f 7e       	andi	r18, 0xEF	; 239
 b92:	b2 2e       	mov	r11, r18
 b94:	2a e0       	ldi	r18, 0x0A	; 10
 b96:	30 e0       	ldi	r19, 0x00	; 0
 b98:	25 c0       	rjmp	.+74     	; 0xbe4 <vfprintf+0x27c>
 b9a:	93 2d       	mov	r25, r3
 b9c:	99 7f       	andi	r25, 0xF9	; 249
 b9e:	b9 2e       	mov	r11, r25
 ba0:	8f 36       	cpi	r24, 0x6F	; 111
 ba2:	c1 f0       	breq	.+48     	; 0xbd4 <vfprintf+0x26c>
 ba4:	18 f4       	brcc	.+6      	; 0xbac <vfprintf+0x244>
 ba6:	88 35       	cpi	r24, 0x58	; 88
 ba8:	79 f0       	breq	.+30     	; 0xbc8 <vfprintf+0x260>
 baa:	b5 c0       	rjmp	.+362    	; 0xd16 <vfprintf+0x3ae>
 bac:	80 37       	cpi	r24, 0x70	; 112
 bae:	19 f0       	breq	.+6      	; 0xbb6 <vfprintf+0x24e>
 bb0:	88 37       	cpi	r24, 0x78	; 120
 bb2:	21 f0       	breq	.+8      	; 0xbbc <vfprintf+0x254>
 bb4:	b0 c0       	rjmp	.+352    	; 0xd16 <vfprintf+0x3ae>
 bb6:	e9 2f       	mov	r30, r25
 bb8:	e0 61       	ori	r30, 0x10	; 16
 bba:	be 2e       	mov	r11, r30
 bbc:	b4 fe       	sbrs	r11, 4
 bbe:	0d c0       	rjmp	.+26     	; 0xbda <vfprintf+0x272>
 bc0:	fb 2d       	mov	r31, r11
 bc2:	f4 60       	ori	r31, 0x04	; 4
 bc4:	bf 2e       	mov	r11, r31
 bc6:	09 c0       	rjmp	.+18     	; 0xbda <vfprintf+0x272>
 bc8:	34 fe       	sbrs	r3, 4
 bca:	0a c0       	rjmp	.+20     	; 0xbe0 <vfprintf+0x278>
 bcc:	29 2f       	mov	r18, r25
 bce:	26 60       	ori	r18, 0x06	; 6
 bd0:	b2 2e       	mov	r11, r18
 bd2:	06 c0       	rjmp	.+12     	; 0xbe0 <vfprintf+0x278>
 bd4:	28 e0       	ldi	r18, 0x08	; 8
 bd6:	30 e0       	ldi	r19, 0x00	; 0
 bd8:	05 c0       	rjmp	.+10     	; 0xbe4 <vfprintf+0x27c>
 bda:	20 e1       	ldi	r18, 0x10	; 16
 bdc:	30 e0       	ldi	r19, 0x00	; 0
 bde:	02 c0       	rjmp	.+4      	; 0xbe4 <vfprintf+0x27c>
 be0:	20 e1       	ldi	r18, 0x10	; 16
 be2:	32 e0       	ldi	r19, 0x02	; 2
 be4:	f8 01       	movw	r30, r16
 be6:	b7 fe       	sbrs	r11, 7
 be8:	07 c0       	rjmp	.+14     	; 0xbf8 <vfprintf+0x290>
 bea:	60 81       	ld	r22, Z
 bec:	71 81       	ldd	r23, Z+1	; 0x01
 bee:	82 81       	ldd	r24, Z+2	; 0x02
 bf0:	93 81       	ldd	r25, Z+3	; 0x03
 bf2:	0c 5f       	subi	r16, 0xFC	; 252
 bf4:	1f 4f       	sbci	r17, 0xFF	; 255
 bf6:	06 c0       	rjmp	.+12     	; 0xc04 <vfprintf+0x29c>
 bf8:	60 81       	ld	r22, Z
 bfa:	71 81       	ldd	r23, Z+1	; 0x01
 bfc:	80 e0       	ldi	r24, 0x00	; 0
 bfe:	90 e0       	ldi	r25, 0x00	; 0
 c00:	0e 5f       	subi	r16, 0xFE	; 254
 c02:	1f 4f       	sbci	r17, 0xFF	; 255
 c04:	a3 01       	movw	r20, r6
 c06:	0e 94 e7 06 	call	0xdce	; 0xdce <__ultoa_invert>
 c0a:	88 2e       	mov	r8, r24
 c0c:	86 18       	sub	r8, r6
 c0e:	fb 2d       	mov	r31, r11
 c10:	ff 77       	andi	r31, 0x7F	; 127
 c12:	3f 2e       	mov	r3, r31
 c14:	36 fe       	sbrs	r3, 6
 c16:	0d c0       	rjmp	.+26     	; 0xc32 <vfprintf+0x2ca>
 c18:	23 2d       	mov	r18, r3
 c1a:	2e 7f       	andi	r18, 0xFE	; 254
 c1c:	a2 2e       	mov	r10, r18
 c1e:	89 14       	cp	r8, r9
 c20:	58 f4       	brcc	.+22     	; 0xc38 <vfprintf+0x2d0>
 c22:	34 fe       	sbrs	r3, 4
 c24:	0b c0       	rjmp	.+22     	; 0xc3c <vfprintf+0x2d4>
 c26:	32 fc       	sbrc	r3, 2
 c28:	09 c0       	rjmp	.+18     	; 0xc3c <vfprintf+0x2d4>
 c2a:	83 2d       	mov	r24, r3
 c2c:	8e 7e       	andi	r24, 0xEE	; 238
 c2e:	a8 2e       	mov	r10, r24
 c30:	05 c0       	rjmp	.+10     	; 0xc3c <vfprintf+0x2d4>
 c32:	b8 2c       	mov	r11, r8
 c34:	a3 2c       	mov	r10, r3
 c36:	03 c0       	rjmp	.+6      	; 0xc3e <vfprintf+0x2d6>
 c38:	b8 2c       	mov	r11, r8
 c3a:	01 c0       	rjmp	.+2      	; 0xc3e <vfprintf+0x2d6>
 c3c:	b9 2c       	mov	r11, r9
 c3e:	a4 fe       	sbrs	r10, 4
 c40:	0f c0       	rjmp	.+30     	; 0xc60 <vfprintf+0x2f8>
 c42:	fe 01       	movw	r30, r28
 c44:	e8 0d       	add	r30, r8
 c46:	f1 1d       	adc	r31, r1
 c48:	80 81       	ld	r24, Z
 c4a:	80 33       	cpi	r24, 0x30	; 48
 c4c:	21 f4       	brne	.+8      	; 0xc56 <vfprintf+0x2ee>
 c4e:	9a 2d       	mov	r25, r10
 c50:	99 7e       	andi	r25, 0xE9	; 233
 c52:	a9 2e       	mov	r10, r25
 c54:	09 c0       	rjmp	.+18     	; 0xc68 <vfprintf+0x300>
 c56:	a2 fe       	sbrs	r10, 2
 c58:	06 c0       	rjmp	.+12     	; 0xc66 <vfprintf+0x2fe>
 c5a:	b3 94       	inc	r11
 c5c:	b3 94       	inc	r11
 c5e:	04 c0       	rjmp	.+8      	; 0xc68 <vfprintf+0x300>
 c60:	8a 2d       	mov	r24, r10
 c62:	86 78       	andi	r24, 0x86	; 134
 c64:	09 f0       	breq	.+2      	; 0xc68 <vfprintf+0x300>
 c66:	b3 94       	inc	r11
 c68:	a3 fc       	sbrc	r10, 3
 c6a:	11 c0       	rjmp	.+34     	; 0xc8e <vfprintf+0x326>
 c6c:	a0 fe       	sbrs	r10, 0
 c6e:	06 c0       	rjmp	.+12     	; 0xc7c <vfprintf+0x314>
 c70:	b2 14       	cp	r11, r2
 c72:	88 f4       	brcc	.+34     	; 0xc96 <vfprintf+0x32e>
 c74:	28 0c       	add	r2, r8
 c76:	92 2c       	mov	r9, r2
 c78:	9b 18       	sub	r9, r11
 c7a:	0e c0       	rjmp	.+28     	; 0xc98 <vfprintf+0x330>
 c7c:	b2 14       	cp	r11, r2
 c7e:	60 f4       	brcc	.+24     	; 0xc98 <vfprintf+0x330>
 c80:	b6 01       	movw	r22, r12
 c82:	80 e2       	ldi	r24, 0x20	; 32
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 c8a:	b3 94       	inc	r11
 c8c:	f7 cf       	rjmp	.-18     	; 0xc7c <vfprintf+0x314>
 c8e:	b2 14       	cp	r11, r2
 c90:	18 f4       	brcc	.+6      	; 0xc98 <vfprintf+0x330>
 c92:	2b 18       	sub	r2, r11
 c94:	02 c0       	rjmp	.+4      	; 0xc9a <vfprintf+0x332>
 c96:	98 2c       	mov	r9, r8
 c98:	21 2c       	mov	r2, r1
 c9a:	a4 fe       	sbrs	r10, 4
 c9c:	10 c0       	rjmp	.+32     	; 0xcbe <vfprintf+0x356>
 c9e:	b6 01       	movw	r22, r12
 ca0:	80 e3       	ldi	r24, 0x30	; 48
 ca2:	90 e0       	ldi	r25, 0x00	; 0
 ca4:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 ca8:	a2 fe       	sbrs	r10, 2
 caa:	17 c0       	rjmp	.+46     	; 0xcda <vfprintf+0x372>
 cac:	a1 fc       	sbrc	r10, 1
 cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x34e>
 cb0:	88 e7       	ldi	r24, 0x78	; 120
 cb2:	90 e0       	ldi	r25, 0x00	; 0
 cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x352>
 cb6:	88 e5       	ldi	r24, 0x58	; 88
 cb8:	90 e0       	ldi	r25, 0x00	; 0
 cba:	b6 01       	movw	r22, r12
 cbc:	0c c0       	rjmp	.+24     	; 0xcd6 <vfprintf+0x36e>
 cbe:	8a 2d       	mov	r24, r10
 cc0:	86 78       	andi	r24, 0x86	; 134
 cc2:	59 f0       	breq	.+22     	; 0xcda <vfprintf+0x372>
 cc4:	a1 fe       	sbrs	r10, 1
 cc6:	02 c0       	rjmp	.+4      	; 0xccc <vfprintf+0x364>
 cc8:	8b e2       	ldi	r24, 0x2B	; 43
 cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x366>
 ccc:	80 e2       	ldi	r24, 0x20	; 32
 cce:	a7 fc       	sbrc	r10, 7
 cd0:	8d e2       	ldi	r24, 0x2D	; 45
 cd2:	b6 01       	movw	r22, r12
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 cda:	89 14       	cp	r8, r9
 cdc:	38 f4       	brcc	.+14     	; 0xcec <vfprintf+0x384>
 cde:	b6 01       	movw	r22, r12
 ce0:	80 e3       	ldi	r24, 0x30	; 48
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 ce8:	9a 94       	dec	r9
 cea:	f7 cf       	rjmp	.-18     	; 0xcda <vfprintf+0x372>
 cec:	8a 94       	dec	r8
 cee:	f3 01       	movw	r30, r6
 cf0:	e8 0d       	add	r30, r8
 cf2:	f1 1d       	adc	r31, r1
 cf4:	80 81       	ld	r24, Z
 cf6:	b6 01       	movw	r22, r12
 cf8:	90 e0       	ldi	r25, 0x00	; 0
 cfa:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 cfe:	81 10       	cpse	r8, r1
 d00:	f5 cf       	rjmp	.-22     	; 0xcec <vfprintf+0x384>
 d02:	22 20       	and	r2, r2
 d04:	09 f4       	brne	.+2      	; 0xd08 <vfprintf+0x3a0>
 d06:	42 ce       	rjmp	.-892    	; 0x98c <vfprintf+0x24>
 d08:	b6 01       	movw	r22, r12
 d0a:	80 e2       	ldi	r24, 0x20	; 32
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	0e 94 ab 06 	call	0xd56	; 0xd56 <fputc>
 d12:	2a 94       	dec	r2
 d14:	f6 cf       	rjmp	.-20     	; 0xd02 <vfprintf+0x39a>
 d16:	f6 01       	movw	r30, r12
 d18:	86 81       	ldd	r24, Z+6	; 0x06
 d1a:	97 81       	ldd	r25, Z+7	; 0x07
 d1c:	02 c0       	rjmp	.+4      	; 0xd22 <vfprintf+0x3ba>
 d1e:	8f ef       	ldi	r24, 0xFF	; 255
 d20:	9f ef       	ldi	r25, 0xFF	; 255
 d22:	2b 96       	adiw	r28, 0x0b	; 11
 d24:	e2 e1       	ldi	r30, 0x12	; 18
 d26:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__epilogue_restores__>

00000d2a <strnlen_P>:
 d2a:	fc 01       	movw	r30, r24
 d2c:	05 90       	lpm	r0, Z+
 d2e:	61 50       	subi	r22, 0x01	; 1
 d30:	70 40       	sbci	r23, 0x00	; 0
 d32:	01 10       	cpse	r0, r1
 d34:	d8 f7       	brcc	.-10     	; 0xd2c <strnlen_P+0x2>
 d36:	80 95       	com	r24
 d38:	90 95       	com	r25
 d3a:	8e 0f       	add	r24, r30
 d3c:	9f 1f       	adc	r25, r31
 d3e:	08 95       	ret

00000d40 <strnlen>:
 d40:	fc 01       	movw	r30, r24
 d42:	61 50       	subi	r22, 0x01	; 1
 d44:	70 40       	sbci	r23, 0x00	; 0
 d46:	01 90       	ld	r0, Z+
 d48:	01 10       	cpse	r0, r1
 d4a:	d8 f7       	brcc	.-10     	; 0xd42 <strnlen+0x2>
 d4c:	80 95       	com	r24
 d4e:	90 95       	com	r25
 d50:	8e 0f       	add	r24, r30
 d52:	9f 1f       	adc	r25, r31
 d54:	08 95       	ret

00000d56 <fputc>:
 d56:	0f 93       	push	r16
 d58:	1f 93       	push	r17
 d5a:	cf 93       	push	r28
 d5c:	df 93       	push	r29
 d5e:	fb 01       	movw	r30, r22
 d60:	23 81       	ldd	r18, Z+3	; 0x03
 d62:	21 fd       	sbrc	r18, 1
 d64:	03 c0       	rjmp	.+6      	; 0xd6c <fputc+0x16>
 d66:	8f ef       	ldi	r24, 0xFF	; 255
 d68:	9f ef       	ldi	r25, 0xFF	; 255
 d6a:	2c c0       	rjmp	.+88     	; 0xdc4 <fputc+0x6e>
 d6c:	22 ff       	sbrs	r18, 2
 d6e:	16 c0       	rjmp	.+44     	; 0xd9c <fputc+0x46>
 d70:	46 81       	ldd	r20, Z+6	; 0x06
 d72:	57 81       	ldd	r21, Z+7	; 0x07
 d74:	24 81       	ldd	r18, Z+4	; 0x04
 d76:	35 81       	ldd	r19, Z+5	; 0x05
 d78:	42 17       	cp	r20, r18
 d7a:	53 07       	cpc	r21, r19
 d7c:	44 f4       	brge	.+16     	; 0xd8e <fputc+0x38>
 d7e:	a0 81       	ld	r26, Z
 d80:	b1 81       	ldd	r27, Z+1	; 0x01
 d82:	9d 01       	movw	r18, r26
 d84:	2f 5f       	subi	r18, 0xFF	; 255
 d86:	3f 4f       	sbci	r19, 0xFF	; 255
 d88:	31 83       	std	Z+1, r19	; 0x01
 d8a:	20 83       	st	Z, r18
 d8c:	8c 93       	st	X, r24
 d8e:	26 81       	ldd	r18, Z+6	; 0x06
 d90:	37 81       	ldd	r19, Z+7	; 0x07
 d92:	2f 5f       	subi	r18, 0xFF	; 255
 d94:	3f 4f       	sbci	r19, 0xFF	; 255
 d96:	37 83       	std	Z+7, r19	; 0x07
 d98:	26 83       	std	Z+6, r18	; 0x06
 d9a:	14 c0       	rjmp	.+40     	; 0xdc4 <fputc+0x6e>
 d9c:	8b 01       	movw	r16, r22
 d9e:	ec 01       	movw	r28, r24
 da0:	fb 01       	movw	r30, r22
 da2:	00 84       	ldd	r0, Z+8	; 0x08
 da4:	f1 85       	ldd	r31, Z+9	; 0x09
 da6:	e0 2d       	mov	r30, r0
 da8:	09 95       	icall
 daa:	89 2b       	or	r24, r25
 dac:	e1 f6       	brne	.-72     	; 0xd66 <fputc+0x10>
 dae:	d8 01       	movw	r26, r16
 db0:	16 96       	adiw	r26, 0x06	; 6
 db2:	8d 91       	ld	r24, X+
 db4:	9c 91       	ld	r25, X
 db6:	17 97       	sbiw	r26, 0x07	; 7
 db8:	01 96       	adiw	r24, 0x01	; 1
 dba:	17 96       	adiw	r26, 0x07	; 7
 dbc:	9c 93       	st	X, r25
 dbe:	8e 93       	st	-X, r24
 dc0:	16 97       	sbiw	r26, 0x06	; 6
 dc2:	ce 01       	movw	r24, r28
 dc4:	df 91       	pop	r29
 dc6:	cf 91       	pop	r28
 dc8:	1f 91       	pop	r17
 dca:	0f 91       	pop	r16
 dcc:	08 95       	ret

00000dce <__ultoa_invert>:
 dce:	fa 01       	movw	r30, r20
 dd0:	aa 27       	eor	r26, r26
 dd2:	28 30       	cpi	r18, 0x08	; 8
 dd4:	51 f1       	breq	.+84     	; 0xe2a <__ultoa_invert+0x5c>
 dd6:	20 31       	cpi	r18, 0x10	; 16
 dd8:	81 f1       	breq	.+96     	; 0xe3a <__ultoa_invert+0x6c>
 dda:	e8 94       	clt
 ddc:	6f 93       	push	r22
 dde:	6e 7f       	andi	r22, 0xFE	; 254
 de0:	6e 5f       	subi	r22, 0xFE	; 254
 de2:	7f 4f       	sbci	r23, 0xFF	; 255
 de4:	8f 4f       	sbci	r24, 0xFF	; 255
 de6:	9f 4f       	sbci	r25, 0xFF	; 255
 de8:	af 4f       	sbci	r26, 0xFF	; 255
 dea:	b1 e0       	ldi	r27, 0x01	; 1
 dec:	3e d0       	rcall	.+124    	; 0xe6a <__ultoa_invert+0x9c>
 dee:	b4 e0       	ldi	r27, 0x04	; 4
 df0:	3c d0       	rcall	.+120    	; 0xe6a <__ultoa_invert+0x9c>
 df2:	67 0f       	add	r22, r23
 df4:	78 1f       	adc	r23, r24
 df6:	89 1f       	adc	r24, r25
 df8:	9a 1f       	adc	r25, r26
 dfa:	a1 1d       	adc	r26, r1
 dfc:	68 0f       	add	r22, r24
 dfe:	79 1f       	adc	r23, r25
 e00:	8a 1f       	adc	r24, r26
 e02:	91 1d       	adc	r25, r1
 e04:	a1 1d       	adc	r26, r1
 e06:	6a 0f       	add	r22, r26
 e08:	71 1d       	adc	r23, r1
 e0a:	81 1d       	adc	r24, r1
 e0c:	91 1d       	adc	r25, r1
 e0e:	a1 1d       	adc	r26, r1
 e10:	20 d0       	rcall	.+64     	; 0xe52 <__ultoa_invert+0x84>
 e12:	09 f4       	brne	.+2      	; 0xe16 <__ultoa_invert+0x48>
 e14:	68 94       	set
 e16:	3f 91       	pop	r19
 e18:	2a e0       	ldi	r18, 0x0A	; 10
 e1a:	26 9f       	mul	r18, r22
 e1c:	11 24       	eor	r1, r1
 e1e:	30 19       	sub	r19, r0
 e20:	30 5d       	subi	r19, 0xD0	; 208
 e22:	31 93       	st	Z+, r19
 e24:	de f6       	brtc	.-74     	; 0xddc <__ultoa_invert+0xe>
 e26:	cf 01       	movw	r24, r30
 e28:	08 95       	ret
 e2a:	46 2f       	mov	r20, r22
 e2c:	47 70       	andi	r20, 0x07	; 7
 e2e:	40 5d       	subi	r20, 0xD0	; 208
 e30:	41 93       	st	Z+, r20
 e32:	b3 e0       	ldi	r27, 0x03	; 3
 e34:	0f d0       	rcall	.+30     	; 0xe54 <__ultoa_invert+0x86>
 e36:	c9 f7       	brne	.-14     	; 0xe2a <__ultoa_invert+0x5c>
 e38:	f6 cf       	rjmp	.-20     	; 0xe26 <__ultoa_invert+0x58>
 e3a:	46 2f       	mov	r20, r22
 e3c:	4f 70       	andi	r20, 0x0F	; 15
 e3e:	40 5d       	subi	r20, 0xD0	; 208
 e40:	4a 33       	cpi	r20, 0x3A	; 58
 e42:	18 f0       	brcs	.+6      	; 0xe4a <__ultoa_invert+0x7c>
 e44:	49 5d       	subi	r20, 0xD9	; 217
 e46:	31 fd       	sbrc	r19, 1
 e48:	40 52       	subi	r20, 0x20	; 32
 e4a:	41 93       	st	Z+, r20
 e4c:	02 d0       	rcall	.+4      	; 0xe52 <__ultoa_invert+0x84>
 e4e:	a9 f7       	brne	.-22     	; 0xe3a <__ultoa_invert+0x6c>
 e50:	ea cf       	rjmp	.-44     	; 0xe26 <__ultoa_invert+0x58>
 e52:	b4 e0       	ldi	r27, 0x04	; 4
 e54:	a6 95       	lsr	r26
 e56:	97 95       	ror	r25
 e58:	87 95       	ror	r24
 e5a:	77 95       	ror	r23
 e5c:	67 95       	ror	r22
 e5e:	ba 95       	dec	r27
 e60:	c9 f7       	brne	.-14     	; 0xe54 <__ultoa_invert+0x86>
 e62:	00 97       	sbiw	r24, 0x00	; 0
 e64:	61 05       	cpc	r22, r1
 e66:	71 05       	cpc	r23, r1
 e68:	08 95       	ret
 e6a:	9b 01       	movw	r18, r22
 e6c:	ac 01       	movw	r20, r24
 e6e:	0a 2e       	mov	r0, r26
 e70:	06 94       	lsr	r0
 e72:	57 95       	ror	r21
 e74:	47 95       	ror	r20
 e76:	37 95       	ror	r19
 e78:	27 95       	ror	r18
 e7a:	ba 95       	dec	r27
 e7c:	c9 f7       	brne	.-14     	; 0xe70 <__ultoa_invert+0xa2>
 e7e:	62 0f       	add	r22, r18
 e80:	73 1f       	adc	r23, r19
 e82:	84 1f       	adc	r24, r20
 e84:	95 1f       	adc	r25, r21
 e86:	a0 1d       	adc	r26, r0
 e88:	08 95       	ret

00000e8a <__prologue_saves__>:
 e8a:	2f 92       	push	r2
 e8c:	3f 92       	push	r3
 e8e:	4f 92       	push	r4
 e90:	5f 92       	push	r5
 e92:	6f 92       	push	r6
 e94:	7f 92       	push	r7
 e96:	8f 92       	push	r8
 e98:	9f 92       	push	r9
 e9a:	af 92       	push	r10
 e9c:	bf 92       	push	r11
 e9e:	cf 92       	push	r12
 ea0:	df 92       	push	r13
 ea2:	ef 92       	push	r14
 ea4:	ff 92       	push	r15
 ea6:	0f 93       	push	r16
 ea8:	1f 93       	push	r17
 eaa:	cf 93       	push	r28
 eac:	df 93       	push	r29
 eae:	cd b7       	in	r28, 0x3d	; 61
 eb0:	de b7       	in	r29, 0x3e	; 62
 eb2:	ca 1b       	sub	r28, r26
 eb4:	db 0b       	sbc	r29, r27
 eb6:	0f b6       	in	r0, 0x3f	; 63
 eb8:	f8 94       	cli
 eba:	de bf       	out	0x3e, r29	; 62
 ebc:	0f be       	out	0x3f, r0	; 63
 ebe:	cd bf       	out	0x3d, r28	; 61
 ec0:	09 94       	ijmp

00000ec2 <__epilogue_restores__>:
 ec2:	2a 88       	ldd	r2, Y+18	; 0x12
 ec4:	39 88       	ldd	r3, Y+17	; 0x11
 ec6:	48 88       	ldd	r4, Y+16	; 0x10
 ec8:	5f 84       	ldd	r5, Y+15	; 0x0f
 eca:	6e 84       	ldd	r6, Y+14	; 0x0e
 ecc:	7d 84       	ldd	r7, Y+13	; 0x0d
 ece:	8c 84       	ldd	r8, Y+12	; 0x0c
 ed0:	9b 84       	ldd	r9, Y+11	; 0x0b
 ed2:	aa 84       	ldd	r10, Y+10	; 0x0a
 ed4:	b9 84       	ldd	r11, Y+9	; 0x09
 ed6:	c8 84       	ldd	r12, Y+8	; 0x08
 ed8:	df 80       	ldd	r13, Y+7	; 0x07
 eda:	ee 80       	ldd	r14, Y+6	; 0x06
 edc:	fd 80       	ldd	r15, Y+5	; 0x05
 ede:	0c 81       	ldd	r16, Y+4	; 0x04
 ee0:	1b 81       	ldd	r17, Y+3	; 0x03
 ee2:	aa 81       	ldd	r26, Y+2	; 0x02
 ee4:	b9 81       	ldd	r27, Y+1	; 0x01
 ee6:	ce 0f       	add	r28, r30
 ee8:	d1 1d       	adc	r29, r1
 eea:	0f b6       	in	r0, 0x3f	; 63
 eec:	f8 94       	cli
 eee:	de bf       	out	0x3e, r29	; 62
 ef0:	0f be       	out	0x3f, r0	; 63
 ef2:	cd bf       	out	0x3d, r28	; 61
 ef4:	ed 01       	movw	r28, r26
 ef6:	08 95       	ret

00000ef8 <_exit>:
 ef8:	f8 94       	cli

00000efa <__stop_program>:
 efa:	ff cf       	rjmp	.-2      	; 0xefa <__stop_program>

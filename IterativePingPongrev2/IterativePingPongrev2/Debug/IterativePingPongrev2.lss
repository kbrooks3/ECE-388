
IterativePingPongrev2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000fd0  00001064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  0080012a  0080012a  0000108e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000108e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  0000112c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001106  00000000  00000000  00001194  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b1a  00000000  00000000  0000229a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000648  00000000  00000000  00002db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  000033fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000060c  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000675  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000041cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__vector_3>
  10:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__vector_4>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 ed       	ldi	r30, 0xD0	; 208
  c8:	ff e0       	ldi	r31, 0x0F	; 15
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 32       	cpi	r26, 0x2A	; 42
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	aa e2       	ldi	r26, 0x2A	; 42
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a8 36       	cpi	r26, 0x68	; 104
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 40 02 	call	0x480	; 0x480 <main>
  ea:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <_Z10lcdCommandh>:
	}
}

void lcdCommand( unsigned char cmnd )
{
	LCD_DPRT = (LCD_DPRT&0x0F)|(cmnd & 0xF0);
  f2:	9b b1       	in	r25, 0x0b	; 11
  f4:	9f 70       	andi	r25, 0x0F	; 15
  f6:	28 2f       	mov	r18, r24
  f8:	20 7f       	andi	r18, 0xF0	; 240
  fa:	92 2b       	or	r25, r18
  fc:	9b b9       	out	0x0b, r25	; 11
	LCD_CPRT &= ~ (1<<LCD_RS);
  fe:	40 98       	cbi	0x08, 0	; 8
	LCD_CPRT &= ~ (1<<LCD_RW);
 100:	41 98       	cbi	0x08, 1	; 8
	LCD_CPRT |= (1<<LCD_EN);
 102:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	35 e0       	ldi	r19, 0x05	; 5
 106:	3a 95       	dec	r19
 108:	f1 f7       	brne	.-4      	; 0x106 <_Z10lcdCommandh+0x14>
 10a:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 10c:	42 98       	cbi	0x08, 2	; 8
 10e:	ef e8       	ldi	r30, 0x8F	; 143
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <_Z10lcdCommandh+0x20>
 116:	00 c0       	rjmp	.+0      	; 0x118 <_Z10lcdCommandh+0x26>
 118:	00 00       	nop
	_delay_us(100);
	LCD_DPRT = (LCD_DPRT&0x0F)|(cmnd<<4);
 11a:	2b b1       	in	r18, 0x0b	; 11
 11c:	2f 70       	andi	r18, 0x0F	; 15
 11e:	f0 e1       	ldi	r31, 0x10	; 16
 120:	8f 9f       	mul	r24, r31
 122:	c0 01       	movw	r24, r0
 124:	11 24       	eor	r1, r1
 126:	82 2b       	or	r24, r18
 128:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT |= (1<<LCD_EN);
 12a:	42 9a       	sbi	0x08, 2	; 8
 12c:	35 e0       	ldi	r19, 0x05	; 5
 12e:	3a 95       	dec	r19
 130:	f1 f7       	brne	.-4      	; 0x12e <_Z10lcdCommandh+0x3c>
 132:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 134:	42 98       	cbi	0x08, 2	; 8
 136:	8f e8       	ldi	r24, 0x8F	; 143
 138:	91 e0       	ldi	r25, 0x01	; 1
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <_Z10lcdCommandh+0x48>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_Z10lcdCommandh+0x4e>
 140:	00 00       	nop
 142:	08 95       	ret

00000144 <_Z7lcdDatah>:
	_delay_us(100);
}

void lcdData( unsigned char data )
{
	LCD_DPRT = (LCD_DPRT&0x0F)|(data & 0xF0);
 144:	9b b1       	in	r25, 0x0b	; 11
 146:	9f 70       	andi	r25, 0x0F	; 15
 148:	28 2f       	mov	r18, r24
 14a:	20 7f       	andi	r18, 0xF0	; 240
 14c:	92 2b       	or	r25, r18
 14e:	9b b9       	out	0x0b, r25	; 11
	LCD_CPRT |= (1<<LCD_RS);
 150:	40 9a       	sbi	0x08, 0	; 8
	LCD_CPRT &= ~ (1<<LCD_RW);
 152:	41 98       	cbi	0x08, 1	; 8
	LCD_CPRT |= (1<<LCD_EN);
 154:	42 9a       	sbi	0x08, 2	; 8
 156:	35 e0       	ldi	r19, 0x05	; 5
 158:	3a 95       	dec	r19
 15a:	f1 f7       	brne	.-4      	; 0x158 <_Z7lcdDatah+0x14>
 15c:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 15e:	42 98       	cbi	0x08, 2	; 8
	LCD_DPRT = (LCD_DPRT&0x0F)|(data<<4);
 160:	2b b1       	in	r18, 0x0b	; 11
 162:	2f 70       	andi	r18, 0x0F	; 15
 164:	30 e1       	ldi	r19, 0x10	; 16
 166:	83 9f       	mul	r24, r19
 168:	c0 01       	movw	r24, r0
 16a:	11 24       	eor	r1, r1
 16c:	82 2b       	or	r24, r18
 16e:	8b b9       	out	0x0b, r24	; 11
	LCD_CPRT |= (1<<LCD_EN);
 170:	42 9a       	sbi	0x08, 2	; 8
 172:	85 e0       	ldi	r24, 0x05	; 5
 174:	8a 95       	dec	r24
 176:	f1 f7       	brne	.-4      	; 0x174 <_Z7lcdDatah+0x30>
 178:	00 00       	nop
	_delay_us(1);
	LCD_CPRT &= ~ (1<<LCD_EN);
 17a:	42 98       	cbi	0x08, 2	; 8
 17c:	8f e8       	ldi	r24, 0x8F	; 143
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <_Z7lcdDatah+0x3c>
 184:	00 c0       	rjmp	.+0      	; 0x186 <_Z7lcdDatah+0x42>
 186:	00 00       	nop
 188:	08 95       	ret

0000018a <_Z8lcd_initv>:
	_delay_us(100);
}

void lcd_init()
{
	LCD_DDDR = 0xFF;
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	8a b9       	out	0x0a, r24	; 10
	LCD_CDDR = (LCD_CDDR | 0b00000111);
 18e:	87 b1       	in	r24, 0x07	; 7
 190:	87 60       	ori	r24, 0x07	; 7
 192:	87 b9       	out	0x07, r24	; 7
	LCD_CPRT &=~(1<<LCD_EN);
 194:	42 98       	cbi	0x08, 2	; 8
	lcdCommand(0x33);
 196:	83 e3       	ldi	r24, 0x33	; 51
 198:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x32);
 19c:	82 e3       	ldi	r24, 0x32	; 50
 19e:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x28);
 1a2:	88 e2       	ldi	r24, 0x28	; 40
 1a4:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x0e);
 1a8:	8e e0       	ldi	r24, 0x0E	; 14
 1aa:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
	lcdCommand(0x01);
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1b4:	8f e3       	ldi	r24, 0x3F	; 63
 1b6:	9f e1       	ldi	r25, 0x1F	; 31
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <_Z8lcd_initv+0x2e>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <_Z8lcd_initv+0x34>
 1be:	00 00       	nop
	_delay_us(2000);
	lcdCommand(0x06);
 1c0:	86 e0       	ldi	r24, 0x06	; 6
 1c2:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1c6:	08 95       	ret

000001c8 <_Z10lcd_gotoxyhh>:
}

void lcd_gotoxy(unsigned char x, unsigned char y)
{
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	00 d0       	rcall	.+0      	; 0x1ce <_Z10lcd_gotoxyhh+0x6>
 1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_Z10lcd_gotoxyhh+0x8>
 1d0:	cd b7       	in	r28, 0x3d	; 61
 1d2:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[]={0x80,0xC0,0x94,0xD4} ;
 1d4:	90 e8       	ldi	r25, 0x80	; 128
 1d6:	99 83       	std	Y+1, r25	; 0x01
 1d8:	90 ec       	ldi	r25, 0xC0	; 192
 1da:	9a 83       	std	Y+2, r25	; 0x02
 1dc:	94 e9       	ldi	r25, 0x94	; 148
 1de:	9b 83       	std	Y+3, r25	; 0x03
 1e0:	94 ed       	ldi	r25, 0xD4	; 212
 1e2:	9c 83       	std	Y+4, r25	; 0x04

	lcdCommand(firstCharAdr[y-1] + x - 1);
 1e4:	fe 01       	movw	r30, r28
 1e6:	e6 0f       	add	r30, r22
 1e8:	f1 1d       	adc	r31, r1
 1ea:	81 50       	subi	r24, 0x01	; 1
 1ec:	90 81       	ld	r25, Z
 1ee:	89 0f       	add	r24, r25
 1f0:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z10lcdCommandh>
 1f4:	8f e8       	ldi	r24, 0x8F	; 143
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_Z10lcd_gotoxyhh+0x30>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <_Z10lcd_gotoxyhh+0x36>
 1fe:	00 00       	nop
	_delay_us(100);
}
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <_Z9lcd_printPc>:

void lcd_print(char * str )
{
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	fc 01       	movw	r30, r24
	unsigned char i = 0 ;

	while(str[i]!=0)
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	59 f0       	breq	.+22     	; 0x232 <_Z9lcd_printPc+0x24>
 21c:	8f 01       	movw	r16, r30
 21e:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcdData(str[i]);
 220:	0e 94 a2 00 	call	0x144	; 0x144 <_Z7lcdDatah>
		i++ ;
 224:	cf 5f       	subi	r28, 0xFF	; 255

void lcd_print(char * str )
{
	unsigned char i = 0 ;

	while(str[i]!=0)
 226:	f8 01       	movw	r30, r16
 228:	ec 0f       	add	r30, r28
 22a:	f1 1d       	adc	r31, r1
 22c:	80 81       	ld	r24, Z
 22e:	81 11       	cpse	r24, r1
 230:	f7 cf       	rjmp	.-18     	; 0x220 <_Z9lcd_printPc+0x12>
	{
		lcdData(str[i]);
		i++ ;
	}
}
 232:	cf 91       	pop	r28
 234:	1f 91       	pop	r17
 236:	0f 91       	pop	r16
 238:	08 95       	ret

0000023a <__vector_3>:

ISR(PCINT0_vect) //Pin B0 (rotation) interrupt
{
 23a:	1f 92       	push	r1
 23c:	0f 92       	push	r0
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	4f 93       	push	r20
 246:	5f 93       	push	r21
 248:	6f 93       	push	r22
 24a:	7f 93       	push	r23
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
 250:	af 93       	push	r26
 252:	bf 93       	push	r27
	if ((PINB & 0b00000100) == 0b00000000) //check falling edge
 254:	1a 99       	sbic	0x03, 2	; 3
 256:	3b c0       	rjmp	.+118    	; 0x2ce <__vector_3+0x94>
	{
		if ((PINB & 0b00000001) == 0b00000000) //counterclockwise
 258:	18 99       	sbic	0x03, 0	; 3
 25a:	1d c0       	rjmp	.+58     	; 0x296 <__vector_3+0x5c>
		{
			targetx = targetx - scale; //decrement by scale
 25c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <targetx>
 260:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <targetx+0x1>
 264:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <targetx+0x2>
 268:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <targetx+0x3>
 26c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 270:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 274:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 278:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 27c:	84 1b       	sub	r24, r20
 27e:	95 0b       	sbc	r25, r21
 280:	a6 0b       	sbc	r26, r22
 282:	b7 0b       	sbc	r27, r23
 284:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <targetx>
 288:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <targetx+0x1>
 28c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <targetx+0x2>
 290:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <targetx+0x3>
 294:	1c c0       	rjmp	.+56     	; 0x2ce <__vector_3+0x94>
		}
		else //clockwise
		{
			targetx = targetx + scale; //increment by scale
 296:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <targetx>
 29a:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <targetx+0x1>
 29e:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <targetx+0x2>
 2a2:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <targetx+0x3>
 2a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2aa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 2ae:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 2b2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 2b6:	84 0f       	add	r24, r20
 2b8:	95 1f       	adc	r25, r21
 2ba:	a6 1f       	adc	r26, r22
 2bc:	b7 1f       	adc	r27, r23
 2be:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <targetx>
 2c2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <targetx+0x1>
 2c6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <targetx+0x2>
 2ca:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <targetx+0x3>
		}
	}
}
 2ce:	bf 91       	pop	r27
 2d0:	af 91       	pop	r26
 2d2:	9f 91       	pop	r25
 2d4:	8f 91       	pop	r24
 2d6:	7f 91       	pop	r23
 2d8:	6f 91       	pop	r22
 2da:	5f 91       	pop	r21
 2dc:	4f 91       	pop	r20
 2de:	0f 90       	pop	r0
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	0f 90       	pop	r0
 2e4:	1f 90       	pop	r1
 2e6:	18 95       	reti

000002e8 <__vector_4>:

ISR(PCINT1_vect) //Pin C3 (button) interrupt
{
 2e8:	1f 92       	push	r1
 2ea:	0f 92       	push	r0
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	0f 92       	push	r0
 2f0:	11 24       	eor	r1, r1
 2f2:	8f 93       	push	r24
 2f4:	9f 93       	push	r25
 2f6:	af 93       	push	r26
 2f8:	bf 93       	push	r27
 2fa:	ef 93       	push	r30
 2fc:	ff 93       	push	r31
	if ((PINC & 0b00001000) == 0b00000000)
 2fe:	33 99       	sbic	0x06, 3	; 6
 300:	72 c0       	rjmp	.+228    	; 0x3e6 <__vector_4+0xfe>
	{
		button = 1; // button is pressed
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	a0 e0       	ldi	r26, 0x00	; 0
 308:	b0 e0       	ldi	r27, 0x00	; 0
 30a:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <button>
 30e:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <button+0x1>
 312:	a0 93 30 01 	sts	0x0130, r26	; 0x800130 <button+0x2>
 316:	b0 93 31 01 	sts	0x0131, r27	; 0x800131 <button+0x3>
		// Change scale based on previous scale
		if (scale == 1){
 31a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 31e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 322:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 326:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	a1 05       	cpc	r26, r1
 32e:	b1 05       	cpc	r27, r1
 330:	c9 f4       	brne	.+50     	; 0x364 <__vector_4+0x7c>
			scale = 2; 	// 1 / 4 inch scale
 332:	82 e0       	ldi	r24, 0x02	; 2
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	a0 e0       	ldi	r26, 0x00	; 0
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 33e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 342:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 346:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1/4");
 34a:	81 e3       	ldi	r24, 0x31	; 49
 34c:	9f e2       	ldi	r25, 0x2F	; 47
 34e:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
 352:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 356:	84 e3       	ldi	r24, 0x34	; 52
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x3>
 35e:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end+0x2>
 362:	49 c0       	rjmp	.+146    	; 0x3f6 <__vector_4+0x10e>
		}
		else if (scale == 2){
 364:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 368:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 36c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 370:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 374:	02 97       	sbiw	r24, 0x02	; 2
 376:	a1 05       	cpc	r26, r1
 378:	b1 05       	cpc	r27, r1
 37a:	b1 f4       	brne	.+44     	; 0x3a8 <__vector_4+0xc0>
			scale = 3; 	// 1 / 40 inch scale
 37c:	83 e0       	ldi	r24, 0x03	; 3
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	a0 e0       	ldi	r26, 0x00	; 0
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 388:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 38c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 390:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1/40");
 394:	85 e0       	ldi	r24, 0x05	; 5
 396:	e8 e0       	ldi	r30, 0x08	; 8
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	aa e2       	ldi	r26, 0x2A	; 42
 39c:	b1 e0       	ldi	r27, 0x01	; 1
 39e:	01 90       	ld	r0, Z+
 3a0:	0d 92       	st	X+, r0
 3a2:	8a 95       	dec	r24
 3a4:	e1 f7       	brne	.-8      	; 0x39e <__vector_4+0xb6>
 3a6:	27 c0       	rjmp	.+78     	; 0x3f6 <__vector_4+0x10e>
		}
		else if (scale == 3){
 3a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 3b0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 3b4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 3b8:	03 97       	sbiw	r24, 0x03	; 3
 3ba:	a1 05       	cpc	r26, r1
 3bc:	b1 05       	cpc	r27, r1
 3be:	d9 f4       	brne	.+54     	; 0x3f6 <__vector_4+0x10e>
			scale = 1; 	// 1 inch scale
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	a0 e0       	ldi	r26, 0x00	; 0
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3cc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 3d0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 3d4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			sprintf(SCL,"1");
 3d8:	81 e3       	ldi	r24, 0x31	; 49
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
 3e0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 3e4:	08 c0       	rjmp	.+16     	; 0x3f6 <__vector_4+0x10e>
		}
	}
	else
	{
		button = 0;
 3e6:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <button>
 3ea:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <button+0x1>
 3ee:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <button+0x2>
 3f2:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <button+0x3>
	}
}
 3f6:	ff 91       	pop	r31
 3f8:	ef 91       	pop	r30
 3fa:	bf 91       	pop	r27
 3fc:	af 91       	pop	r26
 3fe:	9f 91       	pop	r25
 400:	8f 91       	pop	r24
 402:	0f 90       	pop	r0
 404:	0f be       	out	0x3f, r0	; 63
 406:	0f 90       	pop	r0
 408:	1f 90       	pop	r1
 40a:	18 95       	reti

0000040c <_Z4tiltl>:

void tilt(volatile int32_t targetx)
{
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	00 d0       	rcall	.+0      	; 0x412 <_Z4tiltl+0x6>
 412:	00 d0       	rcall	.+0      	; 0x414 <_Z4tiltl+0x8>
 414:	cd b7       	in	r28, 0x3d	; 61
 416:	de b7       	in	r29, 0x3e	; 62
 418:	69 83       	std	Y+1, r22	; 0x01
 41a:	7a 83       	std	Y+2, r23	; 0x02
 41c:	8b 83       	std	Y+3, r24	; 0x03
 41e:	9c 83       	std	Y+4, r25	; 0x04
	if (targetx < 0)
 420:	89 81       	ldd	r24, Y+1	; 0x01
 422:	9a 81       	ldd	r25, Y+2	; 0x02
 424:	ab 81       	ldd	r26, Y+3	; 0x03
 426:	bc 81       	ldd	r27, Y+4	; 0x04
 428:	bb 23       	and	r27, r27
 42a:	34 f4       	brge	.+12     	; 0x438 <_Z4tiltl+0x2c>
	{
		OCR1A = LEFT;	//change top value of timer to 3200 for 1.6 ms
	}
	else if (direction == RIGHT)
	{
		OCR1A = RIGHT;	//change top value of timer to 2400 for 1.2 ms
 42c:	80 ed       	ldi	r24, 0xD0	; 208
 42e:	97 e0       	ldi	r25, 0x07	; 7
 430:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 434:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		angle(RIGHT);
		//_delay_ms(abs(deltax)*DSCALER);
		//angle(CENTER);
	}
	
	if (targetx > 0)
 438:	89 81       	ldd	r24, Y+1	; 0x01
 43a:	9a 81       	ldd	r25, Y+2	; 0x02
 43c:	ab 81       	ldd	r26, Y+3	; 0x03
 43e:	bc 81       	ldd	r27, Y+4	; 0x04
 440:	18 16       	cp	r1, r24
 442:	19 06       	cpc	r1, r25
 444:	1a 06       	cpc	r1, r26
 446:	1b 06       	cpc	r1, r27
 448:	34 f4       	brge	.+12     	; 0x456 <_Z4tiltl+0x4a>

void angle(int direction)
{
	if (direction == LEFT)
	{
		OCR1A = LEFT;	//change top value of timer to 3200 for 1.6 ms
 44a:	88 eb       	ldi	r24, 0xB8	; 184
 44c:	9b e0       	ldi	r25, 0x0B	; 11
 44e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 452:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		angle(LEFT);
		//_delay_ms(abs(deltax)*DSCALER);
		//angle(CENTER);
	}
	
	if (targetx == 0){
 456:	89 81       	ldd	r24, Y+1	; 0x01
 458:	9a 81       	ldd	r25, Y+2	; 0x02
 45a:	ab 81       	ldd	r26, Y+3	; 0x03
 45c:	bc 81       	ldd	r27, Y+4	; 0x04
 45e:	89 2b       	or	r24, r25
 460:	8a 2b       	or	r24, r26
 462:	8b 2b       	or	r24, r27
 464:	31 f4       	brne	.+12     	; 0x472 <_Z4tiltl+0x66>
	{
		OCR1A = RIGHT;	//change top value of timer to 2400 for 1.2 ms
	}
	else
	{
		OCR1A = CENTER;	//change top value of timer to 2800 for 1.4 ms
 466:	84 ec       	ldi	r24, 0xC4	; 196
 468:	99 e0       	ldi	r25, 0x09	; 9
 46a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 46e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	}
	
	if (targetx == 0){
		angle(CENTER);
	}
}
 472:	0f 90       	pop	r0
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	0f 90       	pop	r0
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	08 95       	ret

00000480 <main>:

void tilt(volatile int32_t targetx);
void angle(int direction);

int main(void)
{
 480:	cf 93       	push	r28
 482:	df 93       	push	r29
 484:	00 d0       	rcall	.+0      	; 0x486 <main+0x6>
 486:	00 d0       	rcall	.+0      	; 0x488 <main+0x8>
 488:	cd b7       	in	r28, 0x3d	; 61
 48a:	de b7       	in	r29, 0x3e	; 62
	uint16_t ticks;
	DDRC= 1<<5;
 48c:	80 e2       	ldi	r24, 0x20	; 32
 48e:	87 b9       	out	0x07, r24	; 7
	//DDRC= 0<<4;
	DDRB |= 1<<1;//(DDRB | 0b00000010);	//b1 = PWM
 490:	21 9a       	sbi	0x04, 1	; 4
	DDRB = 0<<0;
 492:	14 b8       	out	0x04, r1	; 4
	DDRB = 0<<2;//(DDRB & 0b11111010); 	//set b2 and b0 to input, connected to CLK and DT
 494:	14 b8       	out	0x04, r1	; 4
	
	DDRB |= 1<<1;//(DDRB | 0b00000010);	//b1 = PWM
 496:	21 9a       	sbi	0x04, 1	; 4
	
	char str[20]; 
	
	PCICR |= (1<<PCIE0);
 498:	e8 e6       	ldi	r30, 0x68	; 104
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	81 60       	ori	r24, 0x01	; 1
 4a0:	80 83       	st	Z, r24
		PCMSK0 |= (1<<0); //Pin B0 interrupt
 4a2:	ab e6       	ldi	r26, 0x6B	; 107
 4a4:	b0 e0       	ldi	r27, 0x00	; 0
 4a6:	8c 91       	ld	r24, X
 4a8:	81 60       	ori	r24, 0x01	; 1
 4aa:	8c 93       	st	X, r24
		PCMSK0 |= (0<<1); //disable b1 interrupt
 4ac:	8c 91       	ld	r24, X
 4ae:	8c 93       	st	X, r24
		PCICR |= (1<<PCIE1);
 4b0:	80 81       	ld	r24, Z
 4b2:	82 60       	ori	r24, 0x02	; 2
 4b4:	80 83       	st	Z, r24
		PCMSK1 |= (1<<3); //Pin C3 interrupt
 4b6:	ec e6       	ldi	r30, 0x6C	; 108
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	80 81       	ld	r24, Z
 4bc:	88 60       	ori	r24, 0x08	; 8
 4be:	80 83       	st	Z, r24

	
	TCCR3A=(0b00<<COM3A0)|(0b00<<COM3B0)|(0b00<<WGM30);
 4c0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	TCCR3B=(0b00<<WGM32)|(0b100<<CS30);
 4c4:	84 e0       	ldi	r24, 0x04	; 4
 4c6:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
	TIMSK3 = (0b0<<TOIE3);
 4ca:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
	
	TCCR1A = (0b10 << COM1A0) | (0 << COM1B0) | (0b10 <<  WGM10); //
 4ce:	82 e8       	ldi	r24, 0x82	; 130
 4d0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (0b11 << WGM12) | (0b010 << CS10);
 4d4:	8a e1       	ldi	r24, 0x1A	; 26
 4d6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	ICR1 = 40000; 						// 20ms with /8 prescalar
 4da:	80 e4       	ldi	r24, 0x40	; 64
 4dc:	9c e9       	ldi	r25, 0x9C	; 156
 4de:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 4e2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1A = 1000; 						// 1000 -> 4000 (0.5 ms - 2 ms) // sets the duty cycle
 4e6:	88 ee       	ldi	r24, 0xE8	; 232
 4e8:	93 e0       	ldi	r25, 0x03	; 3
 4ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 4ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	
	sei();
 4f2:	78 94       	sei
	
	while (1)
	{
		
		sprintf(strtarget,"%.4d inches SCL",targetx);			//val becomes a string
 4f4:	0f 2e       	mov	r0, r31
 4f6:	fd e0       	ldi	r31, 0x0D	; 13
 4f8:	af 2e       	mov	r10, r31
 4fa:	f1 e0       	ldi	r31, 0x01	; 1
 4fc:	bf 2e       	mov	r11, r31
 4fe:	f0 2d       	mov	r31, r0
 500:	0f 2e       	mov	r0, r31
 502:	fe e4       	ldi	r31, 0x4E	; 78
 504:	cf 2e       	mov	r12, r31
 506:	f1 e0       	ldi	r31, 0x01	; 1
 508:	df 2e       	mov	r13, r31
 50a:	f0 2d       	mov	r31, r0
		sprintf(stractual,"%.4d inches ",Distance);			//val becomes a string
 50c:	0f 2e       	mov	r0, r31
 50e:	fd e1       	ldi	r31, 0x1D	; 29
 510:	8f 2e       	mov	r8, r31
 512:	f1 e0       	ldi	r31, 0x01	; 1
 514:	9f 2e       	mov	r9, r31
 516:	f0 2d       	mov	r31, r0
 518:	0f 2e       	mov	r0, r31
 51a:	fa e3       	ldi	r31, 0x3A	; 58
 51c:	ef 2e       	mov	r14, r31
 51e:	f1 e0       	ldi	r31, 0x01	; 1
 520:	ff 2e       	mov	r15, r31
 522:	f0 2d       	mov	r31, r0
		//_delay_ms(200);
		//angle(CENTER);

		
		
		PORTC=1<<PINC5; //PIN C5 is trigger
 524:	68 94       	set
 526:	33 24       	eor	r3, r3
 528:	35 f8       	bld	r3, 5
		while ((PINC&(0b00010000))>=0b00010000) {		//   while (((PINC)&(1<<PINC4))==1)
		ticks=TCNT3;
		}
		if(ticks >= 2375)
		{
			Distance = 9999;
 52a:	0f 2e       	mov	r0, r31
 52c:	ff e0       	ldi	r31, 0x0F	; 15
 52e:	6f 2e       	mov	r6, r31
 530:	f7 e2       	ldi	r31, 0x27	; 39
 532:	7f 2e       	mov	r7, r31
 534:	f0 2d       	mov	r31, r0
	sei();
	
	while (1)
	{
		
		sprintf(strtarget,"%.4d inches SCL",targetx);			//val becomes a string
 536:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <targetx>
 53a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <targetx+0x1>
 53e:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <targetx+0x2>
 542:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <targetx+0x3>
 546:	bf 93       	push	r27
 548:	af 93       	push	r26
 54a:	9f 93       	push	r25
 54c:	8f 93       	push	r24
 54e:	bf 92       	push	r11
 550:	af 92       	push	r10
 552:	df 92       	push	r13
 554:	cf 92       	push	r12
 556:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <sprintf>
		sprintf(stractual,"%.4d inches ",Distance);			//val becomes a string
 55a:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <Distance+0x1>
 55e:	8f 93       	push	r24
 560:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <Distance>
 564:	8f 93       	push	r24
 566:	9f 92       	push	r9
 568:	8f 92       	push	r8
 56a:	ff 92       	push	r15
 56c:	ef 92       	push	r14
 56e:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <sprintf>
		//sprintf(strscale,"%.4d", SCL);
		//sprintf(SCL,"1");
		lcd_init();
 572:	0e 94 c5 00 	call	0x18a	; 0x18a <_Z8lcd_initv>
		lcd_gotoxy(1,1);
 576:	61 e0       	ldi	r22, 0x01	; 1
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z10lcd_gotoxyhh>
		lcd_print(strtarget);							//that string is sent to the LCD
 57e:	c6 01       	movw	r24, r12
 580:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		lcd_gotoxy(1,2);						//write on the second line
 584:	62 e0       	ldi	r22, 0x02	; 2
 586:	81 e0       	ldi	r24, 0x01	; 1
 588:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z10lcd_gotoxyhh>
		lcd_print(stractual);
 58c:	c7 01       	movw	r24, r14
 58e:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		lcd_print(SCL);
 592:	8a e2       	ldi	r24, 0x2A	; 42
 594:	91 e0       	ldi	r25, 0x01	; 1
 596:	0e 94 07 01 	call	0x20e	; 0x20e <_Z9lcd_printPc>
		

		//targetx = 3;
		deltax = Distance - targetx;
 59a:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <targetx>
 59e:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <targetx+0x1>
 5a2:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <targetx+0x2>
 5a6:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <targetx+0x3>
 5aa:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <Distance>
 5ae:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <Distance+0x1>
 5b2:	a0 e0       	ldi	r26, 0x00	; 0
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	84 1b       	sub	r24, r20
 5b8:	95 0b       	sbc	r25, r21
 5ba:	a6 0b       	sbc	r26, r22
 5bc:	b7 0b       	sbc	r27, r23
 5be:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <deltax>
 5c2:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <deltax+0x1>
 5c6:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <deltax+0x2>
 5ca:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <deltax+0x3>


		tilt(deltax);	
 5ce:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <deltax>
 5d2:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <deltax+0x1>
 5d6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <deltax+0x2>
 5da:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <deltax+0x3>
 5de:	0e 94 06 02 	call	0x40c	; 0x40c <_Z4tiltl>
		//_delay_ms(200);
		//angle(CENTER);

		
		
		PORTC=1<<PINC5; //PIN C5 is trigger
 5e2:	38 b8       	out	0x08, r3	; 8
 5e4:	25 e3       	ldi	r18, 0x35	; 53
 5e6:	2a 95       	dec	r18
 5e8:	f1 f7       	brne	.-4      	; 0x5e6 <main+0x166>
 5ea:	00 00       	nop
		_delay_us(10);
		PORTC=0<<PINC5;
 5ec:	18 b8       	out	0x08, r1	; 8

		while ((PINC&(0b00010000))<=0b00001111){   //   while (((PINC)&(1<<PINC4))==0)
 5ee:	86 b1       	in	r24, 0x06	; 6
 5f0:	80 71       	andi	r24, 0x10	; 16
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0f b6       	in	r0, 0x3f	; 63
 5f6:	f8 94       	cli
 5f8:	de bf       	out	0x3e, r29	; 62
 5fa:	0f be       	out	0x3f, r0	; 63
 5fc:	cd bf       	out	0x3d, r28	; 61
 5fe:	40 97       	sbiw	r24, 0x10	; 16
 600:	34 f0       	brlt	.+12     	; 0x60e <main+0x18e>
		TCNT3=0;
		}
		while ((PINC&(0b00010000))>=0b00010000) {		//   while (((PINC)&(1<<PINC4))==1)
 602:	86 b1       	in	r24, 0x06	; 6
 604:	80 71       	andi	r24, 0x10	; 16
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	40 97       	sbiw	r24, 0x10	; 16
 60a:	5c f4       	brge	.+22     	; 0x622 <main+0x1a2>
 60c:	13 c0       	rjmp	.+38     	; 0x634 <main+0x1b4>
		PORTC=1<<PINC5; //PIN C5 is trigger
		_delay_us(10);
		PORTC=0<<PINC5;

		while ((PINC&(0b00010000))<=0b00001111){   //   while (((PINC)&(1<<PINC4))==0)
		TCNT3=0;
 60e:	e4 e9       	ldi	r30, 0x94	; 148
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	11 82       	std	Z+1, r1	; 0x01
 614:	10 82       	st	Z, r1
		
		PORTC=1<<PINC5; //PIN C5 is trigger
		_delay_us(10);
		PORTC=0<<PINC5;

		while ((PINC&(0b00010000))<=0b00001111){   //   while (((PINC)&(1<<PINC4))==0)
 616:	86 b1       	in	r24, 0x06	; 6
 618:	80 71       	andi	r24, 0x10	; 16
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	40 97       	sbiw	r24, 0x10	; 16
 61e:	bc f3       	brlt	.-18     	; 0x60e <main+0x18e>
 620:	f0 cf       	rjmp	.-32     	; 0x602 <main+0x182>
		TCNT3=0;
		}
		while ((PINC&(0b00010000))>=0b00010000) {		//   while (((PINC)&(1<<PINC4))==1)
		ticks=TCNT3;
 622:	e4 e9       	ldi	r30, 0x94	; 148
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	00 81       	ld	r16, Z
 628:	11 81       	ldd	r17, Z+1	; 0x01
		PORTC=0<<PINC5;

		while ((PINC&(0b00010000))<=0b00001111){   //   while (((PINC)&(1<<PINC4))==0)
		TCNT3=0;
		}
		while ((PINC&(0b00010000))>=0b00010000) {		//   while (((PINC)&(1<<PINC4))==1)
 62a:	86 b1       	in	r24, 0x06	; 6
 62c:	80 71       	andi	r24, 0x10	; 16
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	40 97       	sbiw	r24, 0x10	; 16
 632:	bc f7       	brge	.-18     	; 0x622 <main+0x1a2>
		ticks=TCNT3;
		}
		if(ticks >= 2375)
 634:	07 34       	cpi	r16, 0x47	; 71
 636:	f9 e0       	ldi	r31, 0x09	; 9
 638:	1f 07       	cpc	r17, r31
 63a:	28 f0       	brcs	.+10     	; 0x646 <main+0x1c6>
		{
			Distance = 9999;
 63c:	70 92 67 01 	sts	0x0167, r7	; 0x800167 <Distance+0x1>
 640:	60 92 66 01 	sts	0x0166, r6	; 0x800166 <Distance>
 644:	33 c0       	rjmp	.+102    	; 0x6ac <main+0x22c>
		}
		else
		{
			Reading = ticks * (sound / 62500) / 2;
 646:	20 e0       	ldi	r18, 0x00	; 0
 648:	34 e2       	ldi	r19, 0x24	; 36
 64a:	44 e7       	ldi	r20, 0x74	; 116
 64c:	57 e4       	ldi	r21, 0x47	; 71
 64e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <sound>
 652:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <sound+0x1>
 656:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sound+0x2>
 65a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sound+0x3>
 65e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__divsf3>
 662:	69 83       	std	Y+1, r22	; 0x01
 664:	7a 83       	std	Y+2, r23	; 0x02
 666:	8b 83       	std	Y+3, r24	; 0x03
 668:	9c 83       	std	Y+4, r25	; 0x04
 66a:	b8 01       	movw	r22, r16
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 94 01 04 	call	0x802	; 0x802 <__floatunsisf>
 674:	9b 01       	movw	r18, r22
 676:	ac 01       	movw	r20, r24
 678:	69 81       	ldd	r22, Y+1	; 0x01
 67a:	7a 81       	ldd	r23, Y+2	; 0x02
 67c:	8b 81       	ldd	r24, Y+3	; 0x03
 67e:	9c 81       	ldd	r25, Y+4	; 0x04
 680:	0e 94 8f 04 	call	0x91e	; 0x91e <__mulsf3>
 684:	20 e0       	ldi	r18, 0x00	; 0
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	40 e0       	ldi	r20, 0x00	; 0
 68a:	5f e3       	ldi	r21, 0x3F	; 63
 68c:	0e 94 8f 04 	call	0x91e	; 0x91e <__mulsf3>
 690:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <Reading>
 694:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <Reading+0x1>
 698:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <Reading+0x2>
 69c:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <Reading+0x3>
			Distance = Reading;
 6a0:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__fixunssfsi>
 6a4:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <Distance+0x1>
 6a8:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <Distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ac:	2f ef       	ldi	r18, 0xFF	; 255
 6ae:	39 ef       	ldi	r19, 0xF9	; 249
 6b0:	80 e0       	ldi	r24, 0x00	; 0
 6b2:	21 50       	subi	r18, 0x01	; 1
 6b4:	30 40       	sbci	r19, 0x00	; 0
 6b6:	80 40       	sbci	r24, 0x00	; 0
 6b8:	e1 f7       	brne	.-8      	; 0x6b2 <main+0x232>
 6ba:	00 c0       	rjmp	.+0      	; 0x6bc <main+0x23c>
 6bc:	00 00       	nop
 6be:	3b cf       	rjmp	.-394    	; 0x536 <main+0xb6>

000006c0 <__divsf3>:
 6c0:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__divsf3x>
 6c4:	0c 94 55 04 	jmp	0x8aa	; 0x8aa <__fp_round>
 6c8:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_pscB>
 6cc:	58 f0       	brcs	.+22     	; 0x6e4 <__divsf3+0x24>
 6ce:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_pscA>
 6d2:	40 f0       	brcs	.+16     	; 0x6e4 <__divsf3+0x24>
 6d4:	29 f4       	brne	.+10     	; 0x6e0 <__divsf3+0x20>
 6d6:	5f 3f       	cpi	r21, 0xFF	; 255
 6d8:	29 f0       	breq	.+10     	; 0x6e4 <__divsf3+0x24>
 6da:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__fp_inf>
 6de:	51 11       	cpse	r21, r1
 6e0:	0c 94 89 04 	jmp	0x912	; 0x912 <__fp_szero>
 6e4:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_nan>

000006e8 <__divsf3x>:
 6e8:	0e 94 66 04 	call	0x8cc	; 0x8cc <__fp_split3>
 6ec:	68 f3       	brcs	.-38     	; 0x6c8 <__divsf3+0x8>

000006ee <__divsf3_pse>:
 6ee:	99 23       	and	r25, r25
 6f0:	b1 f3       	breq	.-20     	; 0x6de <__divsf3+0x1e>
 6f2:	55 23       	and	r21, r21
 6f4:	91 f3       	breq	.-28     	; 0x6da <__divsf3+0x1a>
 6f6:	95 1b       	sub	r25, r21
 6f8:	55 0b       	sbc	r21, r21
 6fa:	bb 27       	eor	r27, r27
 6fc:	aa 27       	eor	r26, r26
 6fe:	62 17       	cp	r22, r18
 700:	73 07       	cpc	r23, r19
 702:	84 07       	cpc	r24, r20
 704:	38 f0       	brcs	.+14     	; 0x714 <__divsf3_pse+0x26>
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	5f 4f       	sbci	r21, 0xFF	; 255
 70a:	22 0f       	add	r18, r18
 70c:	33 1f       	adc	r19, r19
 70e:	44 1f       	adc	r20, r20
 710:	aa 1f       	adc	r26, r26
 712:	a9 f3       	breq	.-22     	; 0x6fe <__divsf3_pse+0x10>
 714:	35 d0       	rcall	.+106    	; 0x780 <__divsf3_pse+0x92>
 716:	0e 2e       	mov	r0, r30
 718:	3a f0       	brmi	.+14     	; 0x728 <__divsf3_pse+0x3a>
 71a:	e0 e8       	ldi	r30, 0x80	; 128
 71c:	32 d0       	rcall	.+100    	; 0x782 <__divsf3_pse+0x94>
 71e:	91 50       	subi	r25, 0x01	; 1
 720:	50 40       	sbci	r21, 0x00	; 0
 722:	e6 95       	lsr	r30
 724:	00 1c       	adc	r0, r0
 726:	ca f7       	brpl	.-14     	; 0x71a <__divsf3_pse+0x2c>
 728:	2b d0       	rcall	.+86     	; 0x780 <__divsf3_pse+0x92>
 72a:	fe 2f       	mov	r31, r30
 72c:	29 d0       	rcall	.+82     	; 0x780 <__divsf3_pse+0x92>
 72e:	66 0f       	add	r22, r22
 730:	77 1f       	adc	r23, r23
 732:	88 1f       	adc	r24, r24
 734:	bb 1f       	adc	r27, r27
 736:	26 17       	cp	r18, r22
 738:	37 07       	cpc	r19, r23
 73a:	48 07       	cpc	r20, r24
 73c:	ab 07       	cpc	r26, r27
 73e:	b0 e8       	ldi	r27, 0x80	; 128
 740:	09 f0       	breq	.+2      	; 0x744 <__divsf3_pse+0x56>
 742:	bb 0b       	sbc	r27, r27
 744:	80 2d       	mov	r24, r0
 746:	bf 01       	movw	r22, r30
 748:	ff 27       	eor	r31, r31
 74a:	93 58       	subi	r25, 0x83	; 131
 74c:	5f 4f       	sbci	r21, 0xFF	; 255
 74e:	3a f0       	brmi	.+14     	; 0x75e <__divsf3_pse+0x70>
 750:	9e 3f       	cpi	r25, 0xFE	; 254
 752:	51 05       	cpc	r21, r1
 754:	78 f0       	brcs	.+30     	; 0x774 <__divsf3_pse+0x86>
 756:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__fp_inf>
 75a:	0c 94 89 04 	jmp	0x912	; 0x912 <__fp_szero>
 75e:	5f 3f       	cpi	r21, 0xFF	; 255
 760:	e4 f3       	brlt	.-8      	; 0x75a <__divsf3_pse+0x6c>
 762:	98 3e       	cpi	r25, 0xE8	; 232
 764:	d4 f3       	brlt	.-12     	; 0x75a <__divsf3_pse+0x6c>
 766:	86 95       	lsr	r24
 768:	77 95       	ror	r23
 76a:	67 95       	ror	r22
 76c:	b7 95       	ror	r27
 76e:	f7 95       	ror	r31
 770:	9f 5f       	subi	r25, 0xFF	; 255
 772:	c9 f7       	brne	.-14     	; 0x766 <__divsf3_pse+0x78>
 774:	88 0f       	add	r24, r24
 776:	91 1d       	adc	r25, r1
 778:	96 95       	lsr	r25
 77a:	87 95       	ror	r24
 77c:	97 f9       	bld	r25, 7
 77e:	08 95       	ret
 780:	e1 e0       	ldi	r30, 0x01	; 1
 782:	66 0f       	add	r22, r22
 784:	77 1f       	adc	r23, r23
 786:	88 1f       	adc	r24, r24
 788:	bb 1f       	adc	r27, r27
 78a:	62 17       	cp	r22, r18
 78c:	73 07       	cpc	r23, r19
 78e:	84 07       	cpc	r24, r20
 790:	ba 07       	cpc	r27, r26
 792:	20 f0       	brcs	.+8      	; 0x79c <__divsf3_pse+0xae>
 794:	62 1b       	sub	r22, r18
 796:	73 0b       	sbc	r23, r19
 798:	84 0b       	sbc	r24, r20
 79a:	ba 0b       	sbc	r27, r26
 79c:	ee 1f       	adc	r30, r30
 79e:	88 f7       	brcc	.-30     	; 0x782 <__divsf3_pse+0x94>
 7a0:	e0 95       	com	r30
 7a2:	08 95       	ret

000007a4 <__fixunssfsi>:
 7a4:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__fp_splitA>
 7a8:	88 f0       	brcs	.+34     	; 0x7cc <__fixunssfsi+0x28>
 7aa:	9f 57       	subi	r25, 0x7F	; 127
 7ac:	98 f0       	brcs	.+38     	; 0x7d4 <__fixunssfsi+0x30>
 7ae:	b9 2f       	mov	r27, r25
 7b0:	99 27       	eor	r25, r25
 7b2:	b7 51       	subi	r27, 0x17	; 23
 7b4:	b0 f0       	brcs	.+44     	; 0x7e2 <__fixunssfsi+0x3e>
 7b6:	e1 f0       	breq	.+56     	; 0x7f0 <__fixunssfsi+0x4c>
 7b8:	66 0f       	add	r22, r22
 7ba:	77 1f       	adc	r23, r23
 7bc:	88 1f       	adc	r24, r24
 7be:	99 1f       	adc	r25, r25
 7c0:	1a f0       	brmi	.+6      	; 0x7c8 <__fixunssfsi+0x24>
 7c2:	ba 95       	dec	r27
 7c4:	c9 f7       	brne	.-14     	; 0x7b8 <__fixunssfsi+0x14>
 7c6:	14 c0       	rjmp	.+40     	; 0x7f0 <__fixunssfsi+0x4c>
 7c8:	b1 30       	cpi	r27, 0x01	; 1
 7ca:	91 f0       	breq	.+36     	; 0x7f0 <__fixunssfsi+0x4c>
 7cc:	0e 94 88 04 	call	0x910	; 0x910 <__fp_zero>
 7d0:	b1 e0       	ldi	r27, 0x01	; 1
 7d2:	08 95       	ret
 7d4:	0c 94 88 04 	jmp	0x910	; 0x910 <__fp_zero>
 7d8:	67 2f       	mov	r22, r23
 7da:	78 2f       	mov	r23, r24
 7dc:	88 27       	eor	r24, r24
 7de:	b8 5f       	subi	r27, 0xF8	; 248
 7e0:	39 f0       	breq	.+14     	; 0x7f0 <__fixunssfsi+0x4c>
 7e2:	b9 3f       	cpi	r27, 0xF9	; 249
 7e4:	cc f3       	brlt	.-14     	; 0x7d8 <__fixunssfsi+0x34>
 7e6:	86 95       	lsr	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b3 95       	inc	r27
 7ee:	d9 f7       	brne	.-10     	; 0x7e6 <__fixunssfsi+0x42>
 7f0:	3e f4       	brtc	.+14     	; 0x800 <__fixunssfsi+0x5c>
 7f2:	90 95       	com	r25
 7f4:	80 95       	com	r24
 7f6:	70 95       	com	r23
 7f8:	61 95       	neg	r22
 7fa:	7f 4f       	sbci	r23, 0xFF	; 255
 7fc:	8f 4f       	sbci	r24, 0xFF	; 255
 7fe:	9f 4f       	sbci	r25, 0xFF	; 255
 800:	08 95       	ret

00000802 <__floatunsisf>:
 802:	e8 94       	clt
 804:	09 c0       	rjmp	.+18     	; 0x818 <__floatsisf+0x12>

00000806 <__floatsisf>:
 806:	97 fb       	bst	r25, 7
 808:	3e f4       	brtc	.+14     	; 0x818 <__floatsisf+0x12>
 80a:	90 95       	com	r25
 80c:	80 95       	com	r24
 80e:	70 95       	com	r23
 810:	61 95       	neg	r22
 812:	7f 4f       	sbci	r23, 0xFF	; 255
 814:	8f 4f       	sbci	r24, 0xFF	; 255
 816:	9f 4f       	sbci	r25, 0xFF	; 255
 818:	99 23       	and	r25, r25
 81a:	a9 f0       	breq	.+42     	; 0x846 <__floatsisf+0x40>
 81c:	f9 2f       	mov	r31, r25
 81e:	96 e9       	ldi	r25, 0x96	; 150
 820:	bb 27       	eor	r27, r27
 822:	93 95       	inc	r25
 824:	f6 95       	lsr	r31
 826:	87 95       	ror	r24
 828:	77 95       	ror	r23
 82a:	67 95       	ror	r22
 82c:	b7 95       	ror	r27
 82e:	f1 11       	cpse	r31, r1
 830:	f8 cf       	rjmp	.-16     	; 0x822 <__floatsisf+0x1c>
 832:	fa f4       	brpl	.+62     	; 0x872 <__floatsisf+0x6c>
 834:	bb 0f       	add	r27, r27
 836:	11 f4       	brne	.+4      	; 0x83c <__floatsisf+0x36>
 838:	60 ff       	sbrs	r22, 0
 83a:	1b c0       	rjmp	.+54     	; 0x872 <__floatsisf+0x6c>
 83c:	6f 5f       	subi	r22, 0xFF	; 255
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	16 c0       	rjmp	.+44     	; 0x872 <__floatsisf+0x6c>
 846:	88 23       	and	r24, r24
 848:	11 f0       	breq	.+4      	; 0x84e <__floatsisf+0x48>
 84a:	96 e9       	ldi	r25, 0x96	; 150
 84c:	11 c0       	rjmp	.+34     	; 0x870 <__floatsisf+0x6a>
 84e:	77 23       	and	r23, r23
 850:	21 f0       	breq	.+8      	; 0x85a <__floatsisf+0x54>
 852:	9e e8       	ldi	r25, 0x8E	; 142
 854:	87 2f       	mov	r24, r23
 856:	76 2f       	mov	r23, r22
 858:	05 c0       	rjmp	.+10     	; 0x864 <__floatsisf+0x5e>
 85a:	66 23       	and	r22, r22
 85c:	71 f0       	breq	.+28     	; 0x87a <__floatsisf+0x74>
 85e:	96 e8       	ldi	r25, 0x86	; 134
 860:	86 2f       	mov	r24, r22
 862:	70 e0       	ldi	r23, 0x00	; 0
 864:	60 e0       	ldi	r22, 0x00	; 0
 866:	2a f0       	brmi	.+10     	; 0x872 <__floatsisf+0x6c>
 868:	9a 95       	dec	r25
 86a:	66 0f       	add	r22, r22
 86c:	77 1f       	adc	r23, r23
 86e:	88 1f       	adc	r24, r24
 870:	da f7       	brpl	.-10     	; 0x868 <__floatsisf+0x62>
 872:	88 0f       	add	r24, r24
 874:	96 95       	lsr	r25
 876:	87 95       	ror	r24
 878:	97 f9       	bld	r25, 7
 87a:	08 95       	ret

0000087c <__fp_inf>:
 87c:	97 f9       	bld	r25, 7
 87e:	9f 67       	ori	r25, 0x7F	; 127
 880:	80 e8       	ldi	r24, 0x80	; 128
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	60 e0       	ldi	r22, 0x00	; 0
 886:	08 95       	ret

00000888 <__fp_nan>:
 888:	9f ef       	ldi	r25, 0xFF	; 255
 88a:	80 ec       	ldi	r24, 0xC0	; 192
 88c:	08 95       	ret

0000088e <__fp_pscA>:
 88e:	00 24       	eor	r0, r0
 890:	0a 94       	dec	r0
 892:	16 16       	cp	r1, r22
 894:	17 06       	cpc	r1, r23
 896:	18 06       	cpc	r1, r24
 898:	09 06       	cpc	r0, r25
 89a:	08 95       	ret

0000089c <__fp_pscB>:
 89c:	00 24       	eor	r0, r0
 89e:	0a 94       	dec	r0
 8a0:	12 16       	cp	r1, r18
 8a2:	13 06       	cpc	r1, r19
 8a4:	14 06       	cpc	r1, r20
 8a6:	05 06       	cpc	r0, r21
 8a8:	08 95       	ret

000008aa <__fp_round>:
 8aa:	09 2e       	mov	r0, r25
 8ac:	03 94       	inc	r0
 8ae:	00 0c       	add	r0, r0
 8b0:	11 f4       	brne	.+4      	; 0x8b6 <__fp_round+0xc>
 8b2:	88 23       	and	r24, r24
 8b4:	52 f0       	brmi	.+20     	; 0x8ca <__fp_round+0x20>
 8b6:	bb 0f       	add	r27, r27
 8b8:	40 f4       	brcc	.+16     	; 0x8ca <__fp_round+0x20>
 8ba:	bf 2b       	or	r27, r31
 8bc:	11 f4       	brne	.+4      	; 0x8c2 <__fp_round+0x18>
 8be:	60 ff       	sbrs	r22, 0
 8c0:	04 c0       	rjmp	.+8      	; 0x8ca <__fp_round+0x20>
 8c2:	6f 5f       	subi	r22, 0xFF	; 255
 8c4:	7f 4f       	sbci	r23, 0xFF	; 255
 8c6:	8f 4f       	sbci	r24, 0xFF	; 255
 8c8:	9f 4f       	sbci	r25, 0xFF	; 255
 8ca:	08 95       	ret

000008cc <__fp_split3>:
 8cc:	57 fd       	sbrc	r21, 7
 8ce:	90 58       	subi	r25, 0x80	; 128
 8d0:	44 0f       	add	r20, r20
 8d2:	55 1f       	adc	r21, r21
 8d4:	59 f0       	breq	.+22     	; 0x8ec <__fp_splitA+0x10>
 8d6:	5f 3f       	cpi	r21, 0xFF	; 255
 8d8:	71 f0       	breq	.+28     	; 0x8f6 <__fp_splitA+0x1a>
 8da:	47 95       	ror	r20

000008dc <__fp_splitA>:
 8dc:	88 0f       	add	r24, r24
 8de:	97 fb       	bst	r25, 7
 8e0:	99 1f       	adc	r25, r25
 8e2:	61 f0       	breq	.+24     	; 0x8fc <__fp_splitA+0x20>
 8e4:	9f 3f       	cpi	r25, 0xFF	; 255
 8e6:	79 f0       	breq	.+30     	; 0x906 <__stack+0x7>
 8e8:	87 95       	ror	r24
 8ea:	08 95       	ret
 8ec:	12 16       	cp	r1, r18
 8ee:	13 06       	cpc	r1, r19
 8f0:	14 06       	cpc	r1, r20
 8f2:	55 1f       	adc	r21, r21
 8f4:	f2 cf       	rjmp	.-28     	; 0x8da <__fp_split3+0xe>
 8f6:	46 95       	lsr	r20
 8f8:	f1 df       	rcall	.-30     	; 0x8dc <__fp_splitA>
 8fa:	08 c0       	rjmp	.+16     	; 0x90c <__stack+0xd>
 8fc:	16 16       	cp	r1, r22
 8fe:	17 06       	cpc	r1, r23
 900:	18 06       	cpc	r1, r24
 902:	99 1f       	adc	r25, r25
 904:	f1 cf       	rjmp	.-30     	; 0x8e8 <__fp_splitA+0xc>
 906:	86 95       	lsr	r24
 908:	71 05       	cpc	r23, r1
 90a:	61 05       	cpc	r22, r1
 90c:	08 94       	sec
 90e:	08 95       	ret

00000910 <__fp_zero>:
 910:	e8 94       	clt

00000912 <__fp_szero>:
 912:	bb 27       	eor	r27, r27
 914:	66 27       	eor	r22, r22
 916:	77 27       	eor	r23, r23
 918:	cb 01       	movw	r24, r22
 91a:	97 f9       	bld	r25, 7
 91c:	08 95       	ret

0000091e <__mulsf3>:
 91e:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3x>
 922:	0c 94 55 04 	jmp	0x8aa	; 0x8aa <__fp_round>
 926:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_pscA>
 92a:	38 f0       	brcs	.+14     	; 0x93a <__mulsf3+0x1c>
 92c:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_pscB>
 930:	20 f0       	brcs	.+8      	; 0x93a <__mulsf3+0x1c>
 932:	95 23       	and	r25, r21
 934:	11 f0       	breq	.+4      	; 0x93a <__mulsf3+0x1c>
 936:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__fp_inf>
 93a:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_nan>
 93e:	11 24       	eor	r1, r1
 940:	0c 94 89 04 	jmp	0x912	; 0x912 <__fp_szero>

00000944 <__mulsf3x>:
 944:	0e 94 66 04 	call	0x8cc	; 0x8cc <__fp_split3>
 948:	70 f3       	brcs	.-36     	; 0x926 <__mulsf3+0x8>

0000094a <__mulsf3_pse>:
 94a:	95 9f       	mul	r25, r21
 94c:	c1 f3       	breq	.-16     	; 0x93e <__mulsf3+0x20>
 94e:	95 0f       	add	r25, r21
 950:	50 e0       	ldi	r21, 0x00	; 0
 952:	55 1f       	adc	r21, r21
 954:	62 9f       	mul	r22, r18
 956:	f0 01       	movw	r30, r0
 958:	72 9f       	mul	r23, r18
 95a:	bb 27       	eor	r27, r27
 95c:	f0 0d       	add	r31, r0
 95e:	b1 1d       	adc	r27, r1
 960:	63 9f       	mul	r22, r19
 962:	aa 27       	eor	r26, r26
 964:	f0 0d       	add	r31, r0
 966:	b1 1d       	adc	r27, r1
 968:	aa 1f       	adc	r26, r26
 96a:	64 9f       	mul	r22, r20
 96c:	66 27       	eor	r22, r22
 96e:	b0 0d       	add	r27, r0
 970:	a1 1d       	adc	r26, r1
 972:	66 1f       	adc	r22, r22
 974:	82 9f       	mul	r24, r18
 976:	22 27       	eor	r18, r18
 978:	b0 0d       	add	r27, r0
 97a:	a1 1d       	adc	r26, r1
 97c:	62 1f       	adc	r22, r18
 97e:	73 9f       	mul	r23, r19
 980:	b0 0d       	add	r27, r0
 982:	a1 1d       	adc	r26, r1
 984:	62 1f       	adc	r22, r18
 986:	83 9f       	mul	r24, r19
 988:	a0 0d       	add	r26, r0
 98a:	61 1d       	adc	r22, r1
 98c:	22 1f       	adc	r18, r18
 98e:	74 9f       	mul	r23, r20
 990:	33 27       	eor	r19, r19
 992:	a0 0d       	add	r26, r0
 994:	61 1d       	adc	r22, r1
 996:	23 1f       	adc	r18, r19
 998:	84 9f       	mul	r24, r20
 99a:	60 0d       	add	r22, r0
 99c:	21 1d       	adc	r18, r1
 99e:	82 2f       	mov	r24, r18
 9a0:	76 2f       	mov	r23, r22
 9a2:	6a 2f       	mov	r22, r26
 9a4:	11 24       	eor	r1, r1
 9a6:	9f 57       	subi	r25, 0x7F	; 127
 9a8:	50 40       	sbci	r21, 0x00	; 0
 9aa:	9a f0       	brmi	.+38     	; 0x9d2 <__mulsf3_pse+0x88>
 9ac:	f1 f0       	breq	.+60     	; 0x9ea <__mulsf3_pse+0xa0>
 9ae:	88 23       	and	r24, r24
 9b0:	4a f0       	brmi	.+18     	; 0x9c4 <__mulsf3_pse+0x7a>
 9b2:	ee 0f       	add	r30, r30
 9b4:	ff 1f       	adc	r31, r31
 9b6:	bb 1f       	adc	r27, r27
 9b8:	66 1f       	adc	r22, r22
 9ba:	77 1f       	adc	r23, r23
 9bc:	88 1f       	adc	r24, r24
 9be:	91 50       	subi	r25, 0x01	; 1
 9c0:	50 40       	sbci	r21, 0x00	; 0
 9c2:	a9 f7       	brne	.-22     	; 0x9ae <__mulsf3_pse+0x64>
 9c4:	9e 3f       	cpi	r25, 0xFE	; 254
 9c6:	51 05       	cpc	r21, r1
 9c8:	80 f0       	brcs	.+32     	; 0x9ea <__mulsf3_pse+0xa0>
 9ca:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__fp_inf>
 9ce:	0c 94 89 04 	jmp	0x912	; 0x912 <__fp_szero>
 9d2:	5f 3f       	cpi	r21, 0xFF	; 255
 9d4:	e4 f3       	brlt	.-8      	; 0x9ce <__mulsf3_pse+0x84>
 9d6:	98 3e       	cpi	r25, 0xE8	; 232
 9d8:	d4 f3       	brlt	.-12     	; 0x9ce <__mulsf3_pse+0x84>
 9da:	86 95       	lsr	r24
 9dc:	77 95       	ror	r23
 9de:	67 95       	ror	r22
 9e0:	b7 95       	ror	r27
 9e2:	f7 95       	ror	r31
 9e4:	e7 95       	ror	r30
 9e6:	9f 5f       	subi	r25, 0xFF	; 255
 9e8:	c1 f7       	brne	.-16     	; 0x9da <__mulsf3_pse+0x90>
 9ea:	fe 2b       	or	r31, r30
 9ec:	88 0f       	add	r24, r24
 9ee:	91 1d       	adc	r25, r1
 9f0:	96 95       	lsr	r25
 9f2:	87 95       	ror	r24
 9f4:	97 f9       	bld	r25, 7
 9f6:	08 95       	ret

000009f8 <sprintf>:
 9f8:	ae e0       	ldi	r26, 0x0E	; 14
 9fa:	b0 e0       	ldi	r27, 0x00	; 0
 9fc:	e2 e0       	ldi	r30, 0x02	; 2
 9fe:	f5 e0       	ldi	r31, 0x05	; 5
 a00:	0c 94 bd 07 	jmp	0xf7a	; 0xf7a <__prologue_saves__+0x1c>
 a04:	0d 89       	ldd	r16, Y+21	; 0x15
 a06:	1e 89       	ldd	r17, Y+22	; 0x16
 a08:	86 e0       	ldi	r24, 0x06	; 6
 a0a:	8c 83       	std	Y+4, r24	; 0x04
 a0c:	1a 83       	std	Y+2, r17	; 0x02
 a0e:	09 83       	std	Y+1, r16	; 0x01
 a10:	8f ef       	ldi	r24, 0xFF	; 255
 a12:	9f e7       	ldi	r25, 0x7F	; 127
 a14:	9e 83       	std	Y+6, r25	; 0x06
 a16:	8d 83       	std	Y+5, r24	; 0x05
 a18:	ae 01       	movw	r20, r28
 a1a:	47 5e       	subi	r20, 0xE7	; 231
 a1c:	5f 4f       	sbci	r21, 0xFF	; 255
 a1e:	6f 89       	ldd	r22, Y+23	; 0x17
 a20:	78 8d       	ldd	r23, Y+24	; 0x18
 a22:	ce 01       	movw	r24, r28
 a24:	01 96       	adiw	r24, 0x01	; 1
 a26:	0e 94 1e 05 	call	0xa3c	; 0xa3c <vfprintf>
 a2a:	ef 81       	ldd	r30, Y+7	; 0x07
 a2c:	f8 85       	ldd	r31, Y+8	; 0x08
 a2e:	e0 0f       	add	r30, r16
 a30:	f1 1f       	adc	r31, r17
 a32:	10 82       	st	Z, r1
 a34:	2e 96       	adiw	r28, 0x0e	; 14
 a36:	e4 e0       	ldi	r30, 0x04	; 4
 a38:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__epilogue_restores__+0x1c>

00000a3c <vfprintf>:
 a3c:	ab e0       	ldi	r26, 0x0B	; 11
 a3e:	b0 e0       	ldi	r27, 0x00	; 0
 a40:	e4 e2       	ldi	r30, 0x24	; 36
 a42:	f5 e0       	ldi	r31, 0x05	; 5
 a44:	0c 94 af 07 	jmp	0xf5e	; 0xf5e <__prologue_saves__>
 a48:	6c 01       	movw	r12, r24
 a4a:	7b 01       	movw	r14, r22
 a4c:	8a 01       	movw	r16, r20
 a4e:	fc 01       	movw	r30, r24
 a50:	17 82       	std	Z+7, r1	; 0x07
 a52:	16 82       	std	Z+6, r1	; 0x06
 a54:	83 81       	ldd	r24, Z+3	; 0x03
 a56:	81 ff       	sbrs	r24, 1
 a58:	cc c1       	rjmp	.+920    	; 0xdf2 <vfprintf+0x3b6>
 a5a:	ce 01       	movw	r24, r28
 a5c:	01 96       	adiw	r24, 0x01	; 1
 a5e:	3c 01       	movw	r6, r24
 a60:	f6 01       	movw	r30, r12
 a62:	93 81       	ldd	r25, Z+3	; 0x03
 a64:	f7 01       	movw	r30, r14
 a66:	93 fd       	sbrc	r25, 3
 a68:	85 91       	lpm	r24, Z+
 a6a:	93 ff       	sbrs	r25, 3
 a6c:	81 91       	ld	r24, Z+
 a6e:	7f 01       	movw	r14, r30
 a70:	88 23       	and	r24, r24
 a72:	09 f4       	brne	.+2      	; 0xa76 <vfprintf+0x3a>
 a74:	ba c1       	rjmp	.+884    	; 0xdea <vfprintf+0x3ae>
 a76:	85 32       	cpi	r24, 0x25	; 37
 a78:	39 f4       	brne	.+14     	; 0xa88 <vfprintf+0x4c>
 a7a:	93 fd       	sbrc	r25, 3
 a7c:	85 91       	lpm	r24, Z+
 a7e:	93 ff       	sbrs	r25, 3
 a80:	81 91       	ld	r24, Z+
 a82:	7f 01       	movw	r14, r30
 a84:	85 32       	cpi	r24, 0x25	; 37
 a86:	29 f4       	brne	.+10     	; 0xa92 <vfprintf+0x56>
 a88:	b6 01       	movw	r22, r12
 a8a:	90 e0       	ldi	r25, 0x00	; 0
 a8c:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 a90:	e7 cf       	rjmp	.-50     	; 0xa60 <vfprintf+0x24>
 a92:	91 2c       	mov	r9, r1
 a94:	21 2c       	mov	r2, r1
 a96:	31 2c       	mov	r3, r1
 a98:	ff e1       	ldi	r31, 0x1F	; 31
 a9a:	f3 15       	cp	r31, r3
 a9c:	d8 f0       	brcs	.+54     	; 0xad4 <vfprintf+0x98>
 a9e:	8b 32       	cpi	r24, 0x2B	; 43
 aa0:	79 f0       	breq	.+30     	; 0xac0 <vfprintf+0x84>
 aa2:	38 f4       	brcc	.+14     	; 0xab2 <vfprintf+0x76>
 aa4:	80 32       	cpi	r24, 0x20	; 32
 aa6:	79 f0       	breq	.+30     	; 0xac6 <vfprintf+0x8a>
 aa8:	83 32       	cpi	r24, 0x23	; 35
 aaa:	a1 f4       	brne	.+40     	; 0xad4 <vfprintf+0x98>
 aac:	23 2d       	mov	r18, r3
 aae:	20 61       	ori	r18, 0x10	; 16
 ab0:	1d c0       	rjmp	.+58     	; 0xaec <vfprintf+0xb0>
 ab2:	8d 32       	cpi	r24, 0x2D	; 45
 ab4:	61 f0       	breq	.+24     	; 0xace <vfprintf+0x92>
 ab6:	80 33       	cpi	r24, 0x30	; 48
 ab8:	69 f4       	brne	.+26     	; 0xad4 <vfprintf+0x98>
 aba:	23 2d       	mov	r18, r3
 abc:	21 60       	ori	r18, 0x01	; 1
 abe:	16 c0       	rjmp	.+44     	; 0xaec <vfprintf+0xb0>
 ac0:	83 2d       	mov	r24, r3
 ac2:	82 60       	ori	r24, 0x02	; 2
 ac4:	38 2e       	mov	r3, r24
 ac6:	e3 2d       	mov	r30, r3
 ac8:	e4 60       	ori	r30, 0x04	; 4
 aca:	3e 2e       	mov	r3, r30
 acc:	2a c0       	rjmp	.+84     	; 0xb22 <vfprintf+0xe6>
 ace:	f3 2d       	mov	r31, r3
 ad0:	f8 60       	ori	r31, 0x08	; 8
 ad2:	1d c0       	rjmp	.+58     	; 0xb0e <vfprintf+0xd2>
 ad4:	37 fc       	sbrc	r3, 7
 ad6:	2d c0       	rjmp	.+90     	; 0xb32 <vfprintf+0xf6>
 ad8:	20 ed       	ldi	r18, 0xD0	; 208
 ada:	28 0f       	add	r18, r24
 adc:	2a 30       	cpi	r18, 0x0A	; 10
 ade:	40 f0       	brcs	.+16     	; 0xaf0 <vfprintf+0xb4>
 ae0:	8e 32       	cpi	r24, 0x2E	; 46
 ae2:	b9 f4       	brne	.+46     	; 0xb12 <vfprintf+0xd6>
 ae4:	36 fc       	sbrc	r3, 6
 ae6:	81 c1       	rjmp	.+770    	; 0xdea <vfprintf+0x3ae>
 ae8:	23 2d       	mov	r18, r3
 aea:	20 64       	ori	r18, 0x40	; 64
 aec:	32 2e       	mov	r3, r18
 aee:	19 c0       	rjmp	.+50     	; 0xb22 <vfprintf+0xe6>
 af0:	36 fe       	sbrs	r3, 6
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <vfprintf+0xc4>
 af4:	8a e0       	ldi	r24, 0x0A	; 10
 af6:	98 9e       	mul	r9, r24
 af8:	20 0d       	add	r18, r0
 afa:	11 24       	eor	r1, r1
 afc:	92 2e       	mov	r9, r18
 afe:	11 c0       	rjmp	.+34     	; 0xb22 <vfprintf+0xe6>
 b00:	ea e0       	ldi	r30, 0x0A	; 10
 b02:	2e 9e       	mul	r2, r30
 b04:	20 0d       	add	r18, r0
 b06:	11 24       	eor	r1, r1
 b08:	22 2e       	mov	r2, r18
 b0a:	f3 2d       	mov	r31, r3
 b0c:	f0 62       	ori	r31, 0x20	; 32
 b0e:	3f 2e       	mov	r3, r31
 b10:	08 c0       	rjmp	.+16     	; 0xb22 <vfprintf+0xe6>
 b12:	8c 36       	cpi	r24, 0x6C	; 108
 b14:	21 f4       	brne	.+8      	; 0xb1e <vfprintf+0xe2>
 b16:	83 2d       	mov	r24, r3
 b18:	80 68       	ori	r24, 0x80	; 128
 b1a:	38 2e       	mov	r3, r24
 b1c:	02 c0       	rjmp	.+4      	; 0xb22 <vfprintf+0xe6>
 b1e:	88 36       	cpi	r24, 0x68	; 104
 b20:	41 f4       	brne	.+16     	; 0xb32 <vfprintf+0xf6>
 b22:	f7 01       	movw	r30, r14
 b24:	93 fd       	sbrc	r25, 3
 b26:	85 91       	lpm	r24, Z+
 b28:	93 ff       	sbrs	r25, 3
 b2a:	81 91       	ld	r24, Z+
 b2c:	7f 01       	movw	r14, r30
 b2e:	81 11       	cpse	r24, r1
 b30:	b3 cf       	rjmp	.-154    	; 0xa98 <vfprintf+0x5c>
 b32:	98 2f       	mov	r25, r24
 b34:	9f 7d       	andi	r25, 0xDF	; 223
 b36:	95 54       	subi	r25, 0x45	; 69
 b38:	93 30       	cpi	r25, 0x03	; 3
 b3a:	28 f4       	brcc	.+10     	; 0xb46 <vfprintf+0x10a>
 b3c:	0c 5f       	subi	r16, 0xFC	; 252
 b3e:	1f 4f       	sbci	r17, 0xFF	; 255
 b40:	9f e3       	ldi	r25, 0x3F	; 63
 b42:	99 83       	std	Y+1, r25	; 0x01
 b44:	0d c0       	rjmp	.+26     	; 0xb60 <vfprintf+0x124>
 b46:	83 36       	cpi	r24, 0x63	; 99
 b48:	31 f0       	breq	.+12     	; 0xb56 <vfprintf+0x11a>
 b4a:	83 37       	cpi	r24, 0x73	; 115
 b4c:	71 f0       	breq	.+28     	; 0xb6a <vfprintf+0x12e>
 b4e:	83 35       	cpi	r24, 0x53	; 83
 b50:	09 f0       	breq	.+2      	; 0xb54 <vfprintf+0x118>
 b52:	59 c0       	rjmp	.+178    	; 0xc06 <vfprintf+0x1ca>
 b54:	21 c0       	rjmp	.+66     	; 0xb98 <vfprintf+0x15c>
 b56:	f8 01       	movw	r30, r16
 b58:	80 81       	ld	r24, Z
 b5a:	89 83       	std	Y+1, r24	; 0x01
 b5c:	0e 5f       	subi	r16, 0xFE	; 254
 b5e:	1f 4f       	sbci	r17, 0xFF	; 255
 b60:	88 24       	eor	r8, r8
 b62:	83 94       	inc	r8
 b64:	91 2c       	mov	r9, r1
 b66:	53 01       	movw	r10, r6
 b68:	13 c0       	rjmp	.+38     	; 0xb90 <vfprintf+0x154>
 b6a:	28 01       	movw	r4, r16
 b6c:	f2 e0       	ldi	r31, 0x02	; 2
 b6e:	4f 0e       	add	r4, r31
 b70:	51 1c       	adc	r5, r1
 b72:	f8 01       	movw	r30, r16
 b74:	a0 80       	ld	r10, Z
 b76:	b1 80       	ldd	r11, Z+1	; 0x01
 b78:	36 fe       	sbrs	r3, 6
 b7a:	03 c0       	rjmp	.+6      	; 0xb82 <vfprintf+0x146>
 b7c:	69 2d       	mov	r22, r9
 b7e:	70 e0       	ldi	r23, 0x00	; 0
 b80:	02 c0       	rjmp	.+4      	; 0xb86 <vfprintf+0x14a>
 b82:	6f ef       	ldi	r22, 0xFF	; 255
 b84:	7f ef       	ldi	r23, 0xFF	; 255
 b86:	c5 01       	movw	r24, r10
 b88:	0e 94 0a 07 	call	0xe14	; 0xe14 <strnlen>
 b8c:	4c 01       	movw	r8, r24
 b8e:	82 01       	movw	r16, r4
 b90:	f3 2d       	mov	r31, r3
 b92:	ff 77       	andi	r31, 0x7F	; 127
 b94:	3f 2e       	mov	r3, r31
 b96:	16 c0       	rjmp	.+44     	; 0xbc4 <vfprintf+0x188>
 b98:	28 01       	movw	r4, r16
 b9a:	22 e0       	ldi	r18, 0x02	; 2
 b9c:	42 0e       	add	r4, r18
 b9e:	51 1c       	adc	r5, r1
 ba0:	f8 01       	movw	r30, r16
 ba2:	a0 80       	ld	r10, Z
 ba4:	b1 80       	ldd	r11, Z+1	; 0x01
 ba6:	36 fe       	sbrs	r3, 6
 ba8:	03 c0       	rjmp	.+6      	; 0xbb0 <vfprintf+0x174>
 baa:	69 2d       	mov	r22, r9
 bac:	70 e0       	ldi	r23, 0x00	; 0
 bae:	02 c0       	rjmp	.+4      	; 0xbb4 <vfprintf+0x178>
 bb0:	6f ef       	ldi	r22, 0xFF	; 255
 bb2:	7f ef       	ldi	r23, 0xFF	; 255
 bb4:	c5 01       	movw	r24, r10
 bb6:	0e 94 ff 06 	call	0xdfe	; 0xdfe <strnlen_P>
 bba:	4c 01       	movw	r8, r24
 bbc:	f3 2d       	mov	r31, r3
 bbe:	f0 68       	ori	r31, 0x80	; 128
 bc0:	3f 2e       	mov	r3, r31
 bc2:	82 01       	movw	r16, r4
 bc4:	33 fc       	sbrc	r3, 3
 bc6:	1b c0       	rjmp	.+54     	; 0xbfe <vfprintf+0x1c2>
 bc8:	82 2d       	mov	r24, r2
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	88 16       	cp	r8, r24
 bce:	99 06       	cpc	r9, r25
 bd0:	b0 f4       	brcc	.+44     	; 0xbfe <vfprintf+0x1c2>
 bd2:	b6 01       	movw	r22, r12
 bd4:	80 e2       	ldi	r24, 0x20	; 32
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 bdc:	2a 94       	dec	r2
 bde:	f4 cf       	rjmp	.-24     	; 0xbc8 <vfprintf+0x18c>
 be0:	f5 01       	movw	r30, r10
 be2:	37 fc       	sbrc	r3, 7
 be4:	85 91       	lpm	r24, Z+
 be6:	37 fe       	sbrs	r3, 7
 be8:	81 91       	ld	r24, Z+
 bea:	5f 01       	movw	r10, r30
 bec:	b6 01       	movw	r22, r12
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 bf4:	21 10       	cpse	r2, r1
 bf6:	2a 94       	dec	r2
 bf8:	21 e0       	ldi	r18, 0x01	; 1
 bfa:	82 1a       	sub	r8, r18
 bfc:	91 08       	sbc	r9, r1
 bfe:	81 14       	cp	r8, r1
 c00:	91 04       	cpc	r9, r1
 c02:	71 f7       	brne	.-36     	; 0xbe0 <vfprintf+0x1a4>
 c04:	e8 c0       	rjmp	.+464    	; 0xdd6 <vfprintf+0x39a>
 c06:	84 36       	cpi	r24, 0x64	; 100
 c08:	11 f0       	breq	.+4      	; 0xc0e <vfprintf+0x1d2>
 c0a:	89 36       	cpi	r24, 0x69	; 105
 c0c:	41 f5       	brne	.+80     	; 0xc5e <vfprintf+0x222>
 c0e:	f8 01       	movw	r30, r16
 c10:	37 fe       	sbrs	r3, 7
 c12:	07 c0       	rjmp	.+14     	; 0xc22 <vfprintf+0x1e6>
 c14:	60 81       	ld	r22, Z
 c16:	71 81       	ldd	r23, Z+1	; 0x01
 c18:	82 81       	ldd	r24, Z+2	; 0x02
 c1a:	93 81       	ldd	r25, Z+3	; 0x03
 c1c:	0c 5f       	subi	r16, 0xFC	; 252
 c1e:	1f 4f       	sbci	r17, 0xFF	; 255
 c20:	08 c0       	rjmp	.+16     	; 0xc32 <vfprintf+0x1f6>
 c22:	60 81       	ld	r22, Z
 c24:	71 81       	ldd	r23, Z+1	; 0x01
 c26:	07 2e       	mov	r0, r23
 c28:	00 0c       	add	r0, r0
 c2a:	88 0b       	sbc	r24, r24
 c2c:	99 0b       	sbc	r25, r25
 c2e:	0e 5f       	subi	r16, 0xFE	; 254
 c30:	1f 4f       	sbci	r17, 0xFF	; 255
 c32:	f3 2d       	mov	r31, r3
 c34:	ff 76       	andi	r31, 0x6F	; 111
 c36:	3f 2e       	mov	r3, r31
 c38:	97 ff       	sbrs	r25, 7
 c3a:	09 c0       	rjmp	.+18     	; 0xc4e <vfprintf+0x212>
 c3c:	90 95       	com	r25
 c3e:	80 95       	com	r24
 c40:	70 95       	com	r23
 c42:	61 95       	neg	r22
 c44:	7f 4f       	sbci	r23, 0xFF	; 255
 c46:	8f 4f       	sbci	r24, 0xFF	; 255
 c48:	9f 4f       	sbci	r25, 0xFF	; 255
 c4a:	f0 68       	ori	r31, 0x80	; 128
 c4c:	3f 2e       	mov	r3, r31
 c4e:	2a e0       	ldi	r18, 0x0A	; 10
 c50:	30 e0       	ldi	r19, 0x00	; 0
 c52:	a3 01       	movw	r20, r6
 c54:	0e 94 51 07 	call	0xea2	; 0xea2 <__ultoa_invert>
 c58:	88 2e       	mov	r8, r24
 c5a:	86 18       	sub	r8, r6
 c5c:	45 c0       	rjmp	.+138    	; 0xce8 <vfprintf+0x2ac>
 c5e:	85 37       	cpi	r24, 0x75	; 117
 c60:	31 f4       	brne	.+12     	; 0xc6e <vfprintf+0x232>
 c62:	23 2d       	mov	r18, r3
 c64:	2f 7e       	andi	r18, 0xEF	; 239
 c66:	b2 2e       	mov	r11, r18
 c68:	2a e0       	ldi	r18, 0x0A	; 10
 c6a:	30 e0       	ldi	r19, 0x00	; 0
 c6c:	25 c0       	rjmp	.+74     	; 0xcb8 <vfprintf+0x27c>
 c6e:	93 2d       	mov	r25, r3
 c70:	99 7f       	andi	r25, 0xF9	; 249
 c72:	b9 2e       	mov	r11, r25
 c74:	8f 36       	cpi	r24, 0x6F	; 111
 c76:	c1 f0       	breq	.+48     	; 0xca8 <vfprintf+0x26c>
 c78:	18 f4       	brcc	.+6      	; 0xc80 <vfprintf+0x244>
 c7a:	88 35       	cpi	r24, 0x58	; 88
 c7c:	79 f0       	breq	.+30     	; 0xc9c <vfprintf+0x260>
 c7e:	b5 c0       	rjmp	.+362    	; 0xdea <vfprintf+0x3ae>
 c80:	80 37       	cpi	r24, 0x70	; 112
 c82:	19 f0       	breq	.+6      	; 0xc8a <vfprintf+0x24e>
 c84:	88 37       	cpi	r24, 0x78	; 120
 c86:	21 f0       	breq	.+8      	; 0xc90 <vfprintf+0x254>
 c88:	b0 c0       	rjmp	.+352    	; 0xdea <vfprintf+0x3ae>
 c8a:	e9 2f       	mov	r30, r25
 c8c:	e0 61       	ori	r30, 0x10	; 16
 c8e:	be 2e       	mov	r11, r30
 c90:	b4 fe       	sbrs	r11, 4
 c92:	0d c0       	rjmp	.+26     	; 0xcae <vfprintf+0x272>
 c94:	fb 2d       	mov	r31, r11
 c96:	f4 60       	ori	r31, 0x04	; 4
 c98:	bf 2e       	mov	r11, r31
 c9a:	09 c0       	rjmp	.+18     	; 0xcae <vfprintf+0x272>
 c9c:	34 fe       	sbrs	r3, 4
 c9e:	0a c0       	rjmp	.+20     	; 0xcb4 <vfprintf+0x278>
 ca0:	29 2f       	mov	r18, r25
 ca2:	26 60       	ori	r18, 0x06	; 6
 ca4:	b2 2e       	mov	r11, r18
 ca6:	06 c0       	rjmp	.+12     	; 0xcb4 <vfprintf+0x278>
 ca8:	28 e0       	ldi	r18, 0x08	; 8
 caa:	30 e0       	ldi	r19, 0x00	; 0
 cac:	05 c0       	rjmp	.+10     	; 0xcb8 <vfprintf+0x27c>
 cae:	20 e1       	ldi	r18, 0x10	; 16
 cb0:	30 e0       	ldi	r19, 0x00	; 0
 cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <vfprintf+0x27c>
 cb4:	20 e1       	ldi	r18, 0x10	; 16
 cb6:	32 e0       	ldi	r19, 0x02	; 2
 cb8:	f8 01       	movw	r30, r16
 cba:	b7 fe       	sbrs	r11, 7
 cbc:	07 c0       	rjmp	.+14     	; 0xccc <vfprintf+0x290>
 cbe:	60 81       	ld	r22, Z
 cc0:	71 81       	ldd	r23, Z+1	; 0x01
 cc2:	82 81       	ldd	r24, Z+2	; 0x02
 cc4:	93 81       	ldd	r25, Z+3	; 0x03
 cc6:	0c 5f       	subi	r16, 0xFC	; 252
 cc8:	1f 4f       	sbci	r17, 0xFF	; 255
 cca:	06 c0       	rjmp	.+12     	; 0xcd8 <vfprintf+0x29c>
 ccc:	60 81       	ld	r22, Z
 cce:	71 81       	ldd	r23, Z+1	; 0x01
 cd0:	80 e0       	ldi	r24, 0x00	; 0
 cd2:	90 e0       	ldi	r25, 0x00	; 0
 cd4:	0e 5f       	subi	r16, 0xFE	; 254
 cd6:	1f 4f       	sbci	r17, 0xFF	; 255
 cd8:	a3 01       	movw	r20, r6
 cda:	0e 94 51 07 	call	0xea2	; 0xea2 <__ultoa_invert>
 cde:	88 2e       	mov	r8, r24
 ce0:	86 18       	sub	r8, r6
 ce2:	fb 2d       	mov	r31, r11
 ce4:	ff 77       	andi	r31, 0x7F	; 127
 ce6:	3f 2e       	mov	r3, r31
 ce8:	36 fe       	sbrs	r3, 6
 cea:	0d c0       	rjmp	.+26     	; 0xd06 <vfprintf+0x2ca>
 cec:	23 2d       	mov	r18, r3
 cee:	2e 7f       	andi	r18, 0xFE	; 254
 cf0:	a2 2e       	mov	r10, r18
 cf2:	89 14       	cp	r8, r9
 cf4:	58 f4       	brcc	.+22     	; 0xd0c <vfprintf+0x2d0>
 cf6:	34 fe       	sbrs	r3, 4
 cf8:	0b c0       	rjmp	.+22     	; 0xd10 <vfprintf+0x2d4>
 cfa:	32 fc       	sbrc	r3, 2
 cfc:	09 c0       	rjmp	.+18     	; 0xd10 <vfprintf+0x2d4>
 cfe:	83 2d       	mov	r24, r3
 d00:	8e 7e       	andi	r24, 0xEE	; 238
 d02:	a8 2e       	mov	r10, r24
 d04:	05 c0       	rjmp	.+10     	; 0xd10 <vfprintf+0x2d4>
 d06:	b8 2c       	mov	r11, r8
 d08:	a3 2c       	mov	r10, r3
 d0a:	03 c0       	rjmp	.+6      	; 0xd12 <vfprintf+0x2d6>
 d0c:	b8 2c       	mov	r11, r8
 d0e:	01 c0       	rjmp	.+2      	; 0xd12 <vfprintf+0x2d6>
 d10:	b9 2c       	mov	r11, r9
 d12:	a4 fe       	sbrs	r10, 4
 d14:	0f c0       	rjmp	.+30     	; 0xd34 <vfprintf+0x2f8>
 d16:	fe 01       	movw	r30, r28
 d18:	e8 0d       	add	r30, r8
 d1a:	f1 1d       	adc	r31, r1
 d1c:	80 81       	ld	r24, Z
 d1e:	80 33       	cpi	r24, 0x30	; 48
 d20:	21 f4       	brne	.+8      	; 0xd2a <vfprintf+0x2ee>
 d22:	9a 2d       	mov	r25, r10
 d24:	99 7e       	andi	r25, 0xE9	; 233
 d26:	a9 2e       	mov	r10, r25
 d28:	09 c0       	rjmp	.+18     	; 0xd3c <vfprintf+0x300>
 d2a:	a2 fe       	sbrs	r10, 2
 d2c:	06 c0       	rjmp	.+12     	; 0xd3a <vfprintf+0x2fe>
 d2e:	b3 94       	inc	r11
 d30:	b3 94       	inc	r11
 d32:	04 c0       	rjmp	.+8      	; 0xd3c <vfprintf+0x300>
 d34:	8a 2d       	mov	r24, r10
 d36:	86 78       	andi	r24, 0x86	; 134
 d38:	09 f0       	breq	.+2      	; 0xd3c <vfprintf+0x300>
 d3a:	b3 94       	inc	r11
 d3c:	a3 fc       	sbrc	r10, 3
 d3e:	11 c0       	rjmp	.+34     	; 0xd62 <vfprintf+0x326>
 d40:	a0 fe       	sbrs	r10, 0
 d42:	06 c0       	rjmp	.+12     	; 0xd50 <vfprintf+0x314>
 d44:	b2 14       	cp	r11, r2
 d46:	88 f4       	brcc	.+34     	; 0xd6a <vfprintf+0x32e>
 d48:	28 0c       	add	r2, r8
 d4a:	92 2c       	mov	r9, r2
 d4c:	9b 18       	sub	r9, r11
 d4e:	0e c0       	rjmp	.+28     	; 0xd6c <vfprintf+0x330>
 d50:	b2 14       	cp	r11, r2
 d52:	60 f4       	brcc	.+24     	; 0xd6c <vfprintf+0x330>
 d54:	b6 01       	movw	r22, r12
 d56:	80 e2       	ldi	r24, 0x20	; 32
 d58:	90 e0       	ldi	r25, 0x00	; 0
 d5a:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 d5e:	b3 94       	inc	r11
 d60:	f7 cf       	rjmp	.-18     	; 0xd50 <vfprintf+0x314>
 d62:	b2 14       	cp	r11, r2
 d64:	18 f4       	brcc	.+6      	; 0xd6c <vfprintf+0x330>
 d66:	2b 18       	sub	r2, r11
 d68:	02 c0       	rjmp	.+4      	; 0xd6e <vfprintf+0x332>
 d6a:	98 2c       	mov	r9, r8
 d6c:	21 2c       	mov	r2, r1
 d6e:	a4 fe       	sbrs	r10, 4
 d70:	10 c0       	rjmp	.+32     	; 0xd92 <vfprintf+0x356>
 d72:	b6 01       	movw	r22, r12
 d74:	80 e3       	ldi	r24, 0x30	; 48
 d76:	90 e0       	ldi	r25, 0x00	; 0
 d78:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 d7c:	a2 fe       	sbrs	r10, 2
 d7e:	17 c0       	rjmp	.+46     	; 0xdae <vfprintf+0x372>
 d80:	a1 fc       	sbrc	r10, 1
 d82:	03 c0       	rjmp	.+6      	; 0xd8a <vfprintf+0x34e>
 d84:	88 e7       	ldi	r24, 0x78	; 120
 d86:	90 e0       	ldi	r25, 0x00	; 0
 d88:	02 c0       	rjmp	.+4      	; 0xd8e <vfprintf+0x352>
 d8a:	88 e5       	ldi	r24, 0x58	; 88
 d8c:	90 e0       	ldi	r25, 0x00	; 0
 d8e:	b6 01       	movw	r22, r12
 d90:	0c c0       	rjmp	.+24     	; 0xdaa <vfprintf+0x36e>
 d92:	8a 2d       	mov	r24, r10
 d94:	86 78       	andi	r24, 0x86	; 134
 d96:	59 f0       	breq	.+22     	; 0xdae <vfprintf+0x372>
 d98:	a1 fe       	sbrs	r10, 1
 d9a:	02 c0       	rjmp	.+4      	; 0xda0 <vfprintf+0x364>
 d9c:	8b e2       	ldi	r24, 0x2B	; 43
 d9e:	01 c0       	rjmp	.+2      	; 0xda2 <vfprintf+0x366>
 da0:	80 e2       	ldi	r24, 0x20	; 32
 da2:	a7 fc       	sbrc	r10, 7
 da4:	8d e2       	ldi	r24, 0x2D	; 45
 da6:	b6 01       	movw	r22, r12
 da8:	90 e0       	ldi	r25, 0x00	; 0
 daa:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 dae:	89 14       	cp	r8, r9
 db0:	38 f4       	brcc	.+14     	; 0xdc0 <vfprintf+0x384>
 db2:	b6 01       	movw	r22, r12
 db4:	80 e3       	ldi	r24, 0x30	; 48
 db6:	90 e0       	ldi	r25, 0x00	; 0
 db8:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 dbc:	9a 94       	dec	r9
 dbe:	f7 cf       	rjmp	.-18     	; 0xdae <vfprintf+0x372>
 dc0:	8a 94       	dec	r8
 dc2:	f3 01       	movw	r30, r6
 dc4:	e8 0d       	add	r30, r8
 dc6:	f1 1d       	adc	r31, r1
 dc8:	80 81       	ld	r24, Z
 dca:	b6 01       	movw	r22, r12
 dcc:	90 e0       	ldi	r25, 0x00	; 0
 dce:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 dd2:	81 10       	cpse	r8, r1
 dd4:	f5 cf       	rjmp	.-22     	; 0xdc0 <vfprintf+0x384>
 dd6:	22 20       	and	r2, r2
 dd8:	09 f4       	brne	.+2      	; 0xddc <vfprintf+0x3a0>
 dda:	42 ce       	rjmp	.-892    	; 0xa60 <vfprintf+0x24>
 ddc:	b6 01       	movw	r22, r12
 dde:	80 e2       	ldi	r24, 0x20	; 32
 de0:	90 e0       	ldi	r25, 0x00	; 0
 de2:	0e 94 15 07 	call	0xe2a	; 0xe2a <fputc>
 de6:	2a 94       	dec	r2
 de8:	f6 cf       	rjmp	.-20     	; 0xdd6 <vfprintf+0x39a>
 dea:	f6 01       	movw	r30, r12
 dec:	86 81       	ldd	r24, Z+6	; 0x06
 dee:	97 81       	ldd	r25, Z+7	; 0x07
 df0:	02 c0       	rjmp	.+4      	; 0xdf6 <vfprintf+0x3ba>
 df2:	8f ef       	ldi	r24, 0xFF	; 255
 df4:	9f ef       	ldi	r25, 0xFF	; 255
 df6:	2b 96       	adiw	r28, 0x0b	; 11
 df8:	e2 e1       	ldi	r30, 0x12	; 18
 dfa:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <__epilogue_restores__>

00000dfe <strnlen_P>:
 dfe:	fc 01       	movw	r30, r24
 e00:	05 90       	lpm	r0, Z+
 e02:	61 50       	subi	r22, 0x01	; 1
 e04:	70 40       	sbci	r23, 0x00	; 0
 e06:	01 10       	cpse	r0, r1
 e08:	d8 f7       	brcc	.-10     	; 0xe00 <strnlen_P+0x2>
 e0a:	80 95       	com	r24
 e0c:	90 95       	com	r25
 e0e:	8e 0f       	add	r24, r30
 e10:	9f 1f       	adc	r25, r31
 e12:	08 95       	ret

00000e14 <strnlen>:
 e14:	fc 01       	movw	r30, r24
 e16:	61 50       	subi	r22, 0x01	; 1
 e18:	70 40       	sbci	r23, 0x00	; 0
 e1a:	01 90       	ld	r0, Z+
 e1c:	01 10       	cpse	r0, r1
 e1e:	d8 f7       	brcc	.-10     	; 0xe16 <strnlen+0x2>
 e20:	80 95       	com	r24
 e22:	90 95       	com	r25
 e24:	8e 0f       	add	r24, r30
 e26:	9f 1f       	adc	r25, r31
 e28:	08 95       	ret

00000e2a <fputc>:
 e2a:	0f 93       	push	r16
 e2c:	1f 93       	push	r17
 e2e:	cf 93       	push	r28
 e30:	df 93       	push	r29
 e32:	fb 01       	movw	r30, r22
 e34:	23 81       	ldd	r18, Z+3	; 0x03
 e36:	21 fd       	sbrc	r18, 1
 e38:	03 c0       	rjmp	.+6      	; 0xe40 <fputc+0x16>
 e3a:	8f ef       	ldi	r24, 0xFF	; 255
 e3c:	9f ef       	ldi	r25, 0xFF	; 255
 e3e:	2c c0       	rjmp	.+88     	; 0xe98 <fputc+0x6e>
 e40:	22 ff       	sbrs	r18, 2
 e42:	16 c0       	rjmp	.+44     	; 0xe70 <fputc+0x46>
 e44:	46 81       	ldd	r20, Z+6	; 0x06
 e46:	57 81       	ldd	r21, Z+7	; 0x07
 e48:	24 81       	ldd	r18, Z+4	; 0x04
 e4a:	35 81       	ldd	r19, Z+5	; 0x05
 e4c:	42 17       	cp	r20, r18
 e4e:	53 07       	cpc	r21, r19
 e50:	44 f4       	brge	.+16     	; 0xe62 <fputc+0x38>
 e52:	a0 81       	ld	r26, Z
 e54:	b1 81       	ldd	r27, Z+1	; 0x01
 e56:	9d 01       	movw	r18, r26
 e58:	2f 5f       	subi	r18, 0xFF	; 255
 e5a:	3f 4f       	sbci	r19, 0xFF	; 255
 e5c:	31 83       	std	Z+1, r19	; 0x01
 e5e:	20 83       	st	Z, r18
 e60:	8c 93       	st	X, r24
 e62:	26 81       	ldd	r18, Z+6	; 0x06
 e64:	37 81       	ldd	r19, Z+7	; 0x07
 e66:	2f 5f       	subi	r18, 0xFF	; 255
 e68:	3f 4f       	sbci	r19, 0xFF	; 255
 e6a:	37 83       	std	Z+7, r19	; 0x07
 e6c:	26 83       	std	Z+6, r18	; 0x06
 e6e:	14 c0       	rjmp	.+40     	; 0xe98 <fputc+0x6e>
 e70:	8b 01       	movw	r16, r22
 e72:	ec 01       	movw	r28, r24
 e74:	fb 01       	movw	r30, r22
 e76:	00 84       	ldd	r0, Z+8	; 0x08
 e78:	f1 85       	ldd	r31, Z+9	; 0x09
 e7a:	e0 2d       	mov	r30, r0
 e7c:	09 95       	icall
 e7e:	89 2b       	or	r24, r25
 e80:	e1 f6       	brne	.-72     	; 0xe3a <fputc+0x10>
 e82:	d8 01       	movw	r26, r16
 e84:	16 96       	adiw	r26, 0x06	; 6
 e86:	8d 91       	ld	r24, X+
 e88:	9c 91       	ld	r25, X
 e8a:	17 97       	sbiw	r26, 0x07	; 7
 e8c:	01 96       	adiw	r24, 0x01	; 1
 e8e:	17 96       	adiw	r26, 0x07	; 7
 e90:	9c 93       	st	X, r25
 e92:	8e 93       	st	-X, r24
 e94:	16 97       	sbiw	r26, 0x06	; 6
 e96:	ce 01       	movw	r24, r28
 e98:	df 91       	pop	r29
 e9a:	cf 91       	pop	r28
 e9c:	1f 91       	pop	r17
 e9e:	0f 91       	pop	r16
 ea0:	08 95       	ret

00000ea2 <__ultoa_invert>:
 ea2:	fa 01       	movw	r30, r20
 ea4:	aa 27       	eor	r26, r26
 ea6:	28 30       	cpi	r18, 0x08	; 8
 ea8:	51 f1       	breq	.+84     	; 0xefe <__ultoa_invert+0x5c>
 eaa:	20 31       	cpi	r18, 0x10	; 16
 eac:	81 f1       	breq	.+96     	; 0xf0e <__ultoa_invert+0x6c>
 eae:	e8 94       	clt
 eb0:	6f 93       	push	r22
 eb2:	6e 7f       	andi	r22, 0xFE	; 254
 eb4:	6e 5f       	subi	r22, 0xFE	; 254
 eb6:	7f 4f       	sbci	r23, 0xFF	; 255
 eb8:	8f 4f       	sbci	r24, 0xFF	; 255
 eba:	9f 4f       	sbci	r25, 0xFF	; 255
 ebc:	af 4f       	sbci	r26, 0xFF	; 255
 ebe:	b1 e0       	ldi	r27, 0x01	; 1
 ec0:	3e d0       	rcall	.+124    	; 0xf3e <__ultoa_invert+0x9c>
 ec2:	b4 e0       	ldi	r27, 0x04	; 4
 ec4:	3c d0       	rcall	.+120    	; 0xf3e <__ultoa_invert+0x9c>
 ec6:	67 0f       	add	r22, r23
 ec8:	78 1f       	adc	r23, r24
 eca:	89 1f       	adc	r24, r25
 ecc:	9a 1f       	adc	r25, r26
 ece:	a1 1d       	adc	r26, r1
 ed0:	68 0f       	add	r22, r24
 ed2:	79 1f       	adc	r23, r25
 ed4:	8a 1f       	adc	r24, r26
 ed6:	91 1d       	adc	r25, r1
 ed8:	a1 1d       	adc	r26, r1
 eda:	6a 0f       	add	r22, r26
 edc:	71 1d       	adc	r23, r1
 ede:	81 1d       	adc	r24, r1
 ee0:	91 1d       	adc	r25, r1
 ee2:	a1 1d       	adc	r26, r1
 ee4:	20 d0       	rcall	.+64     	; 0xf26 <__ultoa_invert+0x84>
 ee6:	09 f4       	brne	.+2      	; 0xeea <__ultoa_invert+0x48>
 ee8:	68 94       	set
 eea:	3f 91       	pop	r19
 eec:	2a e0       	ldi	r18, 0x0A	; 10
 eee:	26 9f       	mul	r18, r22
 ef0:	11 24       	eor	r1, r1
 ef2:	30 19       	sub	r19, r0
 ef4:	30 5d       	subi	r19, 0xD0	; 208
 ef6:	31 93       	st	Z+, r19
 ef8:	de f6       	brtc	.-74     	; 0xeb0 <__ultoa_invert+0xe>
 efa:	cf 01       	movw	r24, r30
 efc:	08 95       	ret
 efe:	46 2f       	mov	r20, r22
 f00:	47 70       	andi	r20, 0x07	; 7
 f02:	40 5d       	subi	r20, 0xD0	; 208
 f04:	41 93       	st	Z+, r20
 f06:	b3 e0       	ldi	r27, 0x03	; 3
 f08:	0f d0       	rcall	.+30     	; 0xf28 <__ultoa_invert+0x86>
 f0a:	c9 f7       	brne	.-14     	; 0xefe <__ultoa_invert+0x5c>
 f0c:	f6 cf       	rjmp	.-20     	; 0xefa <__ultoa_invert+0x58>
 f0e:	46 2f       	mov	r20, r22
 f10:	4f 70       	andi	r20, 0x0F	; 15
 f12:	40 5d       	subi	r20, 0xD0	; 208
 f14:	4a 33       	cpi	r20, 0x3A	; 58
 f16:	18 f0       	brcs	.+6      	; 0xf1e <__ultoa_invert+0x7c>
 f18:	49 5d       	subi	r20, 0xD9	; 217
 f1a:	31 fd       	sbrc	r19, 1
 f1c:	40 52       	subi	r20, 0x20	; 32
 f1e:	41 93       	st	Z+, r20
 f20:	02 d0       	rcall	.+4      	; 0xf26 <__ultoa_invert+0x84>
 f22:	a9 f7       	brne	.-22     	; 0xf0e <__ultoa_invert+0x6c>
 f24:	ea cf       	rjmp	.-44     	; 0xefa <__ultoa_invert+0x58>
 f26:	b4 e0       	ldi	r27, 0x04	; 4
 f28:	a6 95       	lsr	r26
 f2a:	97 95       	ror	r25
 f2c:	87 95       	ror	r24
 f2e:	77 95       	ror	r23
 f30:	67 95       	ror	r22
 f32:	ba 95       	dec	r27
 f34:	c9 f7       	brne	.-14     	; 0xf28 <__ultoa_invert+0x86>
 f36:	00 97       	sbiw	r24, 0x00	; 0
 f38:	61 05       	cpc	r22, r1
 f3a:	71 05       	cpc	r23, r1
 f3c:	08 95       	ret
 f3e:	9b 01       	movw	r18, r22
 f40:	ac 01       	movw	r20, r24
 f42:	0a 2e       	mov	r0, r26
 f44:	06 94       	lsr	r0
 f46:	57 95       	ror	r21
 f48:	47 95       	ror	r20
 f4a:	37 95       	ror	r19
 f4c:	27 95       	ror	r18
 f4e:	ba 95       	dec	r27
 f50:	c9 f7       	brne	.-14     	; 0xf44 <__ultoa_invert+0xa2>
 f52:	62 0f       	add	r22, r18
 f54:	73 1f       	adc	r23, r19
 f56:	84 1f       	adc	r24, r20
 f58:	95 1f       	adc	r25, r21
 f5a:	a0 1d       	adc	r26, r0
 f5c:	08 95       	ret

00000f5e <__prologue_saves__>:
 f5e:	2f 92       	push	r2
 f60:	3f 92       	push	r3
 f62:	4f 92       	push	r4
 f64:	5f 92       	push	r5
 f66:	6f 92       	push	r6
 f68:	7f 92       	push	r7
 f6a:	8f 92       	push	r8
 f6c:	9f 92       	push	r9
 f6e:	af 92       	push	r10
 f70:	bf 92       	push	r11
 f72:	cf 92       	push	r12
 f74:	df 92       	push	r13
 f76:	ef 92       	push	r14
 f78:	ff 92       	push	r15
 f7a:	0f 93       	push	r16
 f7c:	1f 93       	push	r17
 f7e:	cf 93       	push	r28
 f80:	df 93       	push	r29
 f82:	cd b7       	in	r28, 0x3d	; 61
 f84:	de b7       	in	r29, 0x3e	; 62
 f86:	ca 1b       	sub	r28, r26
 f88:	db 0b       	sbc	r29, r27
 f8a:	0f b6       	in	r0, 0x3f	; 63
 f8c:	f8 94       	cli
 f8e:	de bf       	out	0x3e, r29	; 62
 f90:	0f be       	out	0x3f, r0	; 63
 f92:	cd bf       	out	0x3d, r28	; 61
 f94:	09 94       	ijmp

00000f96 <__epilogue_restores__>:
 f96:	2a 88       	ldd	r2, Y+18	; 0x12
 f98:	39 88       	ldd	r3, Y+17	; 0x11
 f9a:	48 88       	ldd	r4, Y+16	; 0x10
 f9c:	5f 84       	ldd	r5, Y+15	; 0x0f
 f9e:	6e 84       	ldd	r6, Y+14	; 0x0e
 fa0:	7d 84       	ldd	r7, Y+13	; 0x0d
 fa2:	8c 84       	ldd	r8, Y+12	; 0x0c
 fa4:	9b 84       	ldd	r9, Y+11	; 0x0b
 fa6:	aa 84       	ldd	r10, Y+10	; 0x0a
 fa8:	b9 84       	ldd	r11, Y+9	; 0x09
 faa:	c8 84       	ldd	r12, Y+8	; 0x08
 fac:	df 80       	ldd	r13, Y+7	; 0x07
 fae:	ee 80       	ldd	r14, Y+6	; 0x06
 fb0:	fd 80       	ldd	r15, Y+5	; 0x05
 fb2:	0c 81       	ldd	r16, Y+4	; 0x04
 fb4:	1b 81       	ldd	r17, Y+3	; 0x03
 fb6:	aa 81       	ldd	r26, Y+2	; 0x02
 fb8:	b9 81       	ldd	r27, Y+1	; 0x01
 fba:	ce 0f       	add	r28, r30
 fbc:	d1 1d       	adc	r29, r1
 fbe:	0f b6       	in	r0, 0x3f	; 63
 fc0:	f8 94       	cli
 fc2:	de bf       	out	0x3e, r29	; 62
 fc4:	0f be       	out	0x3f, r0	; 63
 fc6:	cd bf       	out	0x3d, r28	; 61
 fc8:	ed 01       	movw	r28, r26
 fca:	08 95       	ret

00000fcc <_exit>:
 fcc:	f8 94       	cli

00000fce <__stop_program>:
 fce:	ff cf       	rjmp	.-2      	; 0xfce <__stop_program>
